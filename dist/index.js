/*! For license information please see index.js.LICENSE.txt */
(()=>{"use strict";var e={600:(e,t,n)=>{n.r(t),n.d(t,{ADI:()=>x,CmsisDAP:()=>A,CortexM:()=>P,DAPLink:()=>T,DEFAULT_CLOCK_FREQUENCY:()=>g,FPBCtrlMask:()=>b,HID:()=>_,USB:()=>D,WebUSB:()=>M});var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function i(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function o(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}u((r=r.apply(e,t||[])).next())}))}function s(e,t){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}function a(){}function u(){u.init.call(this)}function c(e){return void 0===e._maxListeners?u.defaultMaxListeners:e._maxListeners}function h(e,t,n){if(t)e.call(n);else for(var r=e.length,i=m(e,r),o=0;o<r;++o)i[o].call(n)}function f(e,t,n,r){if(t)e.call(n,r);else for(var i=e.length,o=m(e,i),s=0;s<i;++s)o[s].call(n,r)}function d(e,t,n,r,i){if(t)e.call(n,r,i);else for(var o=e.length,s=m(e,o),a=0;a<o;++a)s[a].call(n,r,i)}function l(e,t,n,r,i,o){if(t)e.call(n,r,i,o);else for(var s=e.length,a=m(e,s),u=0;u<s;++u)a[u].call(n,r,i,o)}function p(e,t,n,r){if(t)e.apply(n,r);else for(var i=e.length,o=m(e,i),s=0;s<i;++s)o[s].apply(n,r)}function v(e,t,n,r){var i,o,s,u;if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');if((o=e._events)?(o.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),o=e._events),s=o[t]):(o=e._events=new a,e._eventsCount=0),s){if("function"==typeof s?s=o[t]=r?[n,s]:[s,n]:r?s.unshift(n):s.push(n),!s.warned&&(i=c(e))&&i>0&&s.length>i){s.warned=!0;var h=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+t+" listeners added. Use emitter.setMaxListeners() to increase limit");h.name="MaxListenersExceededWarning",h.emitter=e,h.type=t,h.count=s.length,u=h,"function"==typeof console.warn?console.warn(u):console.log(u)}}else s=o[t]=n,++e._eventsCount;return e}function w(e,t,n){var r=!1;function i(){e.removeListener(t,i),r||(r=!0,n.apply(e,arguments))}return i.listener=n,i}function y(e){var t=this._events;if(t){var n=t[e];if("function"==typeof n)return 1;if(n)return n.length}return 0}function m(e,t){for(var n=new Array(t);t--;)n[t]=e[t];return n}a.prototype=Object.create(null),u.EventEmitter=u,u.usingDomains=!1,u.prototype.domain=void 0,u.prototype._events=void 0,u.prototype._maxListeners=void 0,u.defaultMaxListeners=10,u.init=function(){this.domain=null,u.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new a,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},u.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},u.prototype.getMaxListeners=function(){return c(this)},u.prototype.emit=function(e){var t,n,r,i,o,s,a,u="error"===e;if(s=this._events)u=u&&null==s.error;else if(!u)return!1;if(a=this.domain,u){if(t=arguments[1],!a){if(t instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}return t||(t=new Error('Uncaught, unspecified "error" event')),t.domainEmitter=this,t.domain=a,t.domainThrown=!1,a.emit("error",t),!1}if(!(n=s[e]))return!1;var v="function"==typeof n;switch(r=arguments.length){case 1:h(n,v,this);break;case 2:f(n,v,this,arguments[1]);break;case 3:d(n,v,this,arguments[1],arguments[2]);break;case 4:l(n,v,this,arguments[1],arguments[2],arguments[3]);break;default:for(i=new Array(r-1),o=1;o<r;o++)i[o-1]=arguments[o];p(n,v,this,i)}return!0},u.prototype.addListener=function(e,t){return v(this,e,t,!1)},u.prototype.on=u.prototype.addListener,u.prototype.prependListener=function(e,t){return v(this,e,t,!0)},u.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.on(e,w(this,e,t)),this},u.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,w(this,e,t)),this},u.prototype.removeListener=function(e,t){var n,r,i,o,s;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if(!(r=this._events))return this;if(!(n=r[e]))return this;if(n===t||n.listener&&n.listener===t)0==--this._eventsCount?this._events=new a:(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length;o-- >0;)if(n[o]===t||n[o].listener&&n[o].listener===t){s=n[o].listener,i=o;break}if(i<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new a,this;delete r[e]}else!function(e,t){for(var n=t,r=n+1,i=e.length;r<i;n+=1,r+=1)e[n]=e[r];e.pop()}(n,i);r.removeListener&&this.emit("removeListener",e,s||t)}return this},u.prototype.removeAllListeners=function(e){var t,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new a,this._eventsCount=0):n[e]&&(0==--this._eventsCount?this._events=new a:delete n[e]),this;if(0===arguments.length){for(var r,i=Object.keys(n),o=0;o<i.length;++o)"removeListener"!==(r=i[o])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=new a,this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(t)do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},u.prototype.listeners=function(e){var t,n=this._events;return n&&(t=n[e])?"function"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(t):[]},u.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):y.call(e,t)},u.prototype.listenerCount=y,u.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var b,g=1e7,C=function(){function e(){this.locked=!1}return e.prototype.lock=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return this.locked?[4,new Promise((function(e){return setTimeout(e,1)}))]:[3,2];case 1:return e.sent(),[3,0];case 2:return this.locked=!0,[2]}}))}))},e.prototype.unlock=function(){this.locked=!1},e}(),A=function(e){function t(t,n,r){void 0===n&&(n=0),void 0===r&&(r=1e7);var i=e.call(this)||this;i.transport=t,i.mode=n,i.clockFrequency=r,i.connected=!1,i.sendMutex=new C,i.blockSize=i.transport.packetSize-4-1;var o=i.transport.packetSize-2-1;return i.operationCount=Math.floor(o/5),i}return i(t,e),t.prototype.bufferSourceToUint8Array=function(e,t){if(!t)return new Uint8Array([e]);var n=void 0!==t.buffer?t.buffer:t,r=new Uint8Array(n.byteLength+1);return r.set([e]),r.set(new Uint8Array(n),1),r},t.prototype.selectProtocol=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return t=2===e?59196:59294,[4,this.swjSequence(new Uint8Array([255,255,255,255,255,255,255]))];case 1:return n.sent(),[4,this.swjSequence(new Uint16Array([t]))];case 2:return n.sent(),[4,this.swjSequence(new Uint8Array([255,255,255,255,255,255,255]))];case 3:return n.sent(),[4,this.swjSequence(new Uint8Array([0]))];case 4:return n.sent(),[2]}}))}))},t.prototype.send=function(e,t){return o(this,void 0,void 0,(function(){var n,r;return s(this,(function(i){switch(i.label){case 0:return n=this.bufferSourceToUint8Array(e,t),[4,this.sendMutex.lock()];case 1:i.sent(),i.label=2;case 2:return i.trys.push([2,,5,6]),[4,this.transport.write(n)];case 3:return i.sent(),[4,this.transport.read()];case 4:if((r=i.sent()).getUint8(0)!==e)throw new Error("Bad response for "+e+" -> "+r.getUint8(0));switch(e){case 3:case 8:case 9:case 10:case 17:case 18:case 19:case 29:case 23:case 24:case 26:case 21:case 22:case 4:if(0!==r.getUint8(1))throw new Error("Bad status for "+e+" -> "+r.getUint8(1))}return[2,r];case 5:return this.sendMutex.unlock(),[7];case 6:return[2]}}))}))},t.prototype.clearAbort=function(e){return void 0===e&&(e=30),o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.send(8,new Uint8Array([0,e]))];case 1:return t.sent(),[2]}}))}))},t.prototype.dapInfo=function(e){return o(this,void 0,void 0,(function(){var t,n,r,i;return s(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,4]),[4,this.send(0,new Uint8Array([e]))];case 1:if(t=o.sent(),0===(n=t.getUint8(1)))return[2,""];switch(e){case 240:case 254:case 255:case 253:if(1===n)return[2,t.getUint8(2)];if(2===n)return[2,t.getUint16(2)];if(4===n)return[2,t.getUint32(2)]}return r=Array.prototype.slice.call(new Uint8Array(t.buffer,2,n)),[2,String.fromCharCode.apply(null,r)];case 2:return i=o.sent(),[4,this.clearAbort()];case 3:throw o.sent(),i;case 4:return[2]}}))}))},t.prototype.swjSequence=function(e,t){return void 0===t&&(t=8*e.byteLength),o(this,void 0,void 0,(function(){var n,r;return s(this,(function(i){switch(i.label){case 0:n=this.bufferSourceToUint8Array(t,e),i.label=1;case 1:return i.trys.push([1,3,,5]),[4,this.send(18,n)];case 2:return i.sent(),[3,5];case 3:return r=i.sent(),[4,this.clearAbort()];case 4:throw i.sent(),r;case 5:return[2]}}))}))},t.prototype.swjClock=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,4]),[4,this.send(17,new Uint8Array([255&e,(65280&e)>>8,(16711680&e)>>16,(4278190080&e)>>24]))];case 1:return n.sent(),[3,4];case 2:return t=n.sent(),[4,this.clearAbort()];case 3:throw n.sent(),t;case 4:return[2]}}))}))},t.prototype.swjPins=function(e,t,n){return o(this,void 0,void 0,(function(){var r;return s(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,4]),[4,this.send(16,new Uint8Array([e,t,255&n,(65280&n)>>8,(16711680&n)>>16,(4278190080&n)>>24]))];case 1:return[2,i.sent().getUint8(1)];case 2:return r=i.sent(),[4,this.clearAbort()];case 3:throw i.sent(),r;case 4:return[2]}}))}))},t.prototype.dapDelay=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,4]),[4,this.send(9,new Uint8Array([255&e,(65280&e)>>8]))];case 1:return n.sent(),[3,4];case 2:return t=n.sent(),[4,this.clearAbort()];case 3:throw n.sent(),t;case 4:return[2]}}))}))},t.prototype.configureTransfer=function(e,t,n){return o(this,void 0,void 0,(function(){var r,i,o;return s(this,(function(s){switch(s.label){case 0:r=new Uint8Array(5),(i=new DataView(r.buffer)).setUint8(0,e),i.setUint16(1,t,!0),i.setUint16(3,n,!0),s.label=1;case 1:return s.trys.push([1,3,,5]),[4,this.send(4,r)];case 2:return s.sent(),[3,5];case 3:return o=s.sent(),[4,this.clearAbort()];case 4:throw s.sent(),o;case 5:return[2]}}))}))},t.prototype.connect=function(){return o(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:return!0===this.connected?[2]:[4,this.transport.open()];case 1:r.sent(),r.label=2;case 2:return r.trys.push([2,5,,8]),[4,this.send(17,new Uint32Array([this.clockFrequency]))];case 3:return r.sent(),[4,this.send(2,new Uint8Array([this.mode]))];case 4:if(0===(e=r.sent()).getUint8(1)||0!==this.mode&&e.getUint8(1)!==this.mode)throw new Error("Mode not enabled.");return[3,8];case 5:return t=r.sent(),[4,this.clearAbort()];case 6:return r.sent(),[4,this.transport.close()];case 7:throw r.sent(),t;case 8:return r.trys.push([8,11,,13]),[4,this.configureTransfer(0,100,0)];case 9:return r.sent(),[4,this.selectProtocol(1)];case 10:return r.sent(),[3,13];case 11:return n=r.sent(),[4,this.transport.close()];case 12:throw r.sent(),n;case 13:return this.connected=!0,[2]}}))}))},t.prototype.disconnect=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:if(!1===this.connected)return[2];t.label=1;case 1:return t.trys.push([1,3,,5]),[4,this.send(3)];case 2:return t.sent(),[3,5];case 3:return e=t.sent(),[4,this.clearAbort()];case 4:throw t.sent(),e;case 5:return[4,this.transport.close()];case 6:return t.sent(),this.connected=!1,[2]}}))}))},t.prototype.reconnect=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.disconnect()];case 1:return e.sent(),[4,new Promise((function(e){return setTimeout(e,100)}))];case 2:return e.sent(),[4,this.connect()];case 3:return e.sent(),[2]}}))}))},t.prototype.reset=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,4]),[4,this.send(10)];case 1:return[2,1===t.sent().getUint8(2)];case 2:return e=t.sent(),[4,this.clearAbort()];case 3:throw t.sent(),e;case 4:return[2]}}))}))},t.prototype.transfer=function(e,t,n,r){return void 0===t&&(t=2),void 0===n&&(n=0),void 0===r&&(r=0),o(this,void 0,void 0,(function(){var i,o,a,u,c,h,f;return s(this,(function(s){switch(s.label){case 0:i="number"==typeof e?[{port:e,mode:t,register:n,value:r}]:e,o=new Uint8Array(2+5*i.length),(a=new DataView(o.buffer)).setUint8(0,0),a.setUint8(1,i.length),i.forEach((function(e,t){var n=2+5*t;a.setUint8(n,e.port|e.mode|e.register),a.setUint32(n+1,e.value||0,!0)})),s.label=1;case 1:return s.trys.push([1,3,,5]),[4,this.send(5,o)];case 2:if((u=s.sent()).getUint8(1)!==i.length)throw new Error("Transfer count mismatch");if(2===(c=u.getUint8(2)))throw new Error("Transfer response WAIT");if(4===c)throw new Error("Transfer response FAULT");if(8===c)throw new Error("Transfer response PROTOCOL_ERROR");if(16===c)throw new Error("Transfer response VALUE_MISMATCH");if(7===c)throw new Error("Transfer response NO_ACK");return"number"==typeof e?[2,u.getUint32(3,!0)]:(h=4*i.length,[2,new Uint32Array(u.buffer.slice(3,3+h))]);case 3:return f=s.sent(),[4,this.clearAbort()];case 4:throw s.sent(),f;case 5:return[2]}}))}))},t.prototype.transferBlock=function(e,t,n){return o(this,void 0,void 0,(function(){var r,i,o,a,u,c,h,f;return s(this,(function(s){switch(s.label){case 0:o=4,"number"==typeof n?(r=n,i=2):(r=n.length,i=0,o+=n.byteLength),a=new Uint8Array(o),(u=new DataView(a.buffer)).setUint8(0,0),u.setUint16(1,r,!0),u.setUint8(3,e|i|t),"number"!=typeof n&&n.forEach((function(e,t){var n=4+4*t;u.setUint32(n,e,!0)})),s.label=1;case 1:return s.trys.push([1,3,,5]),[4,this.send(6,u)];case 2:if((c=s.sent()).getUint16(1,!0)!==r)throw new Error("Transfer count mismatch");if(2===(h=c.getUint8(3)))throw new Error("Transfer response WAIT");if(4===h)throw new Error("Transfer response FAULT");if(8===h)throw new Error("Transfer response PROTOCOL_ERROR");if(7===h)throw new Error("Transfer response NO_ACK");return"number"==typeof n?[2,new Uint32Array(c.buffer.slice(4,4+4*r))]:[3,5];case 3:return f=s.sent(),[4,this.clearAbort()];case 4:throw s.sent(),f;case 5:return[2,void 0]}}))}))},t}(u),E=/[\xc0-\xff][\x80-\xbf]*$/g,L=/[\xc0-\xff][\x80-\xbf]*/g,U=function(){function e(){}return e.prototype.decode=function(e){var t=Array.prototype.slice.call(new Uint8Array(e)),n=String.fromCodePoint.apply(void 0,t);this.partialChar&&(n=""+this.partialChar+n,this.partialChar=void 0);var r=n.match(E);if(r){var i=r[0].length;this.partialChar=n.slice(-i),n=n.slice(0,-i)}return n.replace(L,this.decoderReplacer)},e.prototype.decoderReplacer=function(e){var t=e.codePointAt(0)<<24,n=Math.clz32(~t),r=0,i=e.length,o="";if(n<5&&i>=n){for(t=t<<n>>>24+n,r=1;r<n;r+=1)t=t<<6|63&e.codePointAt(r);t<=65535?o+=String.fromCodePoint(t):t<=1114111?(t-=65536,o+=String.fromCodePoint(55296+(t>>10),56320+(1023&t))):r=0}for(;r<i;r+=1)o+="�";return o},e}(),S=new U,T=function(e){function t(n,r,i){void 0===r&&(r=0),void 0===i&&(i=1e7);var a=e.call(this,n,r,i)||this;return a.serialPolling=!1,a.serialListeners=!1,a.on("newListener",(function(e){return o(a,void 0,void 0,(function(){return s(this,(function(n){return e===t.EVENT_SERIAL_DATA&&0===this.listenerCount(e)&&(this.serialListeners=!0),[2]}))}))})),a.on("removeListener",(function(e){e===t.EVENT_SERIAL_DATA&&0===a.listenerCount(e)&&(a.serialListeners=!1)})),a}return i(t,e),t.prototype.isBufferBinary=function(e){for(var t=Array.prototype.slice.call(new Uint16Array(e,0,50)),n=String.fromCharCode.apply(null,t),r=0;r<n.length;r++){var i=n.charCodeAt(r);if(65533===i||i<=8)return!0}return!1},t.prototype.writeBuffer=function(e,n,r){return void 0===r&&(r=0),o(this,void 0,void 0,(function(){var i,o,a,u;return s(this,(function(s){switch(s.label){case 0:i=Math.min(e.byteLength,r+n),o=e.slice(r,i),(a=new Uint8Array(o.byteLength+1)).set([o.byteLength]),a.set(new Uint8Array(o),1),s.label=1;case 1:return s.trys.push([1,3,,5]),[4,this.send(140,a)];case 2:return s.sent(),[3,5];case 3:return u=s.sent(),[4,this.clearAbort()];case 4:throw s.sent(),u;case 5:return this.emit(t.EVENT_PROGRESS,r/e.byteLength),i<e.byteLength?[2,this.writeBuffer(e,n,i)]:[2]}}))}))},t.prototype.flash=function(e,n){return void 0===n&&(n=62),o(this,void 0,void 0,(function(){var r,i,o;return s(this,(function(s){switch(s.label){case 0:r=function(e){return void 0!==e.buffer}(e)?e.buffer:e,i=this.isBufferBinary(r)?0:1,s.label=1;case 1:return s.trys.push([1,6,,8]),[4,this.send(138,new Uint32Array([i]))];case 2:if(0!==s.sent().getUint8(1))throw new Error("Flash error");return[4,this.writeBuffer(r,n)];case 3:return s.sent(),this.emit(t.EVENT_PROGRESS,1),[4,this.send(139)];case 4:if(0!==s.sent().getUint8(1))throw new Error("Flash error");return[4,this.send(137)];case 5:return s.sent(),[3,8];case 6:return o=s.sent(),[4,this.clearAbort()];case 7:throw s.sent(),o;case 8:return[2]}}))}))},t.prototype.getSerialBaudrate=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,4]),[4,this.send(129)];case 1:return[2,t.sent().getUint32(1,!0)];case 2:return e=t.sent(),[4,this.clearAbort()];case 3:throw t.sent(),e;case 4:return[2]}}))}))},t.prototype.setSerialBaudrate=function(e){return void 0===e&&(e=9600),o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,4]),[4,this.send(130,new Uint32Array([e]))];case 1:return n.sent(),[3,4];case 2:return t=n.sent(),[4,this.clearAbort()];case 3:throw n.sent(),t;case 4:return[2]}}))}))},t.prototype.serialWrite=function(e){return o(this,void 0,void 0,(function(){var t,n;return s(this,(function(r){switch(r.label){case 0:(t=e.split("").map((function(e){return e.charCodeAt(0)}))).unshift(t.length),r.label=1;case 1:return r.trys.push([1,3,,5]),[4,this.send(132,new Uint8Array(t).buffer)];case 2:return r.sent(),[3,5];case 3:return n=r.sent(),[4,this.clearAbort()];case 4:throw r.sent(),n;case 5:return[2]}}))}))},t.prototype.serialRead=function(){return o(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,4]),[4,this.send(131)];case 1:return 0===(e=r.sent()).byteLength||131!==e.getUint8(0)||0===(t=e.getUint8(1))?[2,void 0]:[2,e.buffer.slice(2,2+t)];case 2:return n=r.sent(),[4,this.clearAbort()];case 3:throw r.sent(),n;case 4:return[2]}}))}))},t.prototype.startSerialRead=function(e,n){return void 0===e&&(e=100),void 0===n&&(n=!0),o(this,void 0,void 0,(function(){var r,i,o;return s(this,(function(s){switch(s.label){case 0:this.serialPolling=!0,s.label=1;case 1:return this.serialPolling?this.serialListeners?(r=this.connected,!1!==this.connected||!0!==n?[3,3]:[4,this.connect()]):[3,7]:[3,9];case 2:s.sent(),s.label=3;case 3:return[4,this.serialRead()];case 4:return i=s.sent(),!1!==r||!0!==n?[3,6]:[4,this.disconnect()];case 5:s.sent(),s.label=6;case 6:void 0!==i&&(o=S.decode(i),this.emit(t.EVENT_SERIAL_DATA,o)),s.label=7;case 7:return[4,new Promise((function(t){return setTimeout(t,e)}))];case 8:return s.sent(),[3,1];case 9:return[2]}}))}))},t.prototype.stopSerialRead=function(){this.serialPolling=!1},t.EVENT_PROGRESS="progress",t.EVENT_SERIAL_DATA="serial",t}(A),x=function(){function e(e,t,n){void 0===t&&(t=0),void 0===n&&(n=1e7),this.proxy=void 0!==e.open?new A(e,t,n):e}return e.prototype.waitDelay=function(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=100),o(this,void 0,void 0,(function(){var r;return s(this,(function(i){switch(i.label){case 0:r=!0,t>0&&setTimeout((function(){if(r)throw r=!1,new Error("Wait timed out")}),t),i.label=1;case 1:return r?[4,e()]:[3,5];case 2:return!0===i.sent()?(r=!1,[2]):n>0?[4,new Promise((function(e){return setTimeout(e,t)}))]:[3,4];case 3:i.sent(),i.label=4;case 4:return[3,1];case 5:return[2]}}))}))},e.prototype.concatTypedArray=function(e){if(1===e.length)return e[0];for(var t=0,n=0,r=e;n<r.length;n++)t+=r[n].length;for(var i=new Uint32Array(t),o=0,s=0;o<e.length;o++)i.set(e[o],s),s+=e[o].length;return i},e.prototype.readDPCommand=function(e){return[{mode:2,port:0,register:e}]},e.prototype.writeDPCommand=function(e,t){if(8===e){if(t===this.selectedAddress)return[];this.selectedAddress=t}return[{mode:0,port:0,register:e,value:t}]},e.prototype.readAPCommand=function(e){var t=4278190080&e|240&e;return this.writeDPCommand(8,t).concat({mode:2,port:1,register:e})},e.prototype.writeAPCommand=function(e,t){if(0===e){if(t===this.cswValue)return[];this.cswValue=t}var n=4278190080&e|240&e;return this.writeDPCommand(8,n).concat({mode:0,port:1,register:e,value:t})},e.prototype.readMem16Command=function(e){return this.writeAPCommand(0,587202641).concat(this.writeAPCommand(4,e)).concat(this.readAPCommand(12))},e.prototype.writeMem16Command=function(e,t){return this.writeAPCommand(0,587202641).concat(this.writeAPCommand(4,e)).concat(this.writeAPCommand(12,t))},e.prototype.readMem32Command=function(e){return this.writeAPCommand(0,587202642).concat(this.writeAPCommand(4,e)).concat(this.readAPCommand(12))},e.prototype.writeMem32Command=function(e,t){return this.writeAPCommand(0,587202642).concat(this.writeAPCommand(4,e)).concat(this.writeAPCommand(12,t))},e.prototype.transferSequence=function(e){return o(this,void 0,void 0,(function(){var t,n,r,i;return s(this,(function(o){switch(o.label){case 0:t=(t=[]).concat.apply(t,e),n=[],o.label=1;case 1:return t.length?(r=t.splice(0,this.proxy.operationCount),[4,this.proxy.transfer(r)]):[3,3];case 2:return i=o.sent(),n.push(i),[3,1];case 3:return[2,this.concatTypedArray(n)]}}))}))},e.prototype.connect=function(){return o(this,void 0,void 0,(function(){var e,t=this;return s(this,(function(n){switch(n.label){case 0:return e=-1610612736,[4,this.proxy.connect()];case 1:return n.sent(),[4,this.readDP(0)];case 2:return n.sent(),[4,this.transferSequence([this.writeDPCommand(0,4),this.writeDPCommand(8,0),this.writeDPCommand(4,1342177280)])];case 3:return n.sent(),[4,this.waitDelay((function(){return o(t,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.readDP(4)];case 1:return[2,(t.sent()&e)===e]}}))}))}))];case 4:return n.sent(),[2]}}))}))},e.prototype.disconnect=function(){return this.proxy.disconnect()},e.prototype.reconnect=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.disconnect()];case 1:return e.sent(),[4,new Promise((function(e){return setTimeout(e,100)}))];case 2:return e.sent(),[4,this.connect()];case 3:return e.sent(),[2]}}))}))},e.prototype.reset=function(){return this.proxy.reset()},e.prototype.readDP=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.proxy.transfer(this.readDPCommand(e))];case 1:return[2,t.sent()[0]]}}))}))},e.prototype.writeDP=function(e,t){return o(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,this.proxy.transfer(this.writeDPCommand(e,t))];case 1:return n.sent(),[2]}}))}))},e.prototype.readAP=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.proxy.transfer(this.readAPCommand(e))];case 1:return[2,t.sent()[0]]}}))}))},e.prototype.writeAP=function(e,t){return o(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,this.proxy.transfer(this.writeAPCommand(e,t))];case 1:return n.sent(),[2]}}))}))},e.prototype.readMem16=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.proxy.transfer(this.readMem16Command(e))];case 1:return[2,t.sent()[0]]}}))}))},e.prototype.writeMem16=function(e,t){return o(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return t<<=(2&e)<<3,[4,this.proxy.transfer(this.writeMem16Command(e,t))];case 1:return n.sent(),[2]}}))}))},e.prototype.readMem32=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.proxy.transfer(this.readMem32Command(e))];case 1:return[2,t.sent()[0]]}}))}))},e.prototype.writeMem32=function(e,t){return o(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,this.proxy.transfer(this.writeMem32Command(e,t))];case 1:return n.sent(),[2]}}))}))},e.prototype.readBlock=function(e,t){return o(this,void 0,void 0,(function(){var n,r,i,o;return s(this,(function(s){switch(s.label){case 0:return[4,this.transferSequence([this.writeAPCommand(0,587202642),this.writeAPCommand(4,e)])];case 1:s.sent(),n=[],r=t,s.label=2;case 2:return r>0?(i=Math.min(r,Math.floor(this.proxy.blockSize/4)),[4,this.proxy.transferBlock(1,12,i)]):[3,4];case 3:return o=s.sent(),n.push(o),r-=i,[3,2];case 4:return[2,this.concatTypedArray(n)]}}))}))},e.prototype.writeBlock=function(e,t){return o(this,void 0,void 0,(function(){var n,r;return s(this,(function(i){switch(i.label){case 0:return[4,this.transferSequence([this.writeAPCommand(0,587202642),this.writeAPCommand(4,e)])];case 1:i.sent(),n=0,i.label=2;case 2:return n<t.length?(r=t.slice(n,n+Math.floor(this.proxy.blockSize/4)),[4,this.proxy.transferBlock(1,12,r)]):[3,4];case 3:return i.sent(),n+=Math.floor(this.proxy.blockSize/4),[3,2];case 4:return[2]}}))}))},e}(),P=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.enableDebug=function(){return this.writeMem32(3758157296,-1604386815)},t.prototype.readCoreRegisterCommand=function(e){return this.writeMem32Command(3758157300,e).concat(this.readMem32Command(3758157296)).concat(this.readMem32Command(3758157304))},t.prototype.writeCoreRegisterCommand=function(e,t){return this.writeMem32Command(3758157304,t).concat(this.writeMem32Command(3758157300,65536|e))},t.prototype.getState=function(){return o(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:return[4,this.readMem32(3758157296)];case 1:return e=r.sent(),t=524288&e?1:262144&e?2:131072&e?3:4,33554432&e?[4,this.readMem32(3758157296)]:[3,3];case 2:return 33554432&(n=r.sent())&&!(16777216&n)?[2,0]:[2,t];case 3:return[2,t];case 4:return[2]}}))}))},t.prototype.isHalted=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.readMem32(3758157296)];case 1:return[2,!!(131072&e.sent())]}}))}))},t.prototype.halt=function(e,t){return void 0===e&&(e=!0),void 0===t&&(t=0),o(this,void 0,void 0,(function(){var n=this;return s(this,(function(r){switch(r.label){case 0:return[4,this.isHalted()];case 1:return r.sent()?[2]:[4,this.writeMem32(3758157296,-1604386813)];case 2:return r.sent(),e?[2,this.waitDelay((function(){return n.isHalted()}),t)]:[2]}}))}))},t.prototype.resume=function(e,t){return void 0===e&&(e=!0),void 0===t&&(t=0),o(this,void 0,void 0,(function(){var n=this;return s(this,(function(r){switch(r.label){case 0:return[4,this.isHalted()];case 1:return r.sent()?[4,this.writeMem32(3758157104,7)]:[2];case 2:return r.sent(),[4,this.enableDebug()];case 3:return r.sent(),e?[2,this.waitDelay((function(){return o(n,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.isHalted()];case 1:return[2,!e.sent()]}}))}))}),t)]:[2]}}))}))},t.prototype.readCoreRegister=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,this.transferSequence([this.writeMem32Command(3758157300,e),this.readMem32Command(3758157296)])];case 1:if(!(65536&t.sent()[0]))throw new Error("Register not ready");return[2,this.readMem32(3758157304)]}}))}))},t.prototype.readCoreRegisters=function(e){return o(this,void 0,void 0,(function(){var t,n,r,i,o;return s(this,(function(s){switch(s.label){case 0:t=[],n=0,r=e,s.label=1;case 1:return n<r.length?(i=r[n],[4,this.readCoreRegister(i)]):[3,4];case 2:o=s.sent(),t.push(o),s.label=3;case 3:return n++,[3,1];case 4:return[2,t]}}))}))},t.prototype.writeCoreRegister=function(e,t){return o(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,this.transferSequence([this.writeMem32Command(3758157304,t),this.writeMem32Command(3758157300,65536|e),this.readMem32Command(3758157296)])];case 1:if(!(65536&n.sent()[0]))throw new Error("Register not ready");return[2]}}))}))},t.prototype.execute=function(e,t,n,r,i){void 0===i&&(i=e+1);for(var a=[],u=5;u<arguments.length;u++)a[u-5]=arguments[u];return o(this,void 0,void 0,(function(){var o,u,c,h=this;return s(this,(function(s){switch(s.label){case 0:for(48682!==t[t.length-1]&&((o=new Uint32Array(t.length+1)).set(t),o.set([48682],t.length-1),t=o),u=[this.writeCoreRegisterCommand(13,n),this.writeCoreRegisterCommand(15,r),this.writeCoreRegisterCommand(14,i)],c=0;c<Math.min(a.length,12);c++)u.push(this.writeCoreRegisterCommand(c,a[c]));return u.push(this.writeCoreRegisterCommand(16,16777216)),[4,this.halt()];case 1:return s.sent(),[4,this.transferSequence(u)];case 2:return s.sent(),[4,this.writeBlock(e,t)];case 3:return s.sent(),[4,this.resume(!1)];case 4:return s.sent(),[4,this.waitDelay((function(){return h.isHalted()}),1e4)];case 5:return s.sent(),[2]}}))}))},t.prototype.softReset=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.writeMem32(3758157308,0)];case 1:return e.sent(),[2,this.writeMem32(3758157068,100270084)]}}))}))},t.prototype.setTargetResetState=function(e){return void 0===e&&(e=!0),o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return[4,this.writeMem32(3758157308,1)];case 1:return n.sent(),!0!==e?[3,3]:[4,this.reset()];case 2:return n.sent(),[3,6];case 3:return[4,this.readMem32(3758157068)];case 4:return t=n.sent(),[4,this.writeMem32(3758157068,100270084|t)];case 5:n.sent(),n.label=6;case 6:return[4,this.writeMem32(3758157308,0)];case 7:return n.sent(),[2]}}))}))},t}(x);!function(e){e[e.ENABLE=1]="ENABLE",e[e.KEY=2]="KEY"}(b||(b={}));var _=function(){function e(e){this.device=e,this.os="browser",this.packetSize=64}return e.prototype.open=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2]}))}))},e.prototype.close=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return this.device.close(),[2]}))}))},e.prototype.read=function(){return o(this,void 0,void 0,(function(){var e,t,n=this;return s(this,(function(r){switch(r.label){case 0:return[4,new Promise((function(e,t){n.device.read((function(n,r){if(n)return t(new Error(n));e(r)}))}))];case 1:return e=r.sent(),t=new Uint8Array(e).buffer,[2,new DataView(t)]}}))}))},e.prototype.write=function(e){return o(this,void 0,void 0,(function(){var t,n;return s(this,(function(r){for(t=function(e){return void 0!==e.buffer}(e)?e.buffer:e,n=Array.prototype.slice.call(new Uint8Array(t));n.length<this.packetSize;)n.push(0);if("win32"===this.os&&n.unshift(0),this.device.write(n)!==n.length)throw new Error("Incorrect bytecount written");return[2]}))}))},e}(),D=function(){function e(e,t,n,r){void 0===t&&(t=255),void 0===n&&(n=1),void 0===r&&(r=!1),this.device=e,this.interfaceClass=t,this.configuration=n,this.alwaysControlTransfer=r,this.packetSize=64}return e.prototype.bufferToDataView=function(e){var t=new Uint8Array(e).buffer;return new DataView(t)},e.prototype.isView=function(e){return void 0!==e.buffer},e.prototype.bufferSourceToBuffer=function(e){var t=this.isView(e)?e.buffer:e;return Buffer.from(t)},e.prototype.extendBuffer=function(e,t){var n=this.isView(e)?e.buffer:e,r=Math.min(n.byteLength,t),i=new Uint8Array(r);return i.set(new Uint8Array(n)),i},e.prototype.open=function(){return o(this,void 0,void 0,(function(){var e,t,n,r,i,o,a=this;return s(this,(function(s){switch(s.label){case 0:return this.device.open(),[4,new Promise((function(e,t){a.device.setConfiguration(a.configuration,(function(n){n?t(new Error(n)):e()}))}))];case 1:if(s.sent(),!(e=this.device.interfaces.filter((function(e){return e.descriptor.bInterfaceClass===a.interfaceClass}))).length)throw new Error("No valid interfaces found.");if((t=e.find((function(e){return e.endpoints.length>0})))||(t=e[0]),this.interfaceNumber=t.interfaceNumber,!this.alwaysControlTransfer){for(n=t.endpoints,this.endpointIn=void 0,this.endpointOut=void 0,r=0,i=n;r<i.length;r++)"in"!==(o=i[r]).direction||this.endpointIn?"out"!==o.direction||this.endpointOut||(this.endpointOut=o):this.endpointIn=o;if(this.endpointIn||this.endpointOut)try{t.claim()}catch(e){this.endpointIn=void 0,this.endpointOut=void 0}}return[2]}}))}))},e.prototype.close=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return this.device.close(),[2]}))}))},e.prototype.read=function(){return o(this,void 0,void 0,(function(){var e,t=this;return s(this,(function(n){switch(n.label){case 0:if(void 0===this.interfaceNumber)throw new Error("No device opened");return[4,new Promise((function(e,n){t.endpointIn?t.endpointIn.transfer(t.packetSize,(function(t,r){t?n(t):e(r)})):t.device.controlTransfer(161,1,256,t.interfaceNumber,t.packetSize,(function(t,r){t?n(t):r?e(r):n(new Error("No buffer read"))}))}))];case 1:return e=n.sent(),[2,this.bufferToDataView(e)]}}))}))},e.prototype.write=function(e){return o(this,void 0,void 0,(function(){var t,n,r=this;return s(this,(function(i){switch(i.label){case 0:if(void 0===this.interfaceNumber)throw new Error("No device opened");return t=this.extendBuffer(e,this.packetSize),n=this.bufferSourceToBuffer(t),[4,new Promise((function(e,t){r.endpointOut?r.endpointOut.transfer(n,(function(n){if(n)return t(n);e()})):r.device.controlTransfer(33,9,512,r.interfaceNumber,n,(function(n){if(n)return t(n);e()}))}))];case 1:return i.sent(),[2]}}))}))},e}(),M=function(){function e(e,t,n,r){void 0===t&&(t=255),void 0===n&&(n=1),void 0===r&&(r=!1),this.device=e,this.interfaceClass=t,this.configuration=n,this.alwaysControlTransfer=r,this.packetSize=64}return e.prototype.extendBuffer=function(e,t){var n=void 0!==e.buffer?e.buffer:e,r=Math.min(n.byteLength,t),i=new Uint8Array(r);return i.set(new Uint8Array(n)),i},e.prototype.open=function(){return o(this,void 0,void 0,(function(){var e,t,n,r,i,o,a=this;return s(this,(function(s){switch(s.label){case 0:return[4,this.device.open()];case 1:return s.sent(),[4,this.device.selectConfiguration(this.configuration)];case 2:if(s.sent(),!(e=this.device.configuration.interfaces.filter((function(e){return e.alternates[0].interfaceClass===a.interfaceClass}))).length)throw new Error("No valid interfaces found.");if((t=e.find((function(e){return e.alternates[0].endpoints.length>0})))||(t=e[0]),this.interfaceNumber=t.interfaceNumber,!this.alwaysControlTransfer)for(n=t.alternates[0].endpoints,this.endpointIn=void 0,this.endpointOut=void 0,r=0,i=n;r<i.length;r++)"in"!==(o=i[r]).direction||this.endpointIn?"out"!==o.direction||this.endpointOut||(this.endpointOut=o):this.endpointIn=o;return[2,this.device.claimInterface(this.interfaceNumber)]}}))}))},e.prototype.close=function(){return this.device.close()},e.prototype.read=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:if(void 0===this.interfaceNumber)throw new Error("No device opened");return this.endpointIn?[4,this.device.transferIn(this.endpointIn.endpointNumber,this.packetSize)]:[3,2];case 1:return e=t.sent(),[3,4];case 2:return[4,this.device.controlTransferIn({requestType:"class",recipient:"interface",request:1,value:256,index:this.interfaceNumber},this.packetSize)];case 3:e=t.sent(),t.label=4;case 4:return[2,e.data]}}))}))},e.prototype.write=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:if(void 0===this.interfaceNumber)throw new Error("No device opened");return t=this.extendBuffer(e,this.packetSize),this.endpointOut?[4,this.device.transferOut(this.endpointOut.endpointNumber,t)]:[3,2];case 1:return n.sent(),[3,4];case 2:return[4,this.device.controlTransferOut({requestType:"class",recipient:"interface",request:9,value:512,index:this.interfaceNumber},t)];case 3:n.sent(),n.label=4;case 4:return[2]}}))}))},e}()},967:(e,t,n)=>{n.r(t),n.d(t,{getServices:()=>G,requestMicrobit:()=>K});var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function i(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function o(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}u((r=r.apply(e,t||[])).next())}))}function s(e,t){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}var a,u=function(){function e(e){void 0===e&&(e=1),this.concurrent=e,this.queue=[],this.running=0}return e.prototype.pump=function(){return o(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:if(this.running>=this.concurrent)return[2];if(!(e=this.queue.shift()))return[2];this.running++,r.label=1;case 1:return r.trys.push([1,3,,4]),[4,e.fn()];case 2:return t=r.sent(),e.resolve(t),[3,4];case 3:return n=r.sent(),e.reject(n),[3,4];case 4:return this.running--,[2,this.pump()]}}))}))},e.prototype.add=function(e){var t=this;return new Promise((function(n,r){return t.queue.push({fn:e,resolve:n,reject:r}),t.pump()}))},e}(),c=function(){function e(e,t){this.service=e,this.emitter=t}return e.prototype.getCharacteristic=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return this.characteristics?[3,2]:(t=this,[4,this.service.getCharacteristics()]);case 1:t.characteristics=n.sent(),n.label=2;case 2:return[2,this.characteristics.find((function(t){return t.uuid===e}))]}}))}))},e.prototype.getCharacteristicValue=function(t){return o(this,void 0,void 0,(function(){var n,r=this;return s(this,(function(i){switch(i.label){case 0:return[4,this.getCharacteristic(t)];case 1:if(!(n=i.sent()))throw new Error("Unable to locate characteristic");return[4,e.queue.add((function(){return o(r,void 0,void 0,(function(){return s(this,(function(e){return[2,n.readValue()]}))}))}))];case 2:return[2,i.sent()]}}))}))},e.prototype.setCharacteristicValue=function(t,n){return o(this,void 0,void 0,(function(){var r,i=this;return s(this,(function(a){switch(a.label){case 0:return[4,this.getCharacteristic(t)];case 1:if(!(r=a.sent()))throw new Error("Unable to locate characteristic");return[4,e.queue.add((function(){return o(i,void 0,void 0,(function(){return s(this,(function(e){return[2,r.writeValue(n)]}))}))}))];case 2:return a.sent(),[2]}}))}))},e.prototype.handleListener=function(t,n,r){return o(this,void 0,void 0,(function(){var i,a=this;return s(this,(function(u){switch(u.label){case 0:return[4,this.getCharacteristic(n)];case 1:return(i=u.sent())?[4,e.queue.add((function(){return o(a,void 0,void 0,(function(){return s(this,(function(e){return[2,i.startNotifications()]}))}))}))]:[2];case 2:return u.sent(),this.emitter.on("newListener",(function(n){if(!(n!==t||a.emitter.listenerCount(t)>0))return e.queue.add((function(){return o(a,void 0,void 0,(function(){return s(this,(function(e){return[2,i.addEventListener("characteristicvaluechanged",r)]}))}))}))})),this.emitter.on("removeListener",(function(n){if(!(n!==t||a.emitter.listenerCount(t)>0))return e.queue.add((function(){return o(a,void 0,void 0,(function(){return s(this,(function(e){return[2,i.removeEventListener("characteristicvaluechanged",r)]}))}))}))})),[2]}}))}))},e.queue=new u,e}();!function(e){e.modelNumber="00002a24-0000-1000-8000-00805f9b34fb",e.serialNumber="00002a25-0000-1000-8000-00805f9b34fb",e.firmwareRevision="00002a26-0000-1000-8000-00805f9b34fb",e.hardwareRevision="00002a27-0000-1000-8000-00805f9b34fb",e.manufacturer="00002a29-0000-1000-8000-00805f9b34fb"}(a||(a={}));var h=function(){function e(e){this.helper=new c(e)}return e.create=function(t){return o(this,void 0,void 0,(function(){return s(this,(function(n){return[2,new e(t)]}))}))},e.prototype.readDeviceInformation=function(){return o(this,void 0,void 0,(function(){var e,t,n,r,i,o;return s(this,(function(s){switch(s.label){case 0:return e={},[4,this.readStringCharacteristic(a.modelNumber)];case 1:return(t=s.sent())&&(e.modelNumber=t),[4,this.readStringCharacteristic(a.serialNumber)];case 2:return(n=s.sent())&&(e.serialNumber=n),[4,this.readStringCharacteristic(a.firmwareRevision)];case 3:return(r=s.sent())&&(e.firmwareRevision=r),[4,this.readStringCharacteristic(a.hardwareRevision)];case 4:return(i=s.sent())&&(e.hardwareRevision=i),[4,this.readStringCharacteristic(a.manufacturer)];case 5:return(o=s.sent())&&(e.manufacturer=o),[2,e]}}))}))},e.prototype.readStringCharacteristic=function(e){return o(this,void 0,void 0,(function(){var t,n;return s(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.helper.getCharacteristicValue(e)];case 1:return t=r.sent(),n=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength),[2,String.fromCharCode.apply(null,Array.from(new Uint8Array(n)))];case 2:return r.sent(),[2,void 0];case 3:return[2]}}))}))},e.uuid="0000180a-0000-1000-8000-00805f9b34fb",e}();function f(){}function d(){d.init.call(this)}function l(e){return void 0===e._maxListeners?d.defaultMaxListeners:e._maxListeners}function p(e,t,n){if(t)e.call(n);else for(var r=e.length,i=A(e,r),o=0;o<r;++o)i[o].call(n)}function v(e,t,n,r){if(t)e.call(n,r);else for(var i=e.length,o=A(e,i),s=0;s<i;++s)o[s].call(n,r)}function w(e,t,n,r,i){if(t)e.call(n,r,i);else for(var o=e.length,s=A(e,o),a=0;a<o;++a)s[a].call(n,r,i)}function y(e,t,n,r,i,o){if(t)e.call(n,r,i,o);else for(var s=e.length,a=A(e,s),u=0;u<s;++u)a[u].call(n,r,i,o)}function m(e,t,n,r){if(t)e.apply(n,r);else for(var i=e.length,o=A(e,i),s=0;s<i;++s)o[s].apply(n,r)}function b(e,t,n,r){var i,o,s,a;if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');if((o=e._events)?(o.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),o=e._events),s=o[t]):(o=e._events=new f,e._eventsCount=0),s){if("function"==typeof s?s=o[t]=r?[n,s]:[s,n]:r?s.unshift(n):s.push(n),!s.warned&&(i=l(e))&&i>0&&s.length>i){s.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+t+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=s.length,a=u,"function"==typeof console.warn?console.warn(a):console.log(a)}}else s=o[t]=n,++e._eventsCount;return e}function g(e,t,n){var r=!1;function i(){e.removeListener(t,i),r||(r=!0,n.apply(e,arguments))}return i.listener=n,i}function C(e){var t=this._events;if(t){var n=t[e];if("function"==typeof n)return 1;if(n)return n.length}return 0}function A(e,t){for(var n=new Array(t);t--;)n[t]=e[t];return n}f.prototype=Object.create(null),d.EventEmitter=d,d.usingDomains=!1,d.prototype.domain=void 0,d.prototype._events=void 0,d.prototype._maxListeners=void 0,d.defaultMaxListeners=10,d.init=function(){this.domain=null,d.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new f,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},d.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},d.prototype.getMaxListeners=function(){return l(this)},d.prototype.emit=function(e){var t,n,r,i,o,s,a,u="error"===e;if(s=this._events)u=u&&null==s.error;else if(!u)return!1;if(a=this.domain,u){if(t=arguments[1],!a){if(t instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}return t||(t=new Error('Uncaught, unspecified "error" event')),t.domainEmitter=this,t.domain=a,t.domainThrown=!1,a.emit("error",t),!1}if(!(n=s[e]))return!1;var h="function"==typeof n;switch(r=arguments.length){case 1:p(n,h,this);break;case 2:v(n,h,this,arguments[1]);break;case 3:w(n,h,this,arguments[1],arguments[2]);break;case 4:y(n,h,this,arguments[1],arguments[2],arguments[3]);break;default:for(i=new Array(r-1),o=1;o<r;o++)i[o-1]=arguments[o];m(n,h,this,i)}return!0},d.prototype.addListener=function(e,t){return b(this,e,t,!1)},d.prototype.on=d.prototype.addListener,d.prototype.prependListener=function(e,t){return b(this,e,t,!0)},d.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.on(e,g(this,e,t)),this},d.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,g(this,e,t)),this},d.prototype.removeListener=function(e,t){var n,r,i,o,s;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if(!(r=this._events))return this;if(!(n=r[e]))return this;if(n===t||n.listener&&n.listener===t)0==--this._eventsCount?this._events=new f:(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length;o-- >0;)if(n[o]===t||n[o].listener&&n[o].listener===t){s=n[o].listener,i=o;break}if(i<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new f,this;delete r[e]}else!function(e,t){for(var n=t,r=n+1,i=e.length;r<i;n+=1,r+=1)e[n]=e[r];e.pop()}(n,i);r.removeListener&&this.emit("removeListener",e,s||t)}return this},d.prototype.removeAllListeners=function(e){var t,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new f,this._eventsCount=0):n[e]&&(0==--this._eventsCount?this._events=new f:delete n[e]),this;if(0===arguments.length){for(var r,i=Object.keys(n),o=0;o<i.length;++o)"removeListener"!==(r=i[o])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=new f,this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(t)do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},d.prototype.listeners=function(e){var t,n=this._events;return n&&(t=n[e])?"function"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(t):[]},d.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):C.call(e,t)},d.prototype.listenerCount=C,d.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var E,L,U=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isEventListenerObject=function(e){return void 0!==e.handleEvent},t}return i(t,e),t.prototype.addEventListener=function(t,n){if(n){var r=this.isEventListenerObject(n)?n.handleEvent:n;e.prototype.addListener.call(this,t,r)}},t.prototype.removeEventListener=function(t,n){if(n){var r=this.isEventListenerObject(n)?n.handleEvent:n;e.prototype.removeListener.call(this,t,r)}},t.prototype.dispatchEvent=function(t,n){var r;return r="string"==typeof t?new CustomEvent(t,{detail:n}):t,e.prototype.emit.call(this,r.type,r)},t}(d);!function(e){e.buttonAState="e95dda90-251d-470a-a062-fa1922dfa9a8",e.buttonBState="e95dda91-251d-470a-a062-fa1922dfa9a8"}(E||(E={})),function(e){e[e.Release=0]="Release",e[e.ShortPress=1]="ShortPress",e[e.LongPress=2]="LongPress"}(L||(L={}));var S,T=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("buttonastatechanged",E.buttonAState,this.buttonAStateChangedHandler.bind(this))];case 1:return e.sent(),[4,this.helper.handleListener("buttonbstatechanged",E.buttonBState,this.buttonBStateChangedHandler.bind(this))];case 2:return e.sent(),[2]}}))}))},t.prototype.readButtonAState=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(E.buttonAState)];case 1:return[2,e.sent().getUint8(0)]}}))}))},t.prototype.readButtonBState=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(E.buttonBState)];case 1:return[2,e.sent().getUint8(0)]}}))}))},t.prototype.buttonAStateChangedHandler=function(e){var t=e.target.value;this.dispatchEvent("buttonastatechanged",t.getUint8(0))},t.prototype.buttonBStateChangedHandler=function(e){var t=e.target.value;this.dispatchEvent("buttonbstatechanged",t.getUint8(0))},t.uuid="e95d9882-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.ledMatrixState="e95d7b77-251d-470a-a062-fa1922dfa9a8",e.ledText="e95d93ee-251d-470a-a062-fa1922dfa9a8",e.scrollingDelay="e95d0d2d-251d-470a-a062-fa1922dfa9a8"}(S||(S={}));var x,P=function(){function e(e){this.helper=new c(e)}return e.create=function(t){return o(this,void 0,void 0,(function(){return s(this,(function(n){return[2,new e(t)]}))}))},e.prototype.writeText=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.encodeString(e),[2,this.helper.setCharacteristicValue(S.ledText,t)]}))}))},e.prototype.readMatrixState=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(S.ledMatrixState)];case 1:return e=t.sent(),[2,this.viewToLedMatrix(e)]}}))}))},e.prototype.writeMatrixState=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.ledMatrixToView(e),[2,this.helper.setCharacteristicValue(S.ledMatrixState,t)]}))}))},e.prototype.getScrollingDelay=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(S.scrollingDelay)];case 1:return[2,e.sent().getUint16(0,!0)]}}))}))},e.prototype.setScrollingDelay=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return(t=new DataView(new ArrayBuffer(2))).setUint16(0,e,!0),[2,this.helper.setCharacteristicValue(S.scrollingDelay,t)]}))}))},e.prototype.encodeString=function(e){for(var t=new ArrayBuffer(e.length),n=new Uint8Array(t),r=0;r<e.length;r++)n[r]=e.charCodeAt(r);return t},e.prototype.viewToLedMatrix=function(e){for(var t=[],n=0;n<5;n++)t[n]=this.byteToBoolArray(e.getUint8(n));return t},e.prototype.byteToBoolArray=function(e){for(var t=[!1,!1,!1,!1,!1],n=0;n<t.length;n++)t[n]=1==(1&e),e>>=1;return t.reverse()},e.prototype.ledMatrixToView=function(e){for(var t=new DataView(new ArrayBuffer(5)),n=0;n<5;n++)t.setUint8(n,this.boolArrayToByte(e[n]));return t},e.prototype.boolArrayToByte=function(e){return e.reduce((function(e,t){return e<<1|(t?1:0)}),0)},e.uuid="e95dd91d-251d-470a-a062-fa1922dfa9a8",e}();!function(e){e.temperature="e95d9250-251d-470a-a062-fa1922dfa9a8",e.temperaturePeriod="e95d1b25-251d-470a-a062-fa1922dfa9a8"}(x||(x={}));var _,D=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("temperaturechanged",x.temperature,this.temperatureChangedHandler.bind(this))];case 1:return e.sent(),[2]}}))}))},t.prototype.readTemperature=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(x.temperature)];case 1:return[2,e.sent().getInt8(0)]}}))}))},t.prototype.getTemperaturePeriod=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(x.temperaturePeriod)];case 1:return[2,e.sent().getUint16(0,!0)]}}))}))},t.prototype.setTemperaturePeriod=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return(t=new DataView(new ArrayBuffer(2))).setUint16(0,e,!0),[4,this.helper.setCharacteristicValue(x.temperaturePeriod,t)];case 1:return[2,n.sent()]}}))}))},t.prototype.temperatureChangedHandler=function(e){var t=e.target.value;this.dispatchEvent("temperaturechanged",t.getInt8(0))},t.uuid="e95d6100-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.accelerometerData="e95dca4b-251d-470a-a062-fa1922dfa9a8",e.accelerometerPeriod="e95dfb24-251d-470a-a062-fa1922dfa9a8"}(_||(_={}));var M,V,B=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("accelerometerdatachanged",_.accelerometerData,this.accelerometerDataChangedHandler.bind(this))];case 1:return e.sent(),[2]}}))}))},t.prototype.readAccelerometerData=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(_.accelerometerData)];case 1:return e=t.sent(),[2,this.dataViewToAccelerometerData(e)]}}))}))},t.prototype.getAccelerometerPeriod=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(_.accelerometerPeriod)];case 1:return[2,e.sent().getUint16(0,!0)]}}))}))},t.prototype.setAccelerometerPeriod=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return(t=new DataView(new ArrayBuffer(2))).setUint16(0,e,!0),[2,this.helper.setCharacteristicValue(_.accelerometerPeriod,t)]}))}))},t.prototype.accelerometerDataChangedHandler=function(e){var t=e.target.value,n=this.dataViewToAccelerometerData(t);this.dispatchEvent("accelerometerdatachanged",n)},t.prototype.dataViewToAccelerometerData=function(e){return{x:e.getInt16(0,!0)/1e3,y:e.getInt16(2,!0)/1e3,z:e.getInt16(4,!0)/1e3}},t.uuid="e95d0753-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.magnetometerData="e95dfb11-251d-470a-a062-fa1922dfa9a8",e.magnetometerPeriod="e95d386c-251d-470a-a062-fa1922dfa9a8",e.magnetometerBearing="e95d9715-251d-470a-a062-fa1922dfa9a8",e.magnetometerCalibration="e95db358-251d-470a-a062-fa1922dfa9a8"}(M||(M={})),function(e){e[e.unknown=0]="unknown",e[e.requested=1]="requested",e[e.completed=2]="completed",e[e.errored=3]="errored"}(V||(V={}));var k,O,R,I=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("magnetometerdatachanged",M.magnetometerData,this.magnetometerDataChangedHandler.bind(this))];case 1:return e.sent(),[4,this.helper.handleListener("magnetometerbearingchanged",M.magnetometerBearing,this.magnetometerBearingChangedHandler.bind(this))];case 2:return e.sent(),[4,this.helper.handleListener("magnetometercalibrationchanged",M.magnetometerCalibration,this.magnetometerCalibrationChangedHandler.bind(this))];case 3:return e.sent(),[2]}}))}))},t.prototype.calibrate=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2,this.helper.setCharacteristicValue(M.magnetometerCalibration,new Uint8Array([1]))]}))}))},t.prototype.readMagnetometerData=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(M.magnetometerData)];case 1:return e=t.sent(),[2,this.dataViewToMagnetometerData(e)]}}))}))},t.prototype.readMagnetometerBearing=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(M.magnetometerBearing)];case 1:return 2===(e=t.sent()).byteLength?[2,e.getUint16(0,!0)]:[2,void 0]}}))}))},t.prototype.getMagnetometerPeriod=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.getCharacteristicValue(M.magnetometerPeriod)];case 1:return[2,e.sent().getUint16(0,!0)]}}))}))},t.prototype.setMagnetometerPeriod=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return(t=new DataView(new ArrayBuffer(2))).setUint16(0,e,!0),[2,this.helper.setCharacteristicValue(M.magnetometerPeriod,t)]}))}))},t.prototype.magnetometerDataChangedHandler=function(e){var t=e.target.value,n=this.dataViewToMagnetometerData(t);this.dispatchEvent("magnetometerdatachanged",n)},t.prototype.magnetometerBearingChangedHandler=function(e){var t=e.target.value;2===t.byteLength&&this.dispatchEvent("magnetometerbearingchanged",t.getUint16(0,!0))},t.prototype.magnetometerCalibrationChangedHandler=function(e){var t=e.target.value;1===t.byteLength&&this.dispatchEvent("magnetometercalibrationchanged",t.getUint8(0))},t.prototype.dataViewToMagnetometerData=function(e){return{x:e.getInt16(0,!0),y:e.getInt16(1,!0),z:e.getInt16(2,!0)}},t.uuid="e95df2d8-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.pinData="e95d8d00-251d-470a-a062-fa1922dfa9a8",e.pinAdConfiguration="e95d5899-251d-470a-a062-fa1922dfa9a8",e.pinIoConfiguration="e95db9fe-251d-470a-a062-fa1922dfa9a8",e.pwmControl="e95dd822-251d-470a-a062-fa1922dfa9a8"}(k||(k={})),function(e){e[e.Digital=0]="Digital",e[e.Analogue=1]="Analogue"}(O||(O={})),function(e){e[e.Output=0]="Output",e[e.Input=1]="Input"}(R||(R={}));var N,q=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("pindatachanged",k.pinData,this.pinDataChangedHandler.bind(this))];case 1:return e.sent(),[2]}}))}))},t.prototype.readPinData=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(k.pinData)];case 1:return e=t.sent(),[2,this.dataViewToPinData(e)]}}))}))},t.prototype.writePinData=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.pinDataToDataView(e),[2,this.helper.setCharacteristicValue(k.pinData,t)]}))}))},t.prototype.getAdConfiguration=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(k.pinAdConfiguration)];case 1:return e=t.sent(),[2,this.dataViewToConfig(e)]}}))}))},t.prototype.setAdConfiguration=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.configToDataView(e),[2,this.helper.setCharacteristicValue(k.pinAdConfiguration,t)]}))}))},t.prototype.getIoConfiguration=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(k.pinIoConfiguration)];case 1:return e=t.sent(),[2,this.dataViewToConfig(e)]}}))}))},t.prototype.setIoConfiguration=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.configToDataView(e),[2,this.helper.setCharacteristicValue(k.pinIoConfiguration,t)]}))}))},t.prototype.setPwmControl=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=this.pwmControlDataToDataView(e),[2,this.helper.setCharacteristicValue(k.pwmControl,t)]}))}))},t.prototype.pinDataChangedHandler=function(e){var t=e.target.value,n=this.dataViewToPinData(t);this.dispatchEvent("pindatachanged",n)},t.prototype.dataViewToPinData=function(e){for(var t=[],n=0;n<e.byteLength;n+=2)t.push({pin:e.getUint8(n),value:e.getUint8(n+1)});return t},t.prototype.pinDataToDataView=function(e){var t=new DataView(new ArrayBuffer(2*e.length));return e.forEach((function(e,n){t.setUint8(2*n,e.pin),t.setUint8(2*n+1,e.value)})),t},t.prototype.dataViewToConfig=function(e){for(var t=[],n=(e.getUint16(0)<<8)+e.getUint8(2),r=0;r<24;r++)t.push(n>>r);return t},t.prototype.configToDataView=function(e){for(var t=new DataView(new ArrayBuffer(3)),n=0,r=0;r<e.length;r++)n&=1<<e[r];return t.setUint16(0,n>>8,!0),t.setUint8(2,255&n),t},t.prototype.pwmControlDataToDataView=function(e){var t=new DataView(new ArrayBuffer(7));return t.setUint8(0,e.pin),t.setUint16(1,e.value,!0),t.setUint32(3,e.period,!0),t},t.uuid="e95d127b-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.tx="6e400002-b5a3-f393-e0a9-e50e24dcca9e",e.rx="6e400003-b5a3-f393-e0a9-e50e24dcca9e"}(N||(N={}));var H,j=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("receive",N.tx,this.receiveHandler.bind(this))];case 1:return e.sent(),[4,this.helper.handleListener("receiveText",N.tx,this.receiveTextHandler.bind(this))];case 2:return e.sent(),[2]}}))}))},t.prototype.send=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){return[2,this.helper.setCharacteristicValue(N.rx,e)]}))}))},t.prototype.sendText=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){return t=e.split("").map((function(e){return e.charCodeAt(0)})),[2,this.helper.setCharacteristicValue(N.rx,new Uint8Array(t).buffer)]}))}))},t.prototype.receiveHandler=function(e){var t=e.target.value,n=new Uint8Array(t.buffer);this.dispatchEvent("receive",n)},t.prototype.receiveTextHandler=function(e){var t=e.target.value,n=Array.prototype.slice.call(new Uint8Array(t.buffer)),r=String.fromCharCode.apply(null,n);this.dispatchEvent("receiveText",r)},t.uuid="6e400001-b5a3-f393-e0a9-e50e24dcca9e",t}(U);!function(e){e.microBitRequirements="e95db84c-251d-470a-a062-fa1922dfa9a8",e.microBitEvent="e95d9775-251d-470a-a062-fa1922dfa9a8",e.clientRequirements="e95d23c4-251d-470a-a062-fa1922dfa9a8",e.clientEvent="e95d5404-251d-470a-a062-fa1922dfa9a8"}(H||(H={}));var z,F=function(e){function t(t){var n=e.call(this)||this;return n.helper=new c(t,n),n}return i(t,e),t.create=function(e){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return[4,(n=new t(e)).init()];case 1:return r.sent(),[2,n]}}))}))},t.prototype.init=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.helper.handleListener("microbitevent",H.microBitEvent,this.eventHandler.bind(this))];case 1:return e.sent(),[4,this.helper.handleListener("microbitrequirementschanged",H.microBitRequirements,this.microbitRequirementsChangedHandler.bind(this))];case 2:return e.sent(),[2]}}))}))},t.prototype.getMicrobitRequirements=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(H.microBitRequirements)];case 1:return e=t.sent(),[2,this.viewToMicrobitEvent(e)]}}))}))},t.prototype.setClientRequirements=function(e,t){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return(n=new DataView(new ArrayBuffer(4))).setUint16(0,e,!0),n.setUint16(1,t,!0),[4,this.helper.setCharacteristicValue(H.clientRequirements,n)];case 1:return[2,r.sent()]}}))}))},t.prototype.readMicrobitEvent=function(){return o(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,this.helper.getCharacteristicValue(H.microBitEvent)];case 1:return e=t.sent(),[2,this.viewToMicrobitEvent(e)]}}))}))},t.prototype.writeClientEvent=function(e,t){return o(this,void 0,void 0,(function(){var n;return s(this,(function(r){switch(r.label){case 0:return(n=new DataView(new ArrayBuffer(4))).setUint16(0,e,!0),n.setUint16(1,t,!0),[4,this.helper.setCharacteristicValue(H.clientEvent,n)];case 1:return[2,r.sent()]}}))}))},t.prototype.microbitRequirementsChangedHandler=function(e){var t=e.target.value,n=this.viewToMicrobitEvent(t);this.dispatchEvent("microbitrequirementschanged",n)},t.prototype.eventHandler=function(e){var t=e.target.value,n=this.viewToMicrobitEvent(t);this.dispatchEvent("microbitevent",n)},t.prototype.viewToMicrobitEvent=function(e){return{type:e.getUint16(0,!0),value:e.getUint16(1,!0)}},t.uuid="e95d93af-251d-470a-a062-fa1922dfa9a8",t}(U);!function(e){e.dfuControl="e95d93b1-251d-470a-a062-fa1922dfa9a8"}(z||(z={}));var W=function(){function e(e){this.helper=new c(e)}return e.create=function(t){return o(this,void 0,void 0,(function(){return s(this,(function(n){return[2,new e(t)]}))}))},e.prototype.requestDfu=function(){return this.helper.setCharacteristicValue(z.dfuControl,new Uint8Array([1]))},e.prototype.requestFlashCode=function(){return this.helper.setCharacteristicValue(z.dfuControl,new Uint8Array([2]))},e.uuid="e95d93b0-251d-470a-a062-fa1922dfa9a8",e}(),$=function(){function e(e){this.services=e}return e.prototype.createService=function(e){return o(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return(t=this.services.find((function(t){return t.uuid===e.uuid})))?[4,e.create(t)]:[2,void 0];case 1:return[2,n.sent()]}}))}))},e}(),K=function(e){return o(void 0,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return[4,e.requestDevice({filters:[{namePrefix:"BBC micro:bit"}],optionalServices:[h.uuid,T.uuid,P.uuid,D.uuid,B.uuid,I.uuid,q.uuid,j.uuid,F.uuid,W.uuid]})];case 1:return[2,t.sent()]}}))}))},G=function(e){return o(void 0,void 0,void 0,(function(){var t,n,r,i,o,a,u,c,f,d,l,p;return s(this,(function(s){switch(s.label){case 0:return e&&e.gatt?e.gatt.connected?[3,2]:[4,e.gatt.connect()]:[2,{}];case 1:s.sent(),s.label=2;case 2:return[4,e.gatt.getPrimaryServices()];case 3:return t=s.sent(),[4,(n=new $(t)).createService(h)];case 4:return r=s.sent(),[4,n.createService(T)];case 5:return i=s.sent(),[4,n.createService(P)];case 6:return o=s.sent(),[4,n.createService(D)];case 7:return a=s.sent(),[4,n.createService(B)];case 8:return u=s.sent(),[4,n.createService(I)];case 9:return c=s.sent(),[4,n.createService(j)];case 10:return f=s.sent(),[4,n.createService(F)];case 11:return d=s.sent(),[4,n.createService(W)];case 12:return l=s.sent(),[4,n.createService(q)];case 13:return p=s.sent(),[2,{deviceInformationService:r,buttonService:i,ledService:o,temperatureService:a,accelerometerService:u,magnetometerService:c,uartService:f,eventService:d,dfuControlService:l,ioPinService:p}]}}))}))}},607:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const i=n(600),o=n(967),s=n(855),a=navigator&&navigator.usb,u=navigator&&navigator.bluetooth,c=document.getElementById("usb-button"),h=document.getElementById("flash-button"),f=document.getElementById("ble-button"),d=document.getElementById("result"),l=document.getElementById("matrix");let p,v;const w=(e,t=!1)=>{t&&(d.innerText=""),d.innerText+=`${e}\n`},y=e=>r(void 0,void 0,void 0,(function*(){d.innerText="",p=e,v=p?yield s.getFriendlyName(p):void 0;const t=p?s.getPairPattern(v):void 0;h.disabled=f.disabled=!p,f.innerText="Connect Bluetooth Device"+(v?` [${v}]`:""),(e=>{if(l.innerHTML="",e)for(let t=0;t<5;t++)for(let n=0;n<5;n++){const r=document.createElement("div");r.id=`led-${t}-${n}`,r.className=e[t][n]?"led-on":"led-off",l.appendChild(r)}})(t)}));c.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){if(!a)throw new Error("WebUSB is not supported in this browser, please refer to https://caniuse.com/webusb for supported browsers");try{const e=yield a.requestDevice({filters:[{vendorId:3368,productId:516}]});y(e)}catch(e){w(e)}})))),h.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){if(!p)return;const e=yield fetch("microbit-DEVICE-PRODUCTION.hex"),t=yield e.arrayBuffer(),n=new i.WebUSB(p),r=new i.DAPLink(n);r.on(i.DAPLink.EVENT_PROGRESS,(e=>{w(`Flashing ${Math.ceil(100*e)}%`,!0)}));try{yield r.connect(),yield r.flash(t),yield r.disconnect(),w("Flash complete!",!0)}catch(e){w(e)}})))),f.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){if(!u)throw new Error("Web Bluetooth is not supported in this browser, please refer to https://caniuse.com/web-bluetooth for supported browsers");try{const e="BBC micro:bit"+(v?` [${v}]`:""),t=yield u.requestDevice({filters:[{namePrefix:e}],optionalServices:["e95d0753-251d-470a-a062-fa1922dfa9a8"]}),n=yield o.getServices(t);n.accelerometerService&&n.accelerometerService.addEventListener("accelerometerdatachanged",(e=>{w(`x: ${e.detail.x}`,!0),w(`y: ${e.detail.y}`),w(`z: ${e.detail.z}`)}))}catch(e){w(e)}})))),window.addEventListener("load",(()=>{a&&(a.addEventListener("connect",(e=>r(void 0,void 0,void 0,(function*(){3368===e.device.vendorId&&516===e.device.productId&&y(e.device)})))),a.addEventListener("disconnect",(e=>{e.device===p&&y(void 0)})))}))},855:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getPairPattern=t.getFriendlyName=void 0;const i=n(600),o=[["z","v","g","p","t"],["u","o","i","e","a"],["z","v","g","p","t"],["u","o","i","e","a"],["z","v","g","p","t"]];class s extends i.CortexM{microbitFriendlyName(){return r(this,void 0,void 0,(function*(){let e=yield this.readMem32(268435556),t=5,n=1,r="";for(let i=0;i<5;i++){const s=Math.floor(e%t/n);e-=s,t*=5,n*=5,r=o[i][s]+r}return r}))}}t.getFriendlyName=e=>r(void 0,void 0,void 0,(function*(){const t=new i.WebUSB(e),n=new s(t);try{return yield n.connect(),n.microbitFriendlyName()}catch(e){return}finally{yield n.disconnect()}})),t.getPairPattern=e=>{if(!e)return;const t=Array.from({length:5},(()=>Array(5).fill(!1)));for(let n=0;n<5;n++){const r=o[n].join("").indexOf(e[n]);t[n].fill(!0,0,r+1)}return t[0].map(((e,n)=>t.map((e=>e[e.length-1-n]))))}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCcmEsSUFBakJzYSxFQUNILE9BQU9BLEVBQWFDLFFBR3JCLElBQUlDLEVBQVNMLEVBQXlCRSxHQUFZLENBR2pERSxRQUFTLElBT1YsT0FIQUUsRUFBb0JKLEdBQVV2YyxLQUFLMGMsRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0gsR0FHcEVJLEVBQU9ELFFDcEJmSCxFQUFvQjNhLEVBQUksQ0FBQzhhLEVBQVNHLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWE4sRUFBb0J2ZCxFQUFFNmQsRUFBWUMsS0FBU1AsRUFBb0J2ZCxFQUFFMGQsRUFBU0ksSUFDNUUzZSxPQUFPNGUsZUFBZUwsRUFBU0ksRUFBSyxDQUFFRSxZQUFZLEVBQU1DLElBQUtKLEVBQVdDLE1DSjNFUCxFQUFvQnZkLEVBQUksQ0FBQ2tlLEVBQUtDLElBQVVoZixPQUFPUSxVQUFVSixlQUFlMEIsS0FBS2lkLEVBQUtDLEdDQ2xGWixFQUFvQnJlLEVBQUt3ZSxJQUNILG9CQUFYNWMsUUFBMEJBLE9BQU9zZCxhQUMxQ2pmLE9BQU80ZSxlQUFlTCxFQUFTNWMsT0FBT3NkLFlBQWEsQ0FBRTlkLE1BQU8sV0FFN0RuQixPQUFPNGUsZUFBZUwsRUFBUyxhQUFjLENBQUVwZCxPQUFPLEtDRjdCaWQsRUFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taWNyb2JpdC1zZXJpYWwvLi9ub2RlX21vZHVsZXMvZGFwanMvZGlzdC9kYXAuZXNtLmpzIiwid2VicGFjazovL21pY3JvYml0LXNlcmlhbC8uL25vZGVfbW9kdWxlcy9taWNyb2JpdC13ZWItYmx1ZXRvb3RoL2Rpc3QvbWljcm9iaXQuZXNtLmpzIiwid2VicGFjazovL21pY3JvYml0LXNlcmlhbC8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly9taWNyb2JpdC1zZXJpYWwvLi9zcmMvbWljcm9iaXQudHMiLCJ3ZWJwYWNrOi8vbWljcm9iaXQtc2VyaWFsL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL21pY3JvYml0LXNlcmlhbC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vbWljcm9iaXQtc2VyaWFsL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vbWljcm9iaXQtc2VyaWFsL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vbWljcm9iaXQtc2VyaWFsL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXG50aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxuTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVEhJUyBDT0RFIElTIFBST1ZJREVEIE9OIEFOICpBUyBJUyogQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuS0lORCwgRUlUSEVSIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIFdJVEhPVVQgTElNSVRBVElPTiBBTlkgSU1QTElFRFxuV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIFRJVExFLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSxcbk1FUkNIQU5UQUJMSVRZIE9SIE5PTi1JTkZSSU5HRU1FTlQuXG5cblNlZSB0aGUgQXBhY2hlIFZlcnNpb24gMi4wIExpY2Vuc2UgZm9yIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cbnZhciB0PWZ1bmN0aW9uKGUscil7cmV0dXJuKHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShyKSYmKHRbcl09ZVtyXSl9KShlLHIpfTtmdW5jdGlvbiBlKGUscil7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsciksZS5wcm90b3R5cGU9bnVsbD09PXI/T2JqZWN0LmNyZWF0ZShyKToobi5wcm90b3R5cGU9ci5wcm90b3R5cGUsbmV3IG4pfWZ1bmN0aW9uIHIodCxlLHIsbil7cmV0dXJuIG5ldyhyfHwocj1Qcm9taXNlKSkoKGZ1bmN0aW9uKGkscyl7ZnVuY3Rpb24gbyh0KXt0cnl7dShuLm5leHQodCkpfWNhdGNoKHQpe3ModCl9fWZ1bmN0aW9uIGModCl7dHJ5e3Uobi50aHJvdyh0KSl9Y2F0Y2godCl7cyh0KX19ZnVuY3Rpb24gdSh0KXt2YXIgZTt0LmRvbmU/aSh0LnZhbHVlKTooZT10LnZhbHVlLGUgaW5zdGFuY2VvZiByP2U6bmV3IHIoKGZ1bmN0aW9uKHQpe3QoZSl9KSkpLnRoZW4obyxjKX11KChuPW4uYXBwbHkodCxlfHxbXSkpLm5leHQoKSl9KSl9ZnVuY3Rpb24gbih0LGUpe3ZhciByLG4saSxzLG89e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmaVswXSl0aHJvdyBpWzFdO3JldHVybiBpWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHM9e25leHQ6YygwKSx0aHJvdzpjKDEpLHJldHVybjpjKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihzW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHM7ZnVuY3Rpb24gYyhzKXtyZXR1cm4gZnVuY3Rpb24oYyl7cmV0dXJuIGZ1bmN0aW9uKHMpe2lmKHIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtvOyl0cnl7aWYocj0xLG4mJihpPTImc1swXT9uLnJldHVybjpzWzBdP24udGhyb3d8fCgoaT1uLnJldHVybikmJmkuY2FsbChuKSwwKTpuLm5leHQpJiYhKGk9aS5jYWxsKG4sc1sxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKG49MCxpJiYocz1bMiZzWzBdLGkudmFsdWVdKSxzWzBdKXtjYXNlIDA6Y2FzZSAxOmk9czticmVhaztjYXNlIDQ6cmV0dXJuIG8ubGFiZWwrKyx7dmFsdWU6c1sxXSxkb25lOiExfTtjYXNlIDU6by5sYWJlbCsrLG49c1sxXSxzPVswXTtjb250aW51ZTtjYXNlIDc6cz1vLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKGk9by50cnlzLChpPWkubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pfHw2IT09c1swXSYmMiE9PXNbMF0pKXtvPTA7Y29udGludWV9aWYoMz09PXNbMF0mJighaXx8c1sxXT5pWzBdJiZzWzFdPGlbM10pKXtvLmxhYmVsPXNbMV07YnJlYWt9aWYoNj09PXNbMF0mJm8ubGFiZWw8aVsxXSl7by5sYWJlbD1pWzFdLGk9czticmVha31pZihpJiZvLmxhYmVsPGlbMl0pe28ubGFiZWw9aVsyXSxvLm9wcy5wdXNoKHMpO2JyZWFrfWlbMl0mJm8ub3BzLnBvcCgpLG8udHJ5cy5wb3AoKTtjb250aW51ZX1zPWUuY2FsbCh0LG8pfWNhdGNoKHQpe3M9WzYsdF0sbj0wfWZpbmFsbHl7cj1pPTB9aWYoNSZzWzBdKXRocm93IHNbMV07cmV0dXJue3ZhbHVlOnNbMF0/c1sxXTp2b2lkIDAsZG9uZTohMH19KFtzLGNdKX19fWZ1bmN0aW9uIGkoKXt9ZnVuY3Rpb24gcygpe3MuaW5pdC5jYWxsKHRoaXMpfWZ1bmN0aW9uIG8odCl7cmV0dXJuIHZvaWQgMD09PXQuX21heExpc3RlbmVycz9zLmRlZmF1bHRNYXhMaXN0ZW5lcnM6dC5fbWF4TGlzdGVuZXJzfWZ1bmN0aW9uIGModCxlLHIpe2lmKGUpdC5jYWxsKHIpO2Vsc2UgZm9yKHZhciBuPXQubGVuZ3RoLGk9dih0LG4pLHM9MDtzPG47KytzKWlbc10uY2FsbChyKX1mdW5jdGlvbiB1KHQsZSxyLG4pe2lmKGUpdC5jYWxsKHIsbik7ZWxzZSBmb3IodmFyIGk9dC5sZW5ndGgscz12KHQsaSksbz0wO288aTsrK28pc1tvXS5jYWxsKHIsbil9ZnVuY3Rpb24gYSh0LGUscixuLGkpe2lmKGUpdC5jYWxsKHIsbixpKTtlbHNlIGZvcih2YXIgcz10Lmxlbmd0aCxvPXYodCxzKSxjPTA7YzxzOysrYylvW2NdLmNhbGwocixuLGkpfWZ1bmN0aW9uIGgodCxlLHIsbixpLHMpe2lmKGUpdC5jYWxsKHIsbixpLHMpO2Vsc2UgZm9yKHZhciBvPXQubGVuZ3RoLGM9dih0LG8pLHU9MDt1PG87Kyt1KWNbdV0uY2FsbChyLG4saSxzKX1mdW5jdGlvbiBmKHQsZSxyLG4pe2lmKGUpdC5hcHBseShyLG4pO2Vsc2UgZm9yKHZhciBpPXQubGVuZ3RoLHM9dih0LGkpLG89MDtvPGk7KytvKXNbb10uYXBwbHkocixuKX1mdW5jdGlvbiBsKHQsZSxyLG4pe3ZhciBzLGMsdSxhO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHIpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO2lmKChjPXQuX2V2ZW50cyk/KGMubmV3TGlzdGVuZXImJih0LmVtaXQoXCJuZXdMaXN0ZW5lclwiLGUsci5saXN0ZW5lcj9yLmxpc3RlbmVyOnIpLGM9dC5fZXZlbnRzKSx1PWNbZV0pOihjPXQuX2V2ZW50cz1uZXcgaSx0Ll9ldmVudHNDb3VudD0wKSx1KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB1P3U9Y1tlXT1uP1tyLHVdOlt1LHJdOm4/dS51bnNoaWZ0KHIpOnUucHVzaChyKSwhdS53YXJuZWQmJihzPW8odCkpJiZzPjAmJnUubGVuZ3RoPnMpe3Uud2FybmVkPSEwO3ZhciBoPW5ldyBFcnJvcihcIlBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gXCIrdS5sZW5ndGgrXCIgXCIrZStcIiBsaXN0ZW5lcnMgYWRkZWQuIFVzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0XCIpO2gubmFtZT1cIk1heExpc3RlbmVyc0V4Y2VlZGVkV2FybmluZ1wiLGguZW1pdHRlcj10LGgudHlwZT1lLGguY291bnQ9dS5sZW5ndGgsYT1oLFwiZnVuY3Rpb25cIj09dHlwZW9mIGNvbnNvbGUud2Fybj9jb25zb2xlLndhcm4oYSk6Y29uc29sZS5sb2coYSl9fWVsc2UgdT1jW2VdPXIsKyt0Ll9ldmVudHNDb3VudDtyZXR1cm4gdH1mdW5jdGlvbiBkKHQsZSxyKXt2YXIgbj0hMTtmdW5jdGlvbiBpKCl7dC5yZW1vdmVMaXN0ZW5lcihlLGkpLG58fChuPSEwLHIuYXBwbHkodCxhcmd1bWVudHMpKX1yZXR1cm4gaS5saXN0ZW5lcj1yLGl9ZnVuY3Rpb24gcCh0KXt2YXIgZT10aGlzLl9ldmVudHM7aWYoZSl7dmFyIHI9ZVt0XTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKXJldHVybiAxO2lmKHIpcmV0dXJuIHIubGVuZ3RofXJldHVybiAwfWZ1bmN0aW9uIHYodCxlKXtmb3IodmFyIHI9bmV3IEFycmF5KGUpO2UtLTspcltlXT10W2VdO3JldHVybiByfWkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobnVsbCkscy5FdmVudEVtaXR0ZXI9cyxzLnVzaW5nRG9tYWlucz0hMSxzLnByb3RvdHlwZS5kb21haW49dm9pZCAwLHMucHJvdG90eXBlLl9ldmVudHM9dm9pZCAwLHMucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnM9dm9pZCAwLHMuZGVmYXVsdE1heExpc3RlbmVycz0xMCxzLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmRvbWFpbj1udWxsLHMudXNpbmdEb21haW5zJiZ1bmRlZmluZWQuYWN0aXZlLHRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzIT09T2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLl9ldmVudHN8fCh0aGlzLl9ldmVudHM9bmV3IGksdGhpcy5fZXZlbnRzQ291bnQ9MCksdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfSxzLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fHQ8MHx8aXNOYU4odCkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJuXCIgYXJndW1lbnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO3JldHVybiB0aGlzLl9tYXhMaXN0ZW5lcnM9dCx0aGlzfSxzLnByb3RvdHlwZS5nZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtyZXR1cm4gbyh0aGlzKX0scy5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbih0KXt2YXIgZSxyLG4saSxzLG8sbCxkPVwiZXJyb3JcIj09PXQ7aWYobz10aGlzLl9ldmVudHMpZD1kJiZudWxsPT1vLmVycm9yO2Vsc2UgaWYoIWQpcmV0dXJuITE7aWYobD10aGlzLmRvbWFpbixkKXtpZihlPWFyZ3VtZW50c1sxXSwhbCl7aWYoZSBpbnN0YW5jZW9mIEVycm9yKXRocm93IGU7dmFyIHA9bmV3IEVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LiAoJytlK1wiKVwiKTt0aHJvdyBwLmNvbnRleHQ9ZSxwfXJldHVybiBlfHwoZT1uZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCBcImVycm9yXCIgZXZlbnQnKSksZS5kb21haW5FbWl0dGVyPXRoaXMsZS5kb21haW49bCxlLmRvbWFpblRocm93bj0hMSxsLmVtaXQoXCJlcnJvclwiLGUpLCExfWlmKCEocj1vW3RdKSlyZXR1cm4hMTt2YXIgdj1cImZ1bmN0aW9uXCI9PXR5cGVvZiByO3N3aXRjaChuPWFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMTpjKHIsdix0aGlzKTticmVhaztjYXNlIDI6dShyLHYsdGhpcyxhcmd1bWVudHNbMV0pO2JyZWFrO2Nhc2UgMzphKHIsdix0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0pO2JyZWFrO2Nhc2UgNDpoKHIsdix0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0sYXJndW1lbnRzWzNdKTticmVhaztkZWZhdWx0OmZvcihpPW5ldyBBcnJheShuLTEpLHM9MTtzPG47cysrKWlbcy0xXT1hcmd1bWVudHNbc107ZihyLHYsdGhpcyxpKX1yZXR1cm4hMH0scy5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbCh0aGlzLHQsZSwhMSl9LHMucHJvdG90eXBlLm9uPXMucHJvdG90eXBlLmFkZExpc3RlbmVyLHMucHJvdG90eXBlLnByZXBlbmRMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3JldHVybiBsKHRoaXMsdCxlLCEwKX0scy5wcm90b3R5cGUub25jZT1mdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO3JldHVybiB0aGlzLm9uKHQsZCh0aGlzLHQsZSkpLHRoaXN9LHMucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtyZXR1cm4gdGhpcy5wcmVwZW5kTGlzdGVuZXIodCxkKHRoaXMsdCxlKSksdGhpc30scy5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXt2YXIgcixuLHMsbyxjO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO2lmKCEobj10aGlzLl9ldmVudHMpKXJldHVybiB0aGlzO2lmKCEocj1uW3RdKSlyZXR1cm4gdGhpcztpZihyPT09ZXx8ci5saXN0ZW5lciYmci5saXN0ZW5lcj09PWUpMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IGk6KGRlbGV0ZSBuW3RdLG4ucmVtb3ZlTGlzdGVuZXImJnRoaXMuZW1pdChcInJlbW92ZUxpc3RlbmVyXCIsdCxyLmxpc3RlbmVyfHxlKSk7ZWxzZSBpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiByKXtmb3Iocz0tMSxvPXIubGVuZ3RoO28tLSA+MDspaWYocltvXT09PWV8fHJbb10ubGlzdGVuZXImJnJbb10ubGlzdGVuZXI9PT1lKXtjPXJbb10ubGlzdGVuZXIscz1vO2JyZWFrfWlmKHM8MClyZXR1cm4gdGhpcztpZigxPT09ci5sZW5ndGgpe2lmKHJbMF09dm9pZCAwLDA9PS0tdGhpcy5fZXZlbnRzQ291bnQpcmV0dXJuIHRoaXMuX2V2ZW50cz1uZXcgaSx0aGlzO2RlbGV0ZSBuW3RdfWVsc2UhZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9ZSxuPXIrMSxpPXQubGVuZ3RoO248aTtyKz0xLG4rPTEpdFtyXT10W25dO3QucG9wKCl9KHIscyk7bi5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIix0LGN8fGUpfXJldHVybiB0aGlzfSxzLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUscjtpZighKHI9dGhpcy5fZXZlbnRzKSlyZXR1cm4gdGhpcztpZighci5yZW1vdmVMaXN0ZW5lcilyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2V2ZW50cz1uZXcgaSx0aGlzLl9ldmVudHNDb3VudD0wKTpyW3RdJiYoMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IGk6ZGVsZXRlIHJbdF0pLHRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpe2Zvcih2YXIgbixzPU9iamVjdC5rZXlzKHIpLG89MDtvPHMubGVuZ3RoOysrbylcInJlbW92ZUxpc3RlbmVyXCIhPT0obj1zW29dKSYmdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMobik7cmV0dXJuIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKFwicmVtb3ZlTGlzdGVuZXJcIiksdGhpcy5fZXZlbnRzPW5ldyBpLHRoaXMuX2V2ZW50c0NvdW50PTAsdGhpc31pZihcImZ1bmN0aW9uXCI9PXR5cGVvZihlPXJbdF0pKXRoaXMucmVtb3ZlTGlzdGVuZXIodCxlKTtlbHNlIGlmKGUpZG97dGhpcy5yZW1vdmVMaXN0ZW5lcih0LGVbZS5sZW5ndGgtMV0pfXdoaWxlKGVbMF0pO3JldHVybiB0aGlzfSxzLnByb3RvdHlwZS5saXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUscj10aGlzLl9ldmVudHM7cmV0dXJuIHImJihlPXJbdF0pP1wiZnVuY3Rpb25cIj09dHlwZW9mIGU/W2UubGlzdGVuZXJ8fGVdOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQXJyYXkodC5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcillW3JdPXRbcl0ubGlzdGVuZXJ8fHRbcl07cmV0dXJuIGV9KGUpOltdfSxzLmxpc3RlbmVyQ291bnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lmxpc3RlbmVyQ291bnQ/dC5saXN0ZW5lckNvdW50KGUpOnAuY2FsbCh0LGUpfSxzLnByb3RvdHlwZS5saXN0ZW5lckNvdW50PXAscy5wcm90b3R5cGUuZXZlbnROYW1lcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ldmVudHNDb3VudD4wP1JlZmxlY3Qub3duS2V5cyh0aGlzLl9ldmVudHMpOltdfTt2YXIgdyx5PTFlNyxtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMubG9ja2VkPSExfXJldHVybiB0LnByb3RvdHlwZS5sb2NrPWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMubG9ja2VkP1s0LG5ldyBQcm9taXNlKChmdW5jdGlvbih0KXtyZXR1cm4gc2V0VGltZW91dCh0LDEpfSkpXTpbMywyXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFszLDBdO2Nhc2UgMjpyZXR1cm4gdGhpcy5sb2NrZWQ9ITAsWzJdfX0pKX0pKX0sdC5wcm90b3R5cGUudW5sb2NrPWZ1bmN0aW9uKCl7dGhpcy5sb2NrZWQ9ITF9LHR9KCksYj1mdW5jdGlvbih0KXtmdW5jdGlvbiBpKGUscixuKXt2b2lkIDA9PT1yJiYocj0wKSx2b2lkIDA9PT1uJiYobj0xZTcpO3ZhciBpPXQuY2FsbCh0aGlzKXx8dGhpcztpLnRyYW5zcG9ydD1lLGkubW9kZT1yLGkuY2xvY2tGcmVxdWVuY3k9bixpLmNvbm5lY3RlZD0hMSxpLnNlbmRNdXRleD1uZXcgbSxpLmJsb2NrU2l6ZT1pLnRyYW5zcG9ydC5wYWNrZXRTaXplLTQtMTt2YXIgcz1pLnRyYW5zcG9ydC5wYWNrZXRTaXplLTItMTtyZXR1cm4gaS5vcGVyYXRpb25Db3VudD1NYXRoLmZsb29yKHMvNSksaX1yZXR1cm4gZShpLHQpLGkucHJvdG90eXBlLmJ1ZmZlclNvdXJjZVRvVWludDhBcnJheT1mdW5jdGlvbih0LGUpe2lmKCFlKXJldHVybiBuZXcgVWludDhBcnJheShbdF0pO3ZhciByPXZvaWQgMCE9PWUuYnVmZmVyP2UuYnVmZmVyOmUsbj1uZXcgVWludDhBcnJheShyLmJ5dGVMZW5ndGgrMSk7cmV0dXJuIG4uc2V0KFt0XSksbi5zZXQobmV3IFVpbnQ4QXJyYXkociksMSksbn0saS5wcm90b3R5cGUuc2VsZWN0UHJvdG9jb2w9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9Mj09PXQ/NTkxOTY6NTkyOTQsWzQsdGhpcy5zd2pTZXF1ZW5jZShuZXcgVWludDhBcnJheShbMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1XSkpXTtjYXNlIDE6cmV0dXJuIHIuc2VudCgpLFs0LHRoaXMuc3dqU2VxdWVuY2UobmV3IFVpbnQxNkFycmF5KFtlXSkpXTtjYXNlIDI6cmV0dXJuIHIuc2VudCgpLFs0LHRoaXMuc3dqU2VxdWVuY2UobmV3IFVpbnQ4QXJyYXkoWzI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NV0pKV07Y2FzZSAzOnJldHVybiByLnNlbnQoKSxbNCx0aGlzLnN3alNlcXVlbmNlKG5ldyBVaW50OEFycmF5KFswXSkpXTtjYXNlIDQ6cmV0dXJuIHIuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHIsaTtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybiByPXRoaXMuYnVmZmVyU291cmNlVG9VaW50OEFycmF5KHQsZSksWzQsdGhpcy5zZW5kTXV0ZXgubG9jaygpXTtjYXNlIDE6bi5zZW50KCksbi5sYWJlbD0yO2Nhc2UgMjpyZXR1cm4gbi50cnlzLnB1c2goWzIsLDUsNl0pLFs0LHRoaXMudHJhbnNwb3J0LndyaXRlKHIpXTtjYXNlIDM6cmV0dXJuIG4uc2VudCgpLFs0LHRoaXMudHJhbnNwb3J0LnJlYWQoKV07Y2FzZSA0OmlmKChpPW4uc2VudCgpKS5nZXRVaW50OCgwKSE9PXQpdGhyb3cgbmV3IEVycm9yKFwiQmFkIHJlc3BvbnNlIGZvciBcIit0K1wiIC0+IFwiK2kuZ2V0VWludDgoMCkpO3N3aXRjaCh0KXtjYXNlIDM6Y2FzZSA4OmNhc2UgOTpjYXNlIDEwOmNhc2UgMTc6Y2FzZSAxODpjYXNlIDE5OmNhc2UgMjk6Y2FzZSAyMzpjYXNlIDI0OmNhc2UgMjY6Y2FzZSAyMTpjYXNlIDIyOmNhc2UgNDppZigwIT09aS5nZXRVaW50OCgxKSl0aHJvdyBuZXcgRXJyb3IoXCJCYWQgc3RhdHVzIGZvciBcIit0K1wiIC0+IFwiK2kuZ2V0VWludDgoMSkpfXJldHVyblsyLGldO2Nhc2UgNTpyZXR1cm4gdGhpcy5zZW5kTXV0ZXgudW5sb2NrKCksWzddO2Nhc2UgNjpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5jbGVhckFib3J0PWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0zMCkscih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnNlbmQoOCxuZXcgVWludDhBcnJheShbMCx0XSkpXTtjYXNlIDE6cmV0dXJuIGUuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLmRhcEluZm89ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLHIsaSxzO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG4udHJ5cy5wdXNoKFswLDIsLDRdKSxbNCx0aGlzLnNlbmQoMCxuZXcgVWludDhBcnJheShbdF0pKV07Y2FzZSAxOmlmKGU9bi5zZW50KCksMD09PShyPWUuZ2V0VWludDgoMSkpKXJldHVyblsyLFwiXCJdO3N3aXRjaCh0KXtjYXNlIDI0MDpjYXNlIDI1NDpjYXNlIDI1NTpjYXNlIDI1MzppZigxPT09cilyZXR1cm5bMixlLmdldFVpbnQ4KDIpXTtpZigyPT09cilyZXR1cm5bMixlLmdldFVpbnQxNigyKV07aWYoND09PXIpcmV0dXJuWzIsZS5nZXRVaW50MzIoMildfXJldHVybiBpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG5ldyBVaW50OEFycmF5KGUuYnVmZmVyLDIscikpLFsyLFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxpKV07Y2FzZSAyOnJldHVybiBzPW4uc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDM6dGhyb3cgbi5zZW50KCkscztjYXNlIDQ6cmV0dXJuWzJdfX0pKX0pKX0saS5wcm90b3R5cGUuc3dqU2VxdWVuY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9OCp0LmJ5dGVMZW5ndGgpLHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLGk7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyPXRoaXMuYnVmZmVyU291cmNlVG9VaW50OEFycmF5KGUsdCksbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbi50cnlzLnB1c2goWzEsMywsNV0pLFs0LHRoaXMuc2VuZCgxOCxyKV07Y2FzZSAyOnJldHVybiBuLnNlbnQoKSxbMyw1XTtjYXNlIDM6cmV0dXJuIGk9bi5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgNDp0aHJvdyBuLnNlbnQoKSxpO2Nhc2UgNTpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5zd2pDbG9jaz1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm4gci50cnlzLnB1c2goWzAsMiwsNF0pLFs0LHRoaXMuc2VuZCgxNyxuZXcgVWludDhBcnJheShbMjU1JnQsKDY1MjgwJnQpPj44LCgxNjcxMTY4MCZ0KT4+MTYsKDQyNzgxOTAwODAmdCk+PjI0XSkpXTtjYXNlIDE6cmV0dXJuIHIuc2VudCgpLFszLDRdO2Nhc2UgMjpyZXR1cm4gZT1yLnNlbnQoKSxbNCx0aGlzLmNsZWFyQWJvcnQoKV07Y2FzZSAzOnRocm93IHIuc2VudCgpLGU7Y2FzZSA0OnJldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLnN3alBpbnM9ZnVuY3Rpb24odCxlLGkpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcjtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybiBuLnRyeXMucHVzaChbMCwyLCw0XSksWzQsdGhpcy5zZW5kKDE2LG5ldyBVaW50OEFycmF5KFt0LGUsMjU1JmksKDY1MjgwJmkpPj44LCgxNjcxMTY4MCZpKT4+MTYsKDQyNzgxOTAwODAmaSk+PjI0XSkpXTtjYXNlIDE6cmV0dXJuWzIsbi5zZW50KCkuZ2V0VWludDgoMSldO2Nhc2UgMjpyZXR1cm4gcj1uLnNlbnQoKSxbNCx0aGlzLmNsZWFyQWJvcnQoKV07Y2FzZSAzOnRocm93IG4uc2VudCgpLHI7Y2FzZSA0OnJldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLmRhcERlbGF5PWZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiByLnRyeXMucHVzaChbMCwyLCw0XSksWzQsdGhpcy5zZW5kKDksbmV3IFVpbnQ4QXJyYXkoWzI1NSZ0LCg2NTI4MCZ0KT4+OF0pKV07Y2FzZSAxOnJldHVybiByLnNlbnQoKSxbMyw0XTtjYXNlIDI6cmV0dXJuIGU9ci5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgMzp0aHJvdyByLnNlbnQoKSxlO2Nhc2UgNDpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5jb25maWd1cmVUcmFuc2Zlcj1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLHMsbztyZXR1cm4gbih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnI9bmV3IFVpbnQ4QXJyYXkoNSksKHM9bmV3IERhdGFWaWV3KHIuYnVmZmVyKSkuc2V0VWludDgoMCx0KSxzLnNldFVpbnQxNigxLGUsITApLHMuc2V0VWludDE2KDMsaSwhMCksbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbi50cnlzLnB1c2goWzEsMywsNV0pLFs0LHRoaXMuc2VuZCg0LHIpXTtjYXNlIDI6cmV0dXJuIG4uc2VudCgpLFszLDVdO2Nhc2UgMzpyZXR1cm4gbz1uLnNlbnQoKSxbNCx0aGlzLmNsZWFyQWJvcnQoKV07Y2FzZSA0OnRocm93IG4uc2VudCgpLG87Y2FzZSA1OnJldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxyO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuITA9PT10aGlzLmNvbm5lY3RlZD9bMl06WzQsdGhpcy50cmFuc3BvcnQub3BlbigpXTtjYXNlIDE6bi5zZW50KCksbi5sYWJlbD0yO2Nhc2UgMjpyZXR1cm4gbi50cnlzLnB1c2goWzIsNSwsOF0pLFs0LHRoaXMuc2VuZCgxNyxuZXcgVWludDMyQXJyYXkoW3RoaXMuY2xvY2tGcmVxdWVuY3ldKSldO2Nhc2UgMzpyZXR1cm4gbi5zZW50KCksWzQsdGhpcy5zZW5kKDIsbmV3IFVpbnQ4QXJyYXkoW3RoaXMubW9kZV0pKV07Y2FzZSA0OmlmKDA9PT0odD1uLnNlbnQoKSkuZ2V0VWludDgoMSl8fDAhPT10aGlzLm1vZGUmJnQuZ2V0VWludDgoMSkhPT10aGlzLm1vZGUpdGhyb3cgbmV3IEVycm9yKFwiTW9kZSBub3QgZW5hYmxlZC5cIik7cmV0dXJuWzMsOF07Y2FzZSA1OnJldHVybiBlPW4uc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDY6cmV0dXJuIG4uc2VudCgpLFs0LHRoaXMudHJhbnNwb3J0LmNsb3NlKCldO2Nhc2UgNzp0aHJvdyBuLnNlbnQoKSxlO2Nhc2UgODpyZXR1cm4gbi50cnlzLnB1c2goWzgsMTEsLDEzXSksWzQsdGhpcy5jb25maWd1cmVUcmFuc2ZlcigwLDEwMCwwKV07Y2FzZSA5OnJldHVybiBuLnNlbnQoKSxbNCx0aGlzLnNlbGVjdFByb3RvY29sKDEpXTtjYXNlIDEwOnJldHVybiBuLnNlbnQoKSxbMywxM107Y2FzZSAxMTpyZXR1cm4gcj1uLnNlbnQoKSxbNCx0aGlzLnRyYW5zcG9ydC5jbG9zZSgpXTtjYXNlIDEyOnRocm93IG4uc2VudCgpLHI7Y2FzZSAxMzpyZXR1cm4gdGhpcy5jb25uZWN0ZWQ9ITAsWzJdfX0pKX0pKX0saS5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOmlmKCExPT09dGhpcy5jb25uZWN0ZWQpcmV0dXJuWzJdO2UubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGUudHJ5cy5wdXNoKFsxLDMsLDVdKSxbNCx0aGlzLnNlbmQoMyldO2Nhc2UgMjpyZXR1cm4gZS5zZW50KCksWzMsNV07Y2FzZSAzOnJldHVybiB0PWUuc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDQ6dGhyb3cgZS5zZW50KCksdDtjYXNlIDU6cmV0dXJuWzQsdGhpcy50cmFuc3BvcnQuY2xvc2UoKV07Y2FzZSA2OnJldHVybiBlLnNlbnQoKSx0aGlzLmNvbm5lY3RlZD0hMSxbMl19fSkpfSkpfSxpLnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmRpc2Nvbm5lY3QoKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbNCxuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCl7cmV0dXJuIHNldFRpbWVvdXQodCwxMDApfSkpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLFs0LHRoaXMuY29ubmVjdCgpXTtjYXNlIDM6cmV0dXJuIHQuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuIGUudHJ5cy5wdXNoKFswLDIsLDRdKSxbNCx0aGlzLnNlbmQoMTApXTtjYXNlIDE6cmV0dXJuWzIsMT09PWUuc2VudCgpLmdldFVpbnQ4KDIpXTtjYXNlIDI6cmV0dXJuIHQ9ZS5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgMzp0aHJvdyBlLnNlbnQoKSx0O2Nhc2UgNDpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS50cmFuc2Zlcj1mdW5jdGlvbih0LGUsaSxzKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9Miksdm9pZCAwPT09aSYmKGk9MCksdm9pZCAwPT09cyYmKHM9MCkscih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHIsbyxjLHUsYSxoLGY7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyPVwibnVtYmVyXCI9PXR5cGVvZiB0P1t7cG9ydDp0LG1vZGU6ZSxyZWdpc3RlcjppLHZhbHVlOnN9XTp0LG89bmV3IFVpbnQ4QXJyYXkoMis1KnIubGVuZ3RoKSwoYz1uZXcgRGF0YVZpZXcoby5idWZmZXIpKS5zZXRVaW50OCgwLDApLGMuc2V0VWludDgoMSxyLmxlbmd0aCksci5mb3JFYWNoKChmdW5jdGlvbih0LGUpe3ZhciByPTIrNSplO2Muc2V0VWludDgocix0LnBvcnR8dC5tb2RlfHQucmVnaXN0ZXIpLGMuc2V0VWludDMyKHIrMSx0LnZhbHVlfHwwLCEwKX0pKSxuLmxhYmVsPTE7Y2FzZSAxOnJldHVybiBuLnRyeXMucHVzaChbMSwzLCw1XSksWzQsdGhpcy5zZW5kKDUsbyldO2Nhc2UgMjppZigodT1uLnNlbnQoKSkuZ2V0VWludDgoMSkhPT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2ZlciBjb3VudCBtaXNtYXRjaFwiKTtpZigyPT09KGE9dS5nZXRVaW50OCgyKSkpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNmZXIgcmVzcG9uc2UgV0FJVFwiKTtpZig0PT09YSl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2ZlciByZXNwb25zZSBGQVVMVFwiKTtpZig4PT09YSl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2ZlciByZXNwb25zZSBQUk9UT0NPTF9FUlJPUlwiKTtpZigxNj09PWEpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNmZXIgcmVzcG9uc2UgVkFMVUVfTUlTTUFUQ0hcIik7aWYoNz09PWEpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNmZXIgcmVzcG9uc2UgTk9fQUNLXCIpO3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0P1syLHUuZ2V0VWludDMyKDMsITApXTooaD00KnIubGVuZ3RoLFsyLG5ldyBVaW50MzJBcnJheSh1LmJ1ZmZlci5zbGljZSgzLDMraCkpXSk7Y2FzZSAzOnJldHVybiBmPW4uc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDQ6dGhyb3cgbi5zZW50KCksZjtjYXNlIDU6cmV0dXJuWzJdfX0pKX0pKX0saS5wcm90b3R5cGUudHJhbnNmZXJCbG9jaz1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLHMsbyxjLHUsYSxoLGY7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpvPTQsXCJudW1iZXJcIj09dHlwZW9mIGk/KHI9aSxzPTIpOihyPWkubGVuZ3RoLHM9MCxvKz1pLmJ5dGVMZW5ndGgpLGM9bmV3IFVpbnQ4QXJyYXkobyksKHU9bmV3IERhdGFWaWV3KGMuYnVmZmVyKSkuc2V0VWludDgoMCwwKSx1LnNldFVpbnQxNigxLHIsITApLHUuc2V0VWludDgoMyx0fHN8ZSksXCJudW1iZXJcIiE9dHlwZW9mIGkmJmkuZm9yRWFjaCgoZnVuY3Rpb24odCxlKXt2YXIgcj00KzQqZTt1LnNldFVpbnQzMihyLHQsITApfSkpLG4ubGFiZWw9MTtjYXNlIDE6cmV0dXJuIG4udHJ5cy5wdXNoKFsxLDMsLDVdKSxbNCx0aGlzLnNlbmQoNix1KV07Y2FzZSAyOmlmKChhPW4uc2VudCgpKS5nZXRVaW50MTYoMSwhMCkhPT1yKXRocm93IG5ldyBFcnJvcihcIlRyYW5zZmVyIGNvdW50IG1pc21hdGNoXCIpO2lmKDI9PT0oaD1hLmdldFVpbnQ4KDMpKSl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2ZlciByZXNwb25zZSBXQUlUXCIpO2lmKDQ9PT1oKXRocm93IG5ldyBFcnJvcihcIlRyYW5zZmVyIHJlc3BvbnNlIEZBVUxUXCIpO2lmKDg9PT1oKXRocm93IG5ldyBFcnJvcihcIlRyYW5zZmVyIHJlc3BvbnNlIFBST1RPQ09MX0VSUk9SXCIpO2lmKDc9PT1oKXRocm93IG5ldyBFcnJvcihcIlRyYW5zZmVyIHJlc3BvbnNlIE5PX0FDS1wiKTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgaT9bMixuZXcgVWludDMyQXJyYXkoYS5idWZmZXIuc2xpY2UoNCw0KzQqcikpXTpbMyw1XTtjYXNlIDM6cmV0dXJuIGY9bi5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgNDp0aHJvdyBuLnNlbnQoKSxmO2Nhc2UgNTpyZXR1cm5bMix2b2lkIDBdfX0pKX0pKX0saX0ocyksZz0vW1xceGMwLVxceGZmXVtcXHg4MC1cXHhiZl0qJC9nLEE9L1tcXHhjMC1cXHhmZl1bXFx4ODAtXFx4YmZdKi9nLEM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24odCl7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobmV3IFVpbnQ4QXJyYXkodCkpLHI9U3RyaW5nLmZyb21Db2RlUG9pbnQuYXBwbHkodm9pZCAwLGUpO3RoaXMucGFydGlhbENoYXImJihyPVwiXCIrdGhpcy5wYXJ0aWFsQ2hhcityLHRoaXMucGFydGlhbENoYXI9dm9pZCAwKTt2YXIgbj1yLm1hdGNoKGcpO2lmKG4pe3ZhciBpPW5bMF0ubGVuZ3RoO3RoaXMucGFydGlhbENoYXI9ci5zbGljZSgtaSkscj1yLnNsaWNlKDAsLWkpfXJldHVybiByLnJlcGxhY2UoQSx0aGlzLmRlY29kZXJSZXBsYWNlcil9LHQucHJvdG90eXBlLmRlY29kZXJSZXBsYWNlcj1mdW5jdGlvbih0KXt2YXIgZT10LmNvZGVQb2ludEF0KDApPDwyNCxyPU1hdGguY2x6MzIofmUpLG49MCxpPXQubGVuZ3RoLHM9XCJcIjtpZihyPDUmJmk+PXIpe2ZvcihlPWU8PHI+Pj4yNCtyLG49MTtuPHI7bis9MSllPWU8PDZ8NjMmdC5jb2RlUG9pbnRBdChuKTtlPD02NTUzNT9zKz1TdHJpbmcuZnJvbUNvZGVQb2ludChlKTplPD0xMTE0MTExPyhlLT02NTUzNixzKz1TdHJpbmcuZnJvbUNvZGVQb2ludCg1NTI5NisoZT4+MTApLDU2MzIwKygxMDIzJmUpKSk6bj0wfWZvcig7bjxpO24rPTEpcys9XCLvv71cIjtyZXR1cm4gc30sdH0oKSxVPW5ldyBDLEU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gaShlLHMsbyl7dm9pZCAwPT09cyYmKHM9MCksdm9pZCAwPT09byYmKG89MWU3KTt2YXIgYz10LmNhbGwodGhpcyxlLHMsbyl8fHRoaXM7cmV0dXJuIGMuc2VyaWFsUG9sbGluZz0hMSxjLnNlcmlhbExpc3RlbmVycz0hMSxjLm9uKFwibmV3TGlzdGVuZXJcIiwoZnVuY3Rpb24odCl7cmV0dXJuIHIoYyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKGUpe3JldHVybiB0PT09aS5FVkVOVF9TRVJJQUxfREFUQSYmMD09PXRoaXMubGlzdGVuZXJDb3VudCh0KSYmKHRoaXMuc2VyaWFsTGlzdGVuZXJzPSEwKSxbMl19KSl9KSl9KSksYy5vbihcInJlbW92ZUxpc3RlbmVyXCIsKGZ1bmN0aW9uKHQpe3Q9PT1pLkVWRU5UX1NFUklBTF9EQVRBJiYoMD09PWMubGlzdGVuZXJDb3VudCh0KSYmKGMuc2VyaWFsTGlzdGVuZXJzPSExKSl9KSksY31yZXR1cm4gZShpLHQpLGkucHJvdG90eXBlLmlzQnVmZmVyQmluYXJ5PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChuZXcgVWludDE2QXJyYXkodCwwLDUwKSkscj1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsZSksbj0wO248ci5sZW5ndGg7bisrKXt2YXIgaT1yLmNoYXJDb2RlQXQobik7aWYoNjU1MzM9PT1pfHxpPD04KXJldHVybiEwfXJldHVybiExfSxpLnByb3RvdHlwZS53cml0ZUJ1ZmZlcj1mdW5jdGlvbih0LGUscyl7cmV0dXJuIHZvaWQgMD09PXMmJihzPTApLHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLG8sYyx1O3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cj1NYXRoLm1pbih0LmJ5dGVMZW5ndGgscytlKSxvPXQuc2xpY2UocyxyKSwoYz1uZXcgVWludDhBcnJheShvLmJ5dGVMZW5ndGgrMSkpLnNldChbby5ieXRlTGVuZ3RoXSksYy5zZXQobmV3IFVpbnQ4QXJyYXkobyksMSksbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbi50cnlzLnB1c2goWzEsMywsNV0pLFs0LHRoaXMuc2VuZCgxNDAsYyldO2Nhc2UgMjpyZXR1cm4gbi5zZW50KCksWzMsNV07Y2FzZSAzOnJldHVybiB1PW4uc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDQ6dGhyb3cgbi5zZW50KCksdTtjYXNlIDU6cmV0dXJuIHRoaXMuZW1pdChpLkVWRU5UX1BST0dSRVNTLHMvdC5ieXRlTGVuZ3RoKSxyPHQuYnl0ZUxlbmd0aD9bMix0aGlzLndyaXRlQnVmZmVyKHQsZSxyKV06WzJdfX0pKX0pKX0saS5wcm90b3R5cGUuZmxhc2g9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9NjIpLHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLHMsbztyZXR1cm4gbih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnI9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXQuYnVmZmVyfSh0KT90LmJ1ZmZlcjp0LHM9dGhpcy5pc0J1ZmZlckJpbmFyeShyKT8wOjEsbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbi50cnlzLnB1c2goWzEsNiwsOF0pLFs0LHRoaXMuc2VuZCgxMzgsbmV3IFVpbnQzMkFycmF5KFtzXSkpXTtjYXNlIDI6aWYoMCE9PW4uc2VudCgpLmdldFVpbnQ4KDEpKXRocm93IG5ldyBFcnJvcihcIkZsYXNoIGVycm9yXCIpO3JldHVybls0LHRoaXMud3JpdGVCdWZmZXIocixlKV07Y2FzZSAzOnJldHVybiBuLnNlbnQoKSx0aGlzLmVtaXQoaS5FVkVOVF9QUk9HUkVTUywxKSxbNCx0aGlzLnNlbmQoMTM5KV07Y2FzZSA0OmlmKDAhPT1uLnNlbnQoKS5nZXRVaW50OCgxKSl0aHJvdyBuZXcgRXJyb3IoXCJGbGFzaCBlcnJvclwiKTtyZXR1cm5bNCx0aGlzLnNlbmQoMTM3KV07Y2FzZSA1OnJldHVybiBuLnNlbnQoKSxbMyw4XTtjYXNlIDY6cmV0dXJuIG89bi5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgNzp0aHJvdyBuLnNlbnQoKSxvO2Nhc2UgODpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5nZXRTZXJpYWxCYXVkcmF0ZT1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybiBlLnRyeXMucHVzaChbMCwyLCw0XSksWzQsdGhpcy5zZW5kKDEyOSldO2Nhc2UgMTpyZXR1cm5bMixlLnNlbnQoKS5nZXRVaW50MzIoMSwhMCldO2Nhc2UgMjpyZXR1cm4gdD1lLnNlbnQoKSxbNCx0aGlzLmNsZWFyQWJvcnQoKV07Y2FzZSAzOnRocm93IGUuc2VudCgpLHQ7Y2FzZSA0OnJldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLnNldFNlcmlhbEJhdWRyYXRlPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD05NjAwKSxyKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiByLnRyeXMucHVzaChbMCwyLCw0XSksWzQsdGhpcy5zZW5kKDEzMCxuZXcgVWludDMyQXJyYXkoW3RdKSldO2Nhc2UgMTpyZXR1cm4gci5zZW50KCksWzMsNF07Y2FzZSAyOnJldHVybiBlPXIuc2VudCgpLFs0LHRoaXMuY2xlYXJBYm9ydCgpXTtjYXNlIDM6dGhyb3cgci5zZW50KCksZTtjYXNlIDQ6cmV0dXJuWzJdfX0pKX0pKX0saS5wcm90b3R5cGUuc2VyaWFsV3JpdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLHI7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDooZT10LnNwbGl0KFwiXCIpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuY2hhckNvZGVBdCgwKX0pKSkudW5zaGlmdChlLmxlbmd0aCksbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbi50cnlzLnB1c2goWzEsMywsNV0pLFs0LHRoaXMuc2VuZCgxMzIsbmV3IFVpbnQ4QXJyYXkoZSkuYnVmZmVyKV07Y2FzZSAyOnJldHVybiBuLnNlbnQoKSxbMyw1XTtjYXNlIDM6cmV0dXJuIHI9bi5zZW50KCksWzQsdGhpcy5jbGVhckFib3J0KCldO2Nhc2UgNDp0aHJvdyBuLnNlbnQoKSxyO2Nhc2UgNTpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5zZXJpYWxSZWFkPWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0LGUscjtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybiBuLnRyeXMucHVzaChbMCwyLCw0XSksWzQsdGhpcy5zZW5kKDEzMSldO2Nhc2UgMTpyZXR1cm4gMD09PSh0PW4uc2VudCgpKS5ieXRlTGVuZ3RofHwoMTMxIT09dC5nZXRVaW50OCgwKXx8MD09PShlPXQuZ2V0VWludDgoMSkpKT9bMix2b2lkIDBdOigyLFsyLHQuYnVmZmVyLnNsaWNlKDIsMitlKV0pO2Nhc2UgMjpyZXR1cm4gcj1uLnNlbnQoKSxbNCx0aGlzLmNsZWFyQWJvcnQoKV07Y2FzZSAzOnRocm93IG4uc2VudCgpLHI7Y2FzZSA0OnJldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLnN0YXJ0U2VyaWFsUmVhZD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD0xMDApLHZvaWQgMD09PWUmJihlPSEwKSxyKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcixzLG87cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDp0aGlzLnNlcmlhbFBvbGxpbmc9ITAsbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdGhpcy5zZXJpYWxQb2xsaW5nP3RoaXMuc2VyaWFsTGlzdGVuZXJzPyhyPXRoaXMuY29ubmVjdGVkLCExIT09dGhpcy5jb25uZWN0ZWR8fCEwIT09ZT9bMywzXTpbNCx0aGlzLmNvbm5lY3QoKV0pOlszLDddOlszLDldO2Nhc2UgMjpuLnNlbnQoKSxuLmxhYmVsPTM7Y2FzZSAzOnJldHVybls0LHRoaXMuc2VyaWFsUmVhZCgpXTtjYXNlIDQ6cmV0dXJuIHM9bi5zZW50KCksITEhPT1yfHwhMCE9PWU/WzMsNl06WzQsdGhpcy5kaXNjb25uZWN0KCldO2Nhc2UgNTpuLnNlbnQoKSxuLmxhYmVsPTY7Y2FzZSA2OnZvaWQgMCE9PXMmJihvPVUuZGVjb2RlKHMpLHRoaXMuZW1pdChpLkVWRU5UX1NFUklBTF9EQVRBLG8pKSxuLmxhYmVsPTc7Y2FzZSA3OnJldHVybls0LG5ldyBQcm9taXNlKChmdW5jdGlvbihlKXtyZXR1cm4gc2V0VGltZW91dChlLHQpfSkpXTtjYXNlIDg6cmV0dXJuIG4uc2VudCgpLFszLDFdO2Nhc2UgOTpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5zdG9wU2VyaWFsUmVhZD1mdW5jdGlvbigpe3RoaXMuc2VyaWFsUG9sbGluZz0hMX0saS5FVkVOVF9QUk9HUkVTUz1cInByb2dyZXNzXCIsaS5FVkVOVF9TRVJJQUxfREFUQT1cInNlcmlhbFwiLGl9KGIpLFA9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxyKXt2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1yJiYocj0xZTcpO3RoaXMucHJveHk9dm9pZCAwIT09dC5vcGVuP25ldyBiKHQsZSxyKTp0fXJldHVybiB0LnByb3RvdHlwZS53YWl0RGVsYXk9ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1pJiYoaT0xMDApLHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cj0hMCxlPjAmJnNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7aWYocil0aHJvdyByPSExLG5ldyBFcnJvcihcIldhaXQgdGltZWQgb3V0XCIpfSksZSksbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gcj9bNCx0KCldOlszLDVdO2Nhc2UgMjpyZXR1cm4hMD09PW4uc2VudCgpPyhyPSExLFsyXSk6aT4wP1s0LG5ldyBQcm9taXNlKChmdW5jdGlvbih0KXtyZXR1cm4gc2V0VGltZW91dCh0LGUpfSkpXTpbMyw0XTtjYXNlIDM6bi5zZW50KCksbi5sYWJlbD00O2Nhc2UgNDpyZXR1cm5bMywxXTtjYXNlIDU6cmV0dXJuWzJdfX0pKX0pKX0sdC5wcm90b3R5cGUuY29uY2F0VHlwZWRBcnJheT1mdW5jdGlvbih0KXtpZigxPT09dC5sZW5ndGgpcmV0dXJuIHRbMF07Zm9yKHZhciBlPTAscj0wLG49dDtyPG4ubGVuZ3RoO3IrKyl7ZSs9bltyXS5sZW5ndGh9Zm9yKHZhciBpPW5ldyBVaW50MzJBcnJheShlKSxzPTAsbz0wO3M8dC5sZW5ndGg7cysrKWkuc2V0KHRbc10sbyksbys9dFtzXS5sZW5ndGg7cmV0dXJuIGl9LHQucHJvdG90eXBlLnJlYWREUENvbW1hbmQ9ZnVuY3Rpb24odCl7cmV0dXJuW3ttb2RlOjIscG9ydDowLHJlZ2lzdGVyOnR9XX0sdC5wcm90b3R5cGUud3JpdGVEUENvbW1hbmQ9ZnVuY3Rpb24odCxlKXtpZig4PT09dCl7aWYoZT09PXRoaXMuc2VsZWN0ZWRBZGRyZXNzKXJldHVybltdO3RoaXMuc2VsZWN0ZWRBZGRyZXNzPWV9cmV0dXJuW3ttb2RlOjAscG9ydDowLHJlZ2lzdGVyOnQsdmFsdWU6ZX1dfSx0LnByb3RvdHlwZS5yZWFkQVBDb21tYW5kPWZ1bmN0aW9uKHQpe3ZhciBlPTQyNzgxOTAwODAmdHwyNDAmdDtyZXR1cm4gdGhpcy53cml0ZURQQ29tbWFuZCg4LGUpLmNvbmNhdCh7bW9kZToyLHBvcnQ6MSxyZWdpc3Rlcjp0fSl9LHQucHJvdG90eXBlLndyaXRlQVBDb21tYW5kPWZ1bmN0aW9uKHQsZSl7aWYoMD09PXQpe2lmKGU9PT10aGlzLmNzd1ZhbHVlKXJldHVybltdO3RoaXMuY3N3VmFsdWU9ZX12YXIgcj00Mjc4MTkwMDgwJnR8MjQwJnQ7cmV0dXJuIHRoaXMud3JpdGVEUENvbW1hbmQoOCxyKS5jb25jYXQoe21vZGU6MCxwb3J0OjEscmVnaXN0ZXI6dCx2YWx1ZTplfSl9LHQucHJvdG90eXBlLnJlYWRNZW0xNkNvbW1hbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud3JpdGVBUENvbW1hbmQoMCw1ODcyMDI2NDEpLmNvbmNhdCh0aGlzLndyaXRlQVBDb21tYW5kKDQsdCkpLmNvbmNhdCh0aGlzLnJlYWRBUENvbW1hbmQoMTIpKX0sdC5wcm90b3R5cGUud3JpdGVNZW0xNkNvbW1hbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy53cml0ZUFQQ29tbWFuZCgwLDU4NzIwMjY0MSkuY29uY2F0KHRoaXMud3JpdGVBUENvbW1hbmQoNCx0KSkuY29uY2F0KHRoaXMud3JpdGVBUENvbW1hbmQoMTIsZSkpfSx0LnByb3RvdHlwZS5yZWFkTWVtMzJDb21tYW5kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndyaXRlQVBDb21tYW5kKDAsNTg3MjAyNjQyKS5jb25jYXQodGhpcy53cml0ZUFQQ29tbWFuZCg0LHQpKS5jb25jYXQodGhpcy5yZWFkQVBDb21tYW5kKDEyKSl9LHQucHJvdG90eXBlLndyaXRlTWVtMzJDb21tYW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMud3JpdGVBUENvbW1hbmQoMCw1ODcyMDI2NDIpLmNvbmNhdCh0aGlzLndyaXRlQVBDb21tYW5kKDQsdCkpLmNvbmNhdCh0aGlzLndyaXRlQVBDb21tYW5kKDEyLGUpKX0sdC5wcm90b3R5cGUudHJhbnNmZXJTZXF1ZW5jZT1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUscixpLHM7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDplPShlPVtdKS5jb25jYXQuYXBwbHkoZSx0KSxyPVtdLG4ubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGUubGVuZ3RoPyhpPWUuc3BsaWNlKDAsdGhpcy5wcm94eS5vcGVyYXRpb25Db3VudCksWzQsdGhpcy5wcm94eS50cmFuc2ZlcihpKV0pOlszLDNdO2Nhc2UgMjpyZXR1cm4gcz1uLnNlbnQoKSxyLnB1c2gocyksWzMsMV07Y2FzZSAzOnJldHVyblsyLHRoaXMuY29uY2F0VHlwZWRBcnJheShyKV19fSkpfSkpfSx0LnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0LGU9dGhpcztyZXR1cm4gbih0aGlzLChmdW5jdGlvbihpKXtzd2l0Y2goaS5sYWJlbCl7Y2FzZSAwOnJldHVybiB0PS0xNjEwNjEyNzM2LFs0LHRoaXMucHJveHkuY29ubmVjdCgpXTtjYXNlIDE6cmV0dXJuIGkuc2VudCgpLFs0LHRoaXMucmVhZERQKDApXTtjYXNlIDI6cmV0dXJuIGkuc2VudCgpLFs0LHRoaXMudHJhbnNmZXJTZXF1ZW5jZShbdGhpcy53cml0ZURQQ29tbWFuZCgwLDQpLHRoaXMud3JpdGVEUENvbW1hbmQoOCwwKSx0aGlzLndyaXRlRFBDb21tYW5kKDQsMTM0MjE3NzI4MCldKV07Y2FzZSAzOnJldHVybiBpLnNlbnQoKSxbNCx0aGlzLndhaXREZWxheSgoZnVuY3Rpb24oKXtyZXR1cm4gcihlLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnJlYWREUCg0KV07Y2FzZSAxOnJldHVyblsyLChlLnNlbnQoKSZ0KT09PXRdfX0pKX0pKX0pKV07Y2FzZSA0OnJldHVybiBpLnNlbnQoKSxbMl19fSkpfSkpfSx0LnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJveHkuZGlzY29ubmVjdCgpfSx0LnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmRpc2Nvbm5lY3QoKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbNCxuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCl7cmV0dXJuIHNldFRpbWVvdXQodCwxMDApfSkpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLFs0LHRoaXMuY29ubmVjdCgpXTtjYXNlIDM6cmV0dXJuIHQuc2VudCgpLFsyXX19KSl9KSl9LHQucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJveHkucmVzZXQoKX0sdC5wcm90b3R5cGUucmVhZERQPWZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMucHJveHkudHJhbnNmZXIodGhpcy5yZWFkRFBDb21tYW5kKHQpKV07Y2FzZSAxOnJldHVyblsyLGUuc2VudCgpWzBdXX19KSl9KSl9LHQucHJvdG90eXBlLndyaXRlRFA9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnByb3h5LnRyYW5zZmVyKHRoaXMud3JpdGVEUENvbW1hbmQodCxlKSldO2Nhc2UgMTpyZXR1cm4gci5zZW50KCksWzJdfX0pKX0pKX0sdC5wcm90b3R5cGUucmVhZEFQPWZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMucHJveHkudHJhbnNmZXIodGhpcy5yZWFkQVBDb21tYW5kKHQpKV07Y2FzZSAxOnJldHVyblsyLGUuc2VudCgpWzBdXX19KSl9KSl9LHQucHJvdG90eXBlLndyaXRlQVA9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnByb3h5LnRyYW5zZmVyKHRoaXMud3JpdGVBUENvbW1hbmQodCxlKSldO2Nhc2UgMTpyZXR1cm4gci5zZW50KCksWzJdfX0pKX0pKX0sdC5wcm90b3R5cGUucmVhZE1lbTE2PWZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMucHJveHkudHJhbnNmZXIodGhpcy5yZWFkTWVtMTZDb21tYW5kKHQpKV07Y2FzZSAxOnJldHVyblsyLGUuc2VudCgpWzBdXX19KSl9KSl9LHQucHJvdG90eXBlLndyaXRlTWVtMTY9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZTw8PSgyJnQpPDwzLFs0LHRoaXMucHJveHkudHJhbnNmZXIodGhpcy53cml0ZU1lbTE2Q29tbWFuZCh0LGUpKV07Y2FzZSAxOnJldHVybiByLnNlbnQoKSxbMl19fSkpfSkpfSx0LnByb3RvdHlwZS5yZWFkTWVtMzI9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5wcm94eS50cmFuc2Zlcih0aGlzLnJlYWRNZW0zMkNvbW1hbmQodCkpXTtjYXNlIDE6cmV0dXJuWzIsZS5zZW50KClbMF1dfX0pKX0pKX0sdC5wcm90b3R5cGUud3JpdGVNZW0zMj1mdW5jdGlvbih0LGUpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMucHJveHkudHJhbnNmZXIodGhpcy53cml0ZU1lbTMyQ29tbWFuZCh0LGUpKV07Y2FzZSAxOnJldHVybiByLnNlbnQoKSxbMl19fSkpfSkpfSx0LnByb3RvdHlwZS5yZWFkQmxvY2s9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHIsaSxzLG87cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnRyYW5zZmVyU2VxdWVuY2UoW3RoaXMud3JpdGVBUENvbW1hbmQoMCw1ODcyMDI2NDIpLHRoaXMud3JpdGVBUENvbW1hbmQoNCx0KV0pXTtjYXNlIDE6bi5zZW50KCkscj1bXSxpPWUsbi5sYWJlbD0yO2Nhc2UgMjpyZXR1cm4gaT4wPyhzPU1hdGgubWluKGksTWF0aC5mbG9vcih0aGlzLnByb3h5LmJsb2NrU2l6ZS80KSksWzQsdGhpcy5wcm94eS50cmFuc2ZlckJsb2NrKDEsMTIscyldKTpbMyw0XTtjYXNlIDM6cmV0dXJuIG89bi5zZW50KCksci5wdXNoKG8pLGktPXMsWzMsMl07Y2FzZSA0OnJldHVyblsyLHRoaXMuY29uY2F0VHlwZWRBcnJheShyKV19fSkpfSkpfSx0LnByb3RvdHlwZS53cml0ZUJsb2NrPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciByLGk7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnRyYW5zZmVyU2VxdWVuY2UoW3RoaXMud3JpdGVBUENvbW1hbmQoMCw1ODcyMDI2NDIpLHRoaXMud3JpdGVBUENvbW1hbmQoNCx0KV0pXTtjYXNlIDE6bi5zZW50KCkscj0wLG4ubGFiZWw9MjtjYXNlIDI6cmV0dXJuIHI8ZS5sZW5ndGg/KGk9ZS5zbGljZShyLHIrTWF0aC5mbG9vcih0aGlzLnByb3h5LmJsb2NrU2l6ZS80KSksWzQsdGhpcy5wcm94eS50cmFuc2ZlckJsb2NrKDEsMTIsaSldKTpbMyw0XTtjYXNlIDM6cmV0dXJuIG4uc2VudCgpLHIrPU1hdGguZmxvb3IodGhpcy5wcm94eS5ibG9ja1NpemUvNCksWzMsMl07Y2FzZSA0OnJldHVyblsyXX19KSl9KSl9LHR9KCksVD1mdW5jdGlvbih0KXtmdW5jdGlvbiBpKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gZShpLHQpLGkucHJvdG90eXBlLmVuYWJsZURlYnVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMud3JpdGVNZW0zMigzNzU4MTU3Mjk2LC0xNjA0Mzg2ODE1KX0saS5wcm90b3R5cGUucmVhZENvcmVSZWdpc3RlckNvbW1hbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud3JpdGVNZW0zMkNvbW1hbmQoMzc1ODE1NzMwMCx0KS5jb25jYXQodGhpcy5yZWFkTWVtMzJDb21tYW5kKDM3NTgxNTcyOTYpKS5jb25jYXQodGhpcy5yZWFkTWVtMzJDb21tYW5kKDM3NTgxNTczMDQpKX0saS5wcm90b3R5cGUud3JpdGVDb3JlUmVnaXN0ZXJDb21tYW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMud3JpdGVNZW0zMkNvbW1hbmQoMzc1ODE1NzMwNCxlKS5jb25jYXQodGhpcy53cml0ZU1lbTMyQ29tbWFuZCgzNzU4MTU3MzAwLDY1NTM2fHQpKX0saS5wcm90b3R5cGUuZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxyO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5yZWFkTWVtMzIoMzc1ODE1NzI5NildO2Nhc2UgMTpyZXR1cm4gdD1uLnNlbnQoKSxlPTUyNDI4OCZ0PzE6MjYyMTQ0JnQ/MjoxMzEwNzImdD8zOjQsMzM1NTQ0MzImdD9bNCx0aGlzLnJlYWRNZW0zMigzNzU4MTU3Mjk2KV06WzMsM107Y2FzZSAyOnJldHVybiAzMzU1NDQzMiYocj1uLnNlbnQoKSkmJiEoMTY3NzcyMTYmcik/WzIsMF06WzIsZV07Y2FzZSAzOnJldHVyblsyLGVdO2Nhc2UgNDpyZXR1cm5bMl19fSkpfSkpfSxpLnByb3RvdHlwZS5pc0hhbHRlZD1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMucmVhZE1lbTMyKDM3NTgxNTcyOTYpXTtjYXNlIDE6cmV0dXJuWzIsISEoMTMxMDcyJnQuc2VudCgpKV19fSkpfSkpfSxpLnByb3RvdHlwZS5oYWx0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PSEwKSx2b2lkIDA9PT1lJiYoZT0wKSxyKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcj10aGlzO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5pc0hhbHRlZCgpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpP1syXTpbNCx0aGlzLndyaXRlTWVtMzIoMzc1ODE1NzI5NiwtMTYwNDM4NjgxMyldO2Nhc2UgMjpyZXR1cm4gbi5zZW50KCksdD9bMix0aGlzLndhaXREZWxheSgoZnVuY3Rpb24oKXtyZXR1cm4gci5pc0hhbHRlZCgpfSksZSldOlsyXX19KSl9KSl9LGkucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMCksdm9pZCAwPT09ZSYmKGU9MCkscih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGk9dGhpcztyZXR1cm4gbih0aGlzLChmdW5jdGlvbihzKXtzd2l0Y2gocy5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaXNIYWx0ZWQoKV07Y2FzZSAxOnJldHVybiBzLnNlbnQoKT9bNCx0aGlzLndyaXRlTWVtMzIoMzc1ODE1NzEwNCw3KV06WzJdO2Nhc2UgMjpyZXR1cm4gcy5zZW50KCksWzQsdGhpcy5lbmFibGVEZWJ1ZygpXTtjYXNlIDM6cmV0dXJuIHMuc2VudCgpLHQ/WzIsdGhpcy53YWl0RGVsYXkoKGZ1bmN0aW9uKCl7cmV0dXJuIHIoaSx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5pc0hhbHRlZCgpXTtjYXNlIDE6cmV0dXJuWzIsIXQuc2VudCgpXX19KSl9KSl9KSxlKV06WzJdfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZENvcmVSZWdpc3Rlcj1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnRyYW5zZmVyU2VxdWVuY2UoW3RoaXMud3JpdGVNZW0zMkNvbW1hbmQoMzc1ODE1NzMwMCx0KSx0aGlzLnJlYWRNZW0zMkNvbW1hbmQoMzc1ODE1NzI5NildKV07Y2FzZSAxOmlmKGU9ci5zZW50KCksISg2NTUzNiZlWzBdKSl0aHJvdyBuZXcgRXJyb3IoXCJSZWdpc3RlciBub3QgcmVhZHlcIik7cmV0dXJuWzIsdGhpcy5yZWFkTWVtMzIoMzc1ODE1NzMwNCldfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZENvcmVSZWdpc3RlcnM9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLHIsaSxzLG87cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDplPVtdLHI9MCxpPXQsbi5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gcjxpLmxlbmd0aD8ocz1pW3JdLFs0LHRoaXMucmVhZENvcmVSZWdpc3RlcihzKV0pOlszLDRdO2Nhc2UgMjpvPW4uc2VudCgpLGUucHVzaChvKSxuLmxhYmVsPTM7Y2FzZSAzOnJldHVybiByKyssWzMsMV07Y2FzZSA0OnJldHVyblsyLGVdfX0pKX0pKX0saS5wcm90b3R5cGUud3JpdGVDb3JlUmVnaXN0ZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHI7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnRyYW5zZmVyU2VxdWVuY2UoW3RoaXMud3JpdGVNZW0zMkNvbW1hbmQoMzc1ODE1NzMwNCxlKSx0aGlzLndyaXRlTWVtMzJDb21tYW5kKDM3NTgxNTczMDAsNjU1MzZ8dCksdGhpcy5yZWFkTWVtMzJDb21tYW5kKDM3NTgxNTcyOTYpXSldO2Nhc2UgMTppZihyPW4uc2VudCgpLCEoNjU1MzYmclswXSkpdGhyb3cgbmV3IEVycm9yKFwiUmVnaXN0ZXIgbm90IHJlYWR5XCIpO3JldHVyblsyXX19KSl9KSl9LGkucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24odCxlLGkscyxvKXt2b2lkIDA9PT1vJiYobz10KzEpO2Zvcih2YXIgYz1bXSx1PTU7dTxhcmd1bWVudHMubGVuZ3RoO3UrKyljW3UtNV09YXJndW1lbnRzW3VdO3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcix1LGEsaD10aGlzO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6Zm9yKDQ4NjgyIT09ZVtlLmxlbmd0aC0xXSYmKChyPW5ldyBVaW50MzJBcnJheShlLmxlbmd0aCsxKSkuc2V0KGUpLHIuc2V0KFs0ODY4Ml0sZS5sZW5ndGgtMSksZT1yKSx1PVt0aGlzLndyaXRlQ29yZVJlZ2lzdGVyQ29tbWFuZCgxMyxpKSx0aGlzLndyaXRlQ29yZVJlZ2lzdGVyQ29tbWFuZCgxNSxzKSx0aGlzLndyaXRlQ29yZVJlZ2lzdGVyQ29tbWFuZCgxNCxvKV0sYT0wO2E8TWF0aC5taW4oYy5sZW5ndGgsMTIpO2ErKyl1LnB1c2godGhpcy53cml0ZUNvcmVSZWdpc3RlckNvbW1hbmQoYSxjW2FdKSk7cmV0dXJuIHUucHVzaCh0aGlzLndyaXRlQ29yZVJlZ2lzdGVyQ29tbWFuZCgxNiwxNjc3NzIxNikpLFs0LHRoaXMuaGFsdCgpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpLFs0LHRoaXMudHJhbnNmZXJTZXF1ZW5jZSh1KV07Y2FzZSAyOnJldHVybiBuLnNlbnQoKSxbNCx0aGlzLndyaXRlQmxvY2sodCxlKV07Y2FzZSAzOnJldHVybiBuLnNlbnQoKSxbNCx0aGlzLnJlc3VtZSghMSldO2Nhc2UgNDpyZXR1cm4gbi5zZW50KCksWzQsdGhpcy53YWl0RGVsYXkoKGZ1bmN0aW9uKCl7cmV0dXJuIGguaXNIYWx0ZWQoKX0pLDFlNCldO2Nhc2UgNTpyZXR1cm4gbi5zZW50KCksWzJdfX0pKX0pKX0saS5wcm90b3R5cGUuc29mdFJlc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy53cml0ZU1lbTMyKDM3NTgxNTczMDgsMCldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzIsdGhpcy53cml0ZU1lbTMyKDM3NTgxNTcwNjgsMTAwMjcwMDg0KV19fSkpfSkpfSxpLnByb3RvdHlwZS5zZXRUYXJnZXRSZXNldFN0YXRlPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMCkscih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLndyaXRlTWVtMzIoMzc1ODE1NzMwOCwxKV07Y2FzZSAxOnJldHVybiByLnNlbnQoKSwhMCE9PXQ/WzMsM106WzQsdGhpcy5yZXNldCgpXTtjYXNlIDI6cmV0dXJuIHIuc2VudCgpLFszLDZdO2Nhc2UgMzpyZXR1cm5bNCx0aGlzLnJlYWRNZW0zMigzNzU4MTU3MDY4KV07Y2FzZSA0OnJldHVybiBlPXIuc2VudCgpLFs0LHRoaXMud3JpdGVNZW0zMigzNzU4MTU3MDY4LDEwMDI3MDA4NHxlKV07Y2FzZSA1OnIuc2VudCgpLHIubGFiZWw9NjtjYXNlIDY6cmV0dXJuWzQsdGhpcy53cml0ZU1lbTMyKDM3NTgxNTczMDgsMCldO2Nhc2UgNzpyZXR1cm4gci5zZW50KCksWzJdfX0pKX0pKX0saX0oUCk7IWZ1bmN0aW9uKHQpe3RbdC5FTkFCTEU9MV09XCJFTkFCTEVcIix0W3QuS0VZPTJdPVwiS0VZXCJ9KHd8fCh3PXt9KSk7dmFyIEw9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuZGV2aWNlPXQsdGhpcy5vcz1cImJyb3dzZXJcIix0aGlzLnBhY2tldFNpemU9NjR9cmV0dXJuIHQucHJvdG90eXBlLm9wZW49ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzJdfSkpfSkpfSx0LnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLChmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kZXZpY2UuY2xvc2UoKSxbMl19KSl9KSl9LHQucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxyPXRoaXM7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCxlKXtyLmRldmljZS5yZWFkKChmdW5jdGlvbihyLG4pe2lmKHIpcmV0dXJuIGUobmV3IEVycm9yKHIpKTt0KG4pfSkpfSkpXTtjYXNlIDE6cmV0dXJuIHQ9bi5zZW50KCksZT1uZXcgVWludDhBcnJheSh0KS5idWZmZXIsWzIsbmV3IERhdGFWaWV3KGUpXX19KSl9KSl9LHQucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZSxyO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe2ZvcihlPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDAhPT10LmJ1ZmZlcn0odCk/dC5idWZmZXI6dCxyPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG5ldyBVaW50OEFycmF5KGUpKTtyLmxlbmd0aDx0aGlzLnBhY2tldFNpemU7KXIucHVzaCgwKTtpZihcIndpbjMyXCI9PT10aGlzLm9zJiZyLnVuc2hpZnQoMCksdGhpcy5kZXZpY2Uud3JpdGUocikhPT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgYnl0ZWNvdW50IHdyaXR0ZW5cIik7cmV0dXJuWzJdfSkpfSkpfSx0fSgpLF89ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxyLG4pe3ZvaWQgMD09PWUmJihlPTI1NSksdm9pZCAwPT09ciYmKHI9MSksdm9pZCAwPT09biYmKG49ITEpLHRoaXMuZGV2aWNlPXQsdGhpcy5pbnRlcmZhY2VDbGFzcz1lLHRoaXMuY29uZmlndXJhdGlvbj1yLHRoaXMuYWx3YXlzQ29udHJvbFRyYW5zZmVyPW4sdGhpcy5wYWNrZXRTaXplPTY0fXJldHVybiB0LnByb3RvdHlwZS5idWZmZXJUb0RhdGFWaWV3PWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBVaW50OEFycmF5KHQpLmJ1ZmZlcjtyZXR1cm4gbmV3IERhdGFWaWV3KGUpfSx0LnByb3RvdHlwZS5pc1ZpZXc9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXQuYnVmZmVyfSx0LnByb3RvdHlwZS5idWZmZXJTb3VyY2VUb0J1ZmZlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmlzVmlldyh0KT90LmJ1ZmZlcjp0O3JldHVybiBCdWZmZXIuZnJvbShlKX0sdC5wcm90b3R5cGUuZXh0ZW5kQnVmZmVyPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5pc1ZpZXcodCk/dC5idWZmZXI6dCxuPU1hdGgubWluKHIuYnl0ZUxlbmd0aCxlKSxpPW5ldyBVaW50OEFycmF5KG4pO3JldHVybiBpLnNldChuZXcgVWludDhBcnJheShyKSksaX0sdC5wcm90b3R5cGUub3Blbj1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgdCxlLHIsaSxzLG8sYz10aGlzO3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuZGV2aWNlLm9wZW4oKSxbNCxuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCxlKXtjLmRldmljZS5zZXRDb25maWd1cmF0aW9uKGMuY29uZmlndXJhdGlvbiwoZnVuY3Rpb24ocil7cj9lKG5ldyBFcnJvcihyKSk6dCgpfSkpfSkpXTtjYXNlIDE6aWYobi5zZW50KCksISh0PXRoaXMuZGV2aWNlLmludGVyZmFjZXMuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5kZXNjcmlwdG9yLmJJbnRlcmZhY2VDbGFzcz09PWMuaW50ZXJmYWNlQ2xhc3N9KSkpLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJObyB2YWxpZCBpbnRlcmZhY2VzIGZvdW5kLlwiKTtpZigoZT10LmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVuZHBvaW50cy5sZW5ndGg+MH0pKSl8fChlPXRbMF0pLHRoaXMuaW50ZXJmYWNlTnVtYmVyPWUuaW50ZXJmYWNlTnVtYmVyLCF0aGlzLmFsd2F5c0NvbnRyb2xUcmFuc2Zlcil7Zm9yKHI9ZS5lbmRwb2ludHMsdGhpcy5lbmRwb2ludEluPXZvaWQgMCx0aGlzLmVuZHBvaW50T3V0PXZvaWQgMCxpPTAscz1yO2k8cy5sZW5ndGg7aSsrKVwiaW5cIiE9PShvPXNbaV0pLmRpcmVjdGlvbnx8dGhpcy5lbmRwb2ludEluP1wib3V0XCIhPT1vLmRpcmVjdGlvbnx8dGhpcy5lbmRwb2ludE91dHx8KHRoaXMuZW5kcG9pbnRPdXQ9byk6dGhpcy5lbmRwb2ludEluPW87aWYodGhpcy5lbmRwb2ludElufHx0aGlzLmVuZHBvaW50T3V0KXRyeXtlLmNsYWltKCl9Y2F0Y2godCl7dGhpcy5lbmRwb2ludEluPXZvaWQgMCx0aGlzLmVuZHBvaW50T3V0PXZvaWQgMH19cmV0dXJuWzJdfX0pKX0pKX0sdC5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGV2aWNlLmNsb3NlKCksWzJdfSkpfSkpfSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0LGU9dGhpcztyZXR1cm4gbih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOmlmKHZvaWQgMD09PXRoaXMuaW50ZXJmYWNlTnVtYmVyKXRocm93IG5ldyBFcnJvcihcIk5vIGRldmljZSBvcGVuZWRcIik7cmV0dXJuWzQsbmV3IFByb21pc2UoKGZ1bmN0aW9uKHQscil7ZS5lbmRwb2ludEluP2UuZW5kcG9pbnRJbi50cmFuc2ZlcihlLnBhY2tldFNpemUsKGZ1bmN0aW9uKGUsbil7ZT9yKGUpOnQobil9KSk6ZS5kZXZpY2UuY29udHJvbFRyYW5zZmVyKDE2MSwxLDI1NixlLmludGVyZmFjZU51bWJlcixlLnBhY2tldFNpemUsKGZ1bmN0aW9uKGUsbil7ZT9yKGUpOm4/dChuKTpyKG5ldyBFcnJvcihcIk5vIGJ1ZmZlciByZWFkXCIpKX0pKX0pKV07Y2FzZSAxOnJldHVybiB0PXIuc2VudCgpLFsyLHRoaXMuYnVmZmVyVG9EYXRhVmlldyh0KV19fSkpfSkpfSx0LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUscixpPXRoaXM7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDppZih2b2lkIDA9PT10aGlzLmludGVyZmFjZU51bWJlcil0aHJvdyBuZXcgRXJyb3IoXCJObyBkZXZpY2Ugb3BlbmVkXCIpO3JldHVybiBlPXRoaXMuZXh0ZW5kQnVmZmVyKHQsdGhpcy5wYWNrZXRTaXplKSxyPXRoaXMuYnVmZmVyU291cmNlVG9CdWZmZXIoZSksWzQsbmV3IFByb21pc2UoKGZ1bmN0aW9uKHQsZSl7aS5lbmRwb2ludE91dD9pLmVuZHBvaW50T3V0LnRyYW5zZmVyKHIsKGZ1bmN0aW9uKHIpe2lmKHIpcmV0dXJuIGUocik7dCgpfSkpOmkuZGV2aWNlLmNvbnRyb2xUcmFuc2ZlcigzMyw5LDUxMixpLmludGVyZmFjZU51bWJlcixyLChmdW5jdGlvbihyKXtpZihyKXJldHVybiBlKHIpO3QoKX0pKX0pKV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSxbMl19fSkpfSkpfSx0fSgpLHg9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxyLG4pe3ZvaWQgMD09PWUmJihlPTI1NSksdm9pZCAwPT09ciYmKHI9MSksdm9pZCAwPT09biYmKG49ITEpLHRoaXMuZGV2aWNlPXQsdGhpcy5pbnRlcmZhY2VDbGFzcz1lLHRoaXMuY29uZmlndXJhdGlvbj1yLHRoaXMuYWx3YXlzQ29udHJvbFRyYW5zZmVyPW4sdGhpcy5wYWNrZXRTaXplPTY0fXJldHVybiB0LnByb3RvdHlwZS5leHRlbmRCdWZmZXI9ZnVuY3Rpb24odCxlKXt2YXIgcj12b2lkIDAhPT10LmJ1ZmZlcj90LmJ1ZmZlcjp0LG49TWF0aC5taW4oci5ieXRlTGVuZ3RoLGUpLGk9bmV3IFVpbnQ4QXJyYXkobik7cmV0dXJuIGkuc2V0KG5ldyBVaW50OEFycmF5KHIpKSxpfSx0LnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0LGUscixpLHMsbyxjPXRoaXM7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmRldmljZS5vcGVuKCldO2Nhc2UgMTpyZXR1cm4gbi5zZW50KCksWzQsdGhpcy5kZXZpY2Uuc2VsZWN0Q29uZmlndXJhdGlvbih0aGlzLmNvbmZpZ3VyYXRpb24pXTtjYXNlIDI6aWYobi5zZW50KCksISh0PXRoaXMuZGV2aWNlLmNvbmZpZ3VyYXRpb24uaW50ZXJmYWNlcy5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFsdGVybmF0ZXNbMF0uaW50ZXJmYWNlQ2xhc3M9PT1jLmludGVyZmFjZUNsYXNzfSkpKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTm8gdmFsaWQgaW50ZXJmYWNlcyBmb3VuZC5cIik7aWYoKGU9dC5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5hbHRlcm5hdGVzWzBdLmVuZHBvaW50cy5sZW5ndGg+MH0pKSl8fChlPXRbMF0pLHRoaXMuaW50ZXJmYWNlTnVtYmVyPWUuaW50ZXJmYWNlTnVtYmVyLCF0aGlzLmFsd2F5c0NvbnRyb2xUcmFuc2Zlcilmb3Iocj1lLmFsdGVybmF0ZXNbMF0uZW5kcG9pbnRzLHRoaXMuZW5kcG9pbnRJbj12b2lkIDAsdGhpcy5lbmRwb2ludE91dD12b2lkIDAsaT0wLHM9cjtpPHMubGVuZ3RoO2krKylcImluXCIhPT0obz1zW2ldKS5kaXJlY3Rpb258fHRoaXMuZW5kcG9pbnRJbj9cIm91dFwiIT09by5kaXJlY3Rpb258fHRoaXMuZW5kcG9pbnRPdXR8fCh0aGlzLmVuZHBvaW50T3V0PW8pOnRoaXMuZW5kcG9pbnRJbj1vO3JldHVyblsyLHRoaXMuZGV2aWNlLmNsYWltSW50ZXJmYWNlKHRoaXMuaW50ZXJmYWNlTnVtYmVyKV19fSkpfSkpfSx0LnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRldmljZS5jbG9zZSgpfSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiBuKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6aWYodm9pZCAwPT09dGhpcy5pbnRlcmZhY2VOdW1iZXIpdGhyb3cgbmV3IEVycm9yKFwiTm8gZGV2aWNlIG9wZW5lZFwiKTtyZXR1cm4gdGhpcy5lbmRwb2ludEluP1s0LHRoaXMuZGV2aWNlLnRyYW5zZmVySW4odGhpcy5lbmRwb2ludEluLmVuZHBvaW50TnVtYmVyLHRoaXMucGFja2V0U2l6ZSldOlszLDJdO2Nhc2UgMTpyZXR1cm4gdD1lLnNlbnQoKSxbMyw0XTtjYXNlIDI6cmV0dXJuWzQsdGhpcy5kZXZpY2UuY29udHJvbFRyYW5zZmVySW4oe3JlcXVlc3RUeXBlOlwiY2xhc3NcIixyZWNpcGllbnQ6XCJpbnRlcmZhY2VcIixyZXF1ZXN0OjEsdmFsdWU6MjU2LGluZGV4OnRoaXMuaW50ZXJmYWNlTnVtYmVyfSx0aGlzLnBhY2tldFNpemUpXTtjYXNlIDM6dD1lLnNlbnQoKSxlLmxhYmVsPTQ7Y2FzZSA0OnJldHVyblsyLHQuZGF0YV19fSkpfSkpfSx0LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIG4odGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDppZih2b2lkIDA9PT10aGlzLmludGVyZmFjZU51bWJlcil0aHJvdyBuZXcgRXJyb3IoXCJObyBkZXZpY2Ugb3BlbmVkXCIpO3JldHVybiBlPXRoaXMuZXh0ZW5kQnVmZmVyKHQsdGhpcy5wYWNrZXRTaXplKSx0aGlzLmVuZHBvaW50T3V0P1s0LHRoaXMuZGV2aWNlLnRyYW5zZmVyT3V0KHRoaXMuZW5kcG9pbnRPdXQuZW5kcG9pbnROdW1iZXIsZSldOlszLDJdO2Nhc2UgMTpyZXR1cm4gci5zZW50KCksWzMsNF07Y2FzZSAyOnJldHVybls0LHRoaXMuZGV2aWNlLmNvbnRyb2xUcmFuc2Zlck91dCh7cmVxdWVzdFR5cGU6XCJjbGFzc1wiLHJlY2lwaWVudDpcImludGVyZmFjZVwiLHJlcXVlc3Q6OSx2YWx1ZTo1MTIsaW5kZXg6dGhpcy5pbnRlcmZhY2VOdW1iZXJ9LGUpXTtjYXNlIDM6ci5zZW50KCksci5sYWJlbD00O2Nhc2UgNDpyZXR1cm5bMl19fSkpfSkpfSx0fSgpO2V4cG9ydHtQIGFzIEFESSxiIGFzIENtc2lzREFQLFQgYXMgQ29ydGV4TSxFIGFzIERBUExpbmsseSBhcyBERUZBVUxUX0NMT0NLX0ZSRVFVRU5DWSx3IGFzIEZQQkN0cmxNYXNrLEwgYXMgSElELF8gYXMgVVNCLHggYXMgV2ViVVNCfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhcC5lc20uanMubWFwXG4iLCIvKiEgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXG50aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxuTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVEhJUyBDT0RFIElTIFBST1ZJREVEIE9OIEFOICpBUyBJUyogQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuS0lORCwgRUlUSEVSIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIFdJVEhPVVQgTElNSVRBVElPTiBBTlkgSU1QTElFRFxuV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIFRJVExFLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSxcbk1FUkNIQU5UQUJMSVRZIE9SIE5PTi1JTkZSSU5HRU1FTlQuXG5cblNlZSB0aGUgQXBhY2hlIFZlcnNpb24gMi4wIExpY2Vuc2UgZm9yIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cbnZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuKHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09ZVtuXSl9KShlLG4pfTtmdW5jdGlvbiBlKGUsbil7ZnVuY3Rpb24gcigpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooci5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IHIpfWZ1bmN0aW9uIG4odCxlLG4scil7cmV0dXJuIG5ldyhufHwobj1Qcm9taXNlKSkoKGZ1bmN0aW9uKGksYSl7ZnVuY3Rpb24gbyh0KXt0cnl7cyhyLm5leHQodCkpfWNhdGNoKHQpe2EodCl9fWZ1bmN0aW9uIHUodCl7dHJ5e3Moci50aHJvdyh0KSl9Y2F0Y2godCl7YSh0KX19ZnVuY3Rpb24gcyh0KXt2YXIgZTt0LmRvbmU/aSh0LnZhbHVlKTooZT10LnZhbHVlLGUgaW5zdGFuY2VvZiBuP2U6bmV3IG4oKGZ1bmN0aW9uKHQpe3QoZSl9KSkpLnRoZW4obyx1KX1zKChyPXIuYXBwbHkodCxlfHxbXSkpLm5leHQoKSl9KSl9ZnVuY3Rpb24gcih0LGUpe3ZhciBuLHIsaSxhLG89e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmaVswXSl0aHJvdyBpWzFdO3JldHVybiBpWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIGE9e25leHQ6dSgwKSx0aHJvdzp1KDEpLHJldHVybjp1KDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihhW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGE7ZnVuY3Rpb24gdShhKXtyZXR1cm4gZnVuY3Rpb24odSl7cmV0dXJuIGZ1bmN0aW9uKGEpe2lmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtvOyl0cnl7aWYobj0xLHImJihpPTImYVswXT9yLnJldHVybjphWzBdP3IudGhyb3d8fCgoaT1yLnJldHVybikmJmkuY2FsbChyKSwwKTpyLm5leHQpJiYhKGk9aS5jYWxsKHIsYVsxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKHI9MCxpJiYoYT1bMiZhWzBdLGkudmFsdWVdKSxhWzBdKXtjYXNlIDA6Y2FzZSAxOmk9YTticmVhaztjYXNlIDQ6cmV0dXJuIG8ubGFiZWwrKyx7dmFsdWU6YVsxXSxkb25lOiExfTtjYXNlIDU6by5sYWJlbCsrLHI9YVsxXSxhPVswXTtjb250aW51ZTtjYXNlIDc6YT1vLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKGk9by50cnlzLChpPWkubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pfHw2IT09YVswXSYmMiE9PWFbMF0pKXtvPTA7Y29udGludWV9aWYoMz09PWFbMF0mJighaXx8YVsxXT5pWzBdJiZhWzFdPGlbM10pKXtvLmxhYmVsPWFbMV07YnJlYWt9aWYoNj09PWFbMF0mJm8ubGFiZWw8aVsxXSl7by5sYWJlbD1pWzFdLGk9YTticmVha31pZihpJiZvLmxhYmVsPGlbMl0pe28ubGFiZWw9aVsyXSxvLm9wcy5wdXNoKGEpO2JyZWFrfWlbMl0mJm8ub3BzLnBvcCgpLG8udHJ5cy5wb3AoKTtjb250aW51ZX1hPWUuY2FsbCh0LG8pfWNhdGNoKHQpe2E9WzYsdF0scj0wfWZpbmFsbHl7bj1pPTB9aWYoNSZhWzBdKXRocm93IGFbMV07cmV0dXJue3ZhbHVlOmFbMF0/YVsxXTp2b2lkIDAsZG9uZTohMH19KFthLHVdKX19fXZhciBpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3ZvaWQgMD09PXQmJih0PTEpLHRoaXMuY29uY3VycmVudD10LHRoaXMucXVldWU9W10sdGhpcy5ydW5uaW5nPTB9cmV0dXJuIHQucHJvdG90eXBlLnB1bXA9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxuO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6aWYodGhpcy5ydW5uaW5nPj10aGlzLmNvbmN1cnJlbnQpcmV0dXJuWzJdO2lmKCEodD10aGlzLnF1ZXVlLnNoaWZ0KCkpKXJldHVyblsyXTt0aGlzLnJ1bm5pbmcrKyxyLmxhYmVsPTE7Y2FzZSAxOnJldHVybiByLnRyeXMucHVzaChbMSwzLCw0XSksWzQsdC5mbigpXTtjYXNlIDI6cmV0dXJuIGU9ci5zZW50KCksdC5yZXNvbHZlKGUpLFszLDRdO2Nhc2UgMzpyZXR1cm4gbj1yLnNlbnQoKSx0LnJlamVjdChuKSxbMyw0XTtjYXNlIDQ6cmV0dXJuIHRoaXMucnVubmluZy0tLFsyLHRoaXMucHVtcCgpXX19KSl9KSl9LHQucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24obixyKXtyZXR1cm4gZS5xdWV1ZS5wdXNoKHtmbjp0LHJlc29sdmU6bixyZWplY3Q6cn0pLGUucHVtcCgpfSkpfSx0fSgpLG89ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy5zZXJ2aWNlPXQsdGhpcy5lbWl0dGVyPWV9cmV0dXJuIHQucHJvdG90eXBlLmdldENoYXJhY3RlcmlzdGljPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLmNoYXJhY3RlcmlzdGljcz9bMywyXTooZT10aGlzLFs0LHRoaXMuc2VydmljZS5nZXRDaGFyYWN0ZXJpc3RpY3MoKV0pO2Nhc2UgMTplLmNoYXJhY3RlcmlzdGljcz1uLnNlbnQoKSxuLmxhYmVsPTI7Y2FzZSAyOnJldHVyblsyLHRoaXMuY2hhcmFjdGVyaXN0aWNzLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnV1aWQ9PT10fSkpXX19KSl9KSl9LHQucHJvdG90eXBlLmdldENoYXJhY3RlcmlzdGljVmFsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLGE9dGhpcztyZXR1cm4gcih0aGlzLChmdW5jdGlvbihvKXtzd2l0Y2goby5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuZ2V0Q2hhcmFjdGVyaXN0aWMoZSldO2Nhc2UgMTppZighKGk9by5zZW50KCkpKXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBsb2NhdGUgY2hhcmFjdGVyaXN0aWNcIik7cmV0dXJuWzQsdC5xdWV1ZS5hZGQoKGZ1bmN0aW9uKCl7cmV0dXJuIG4oYSx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHQpe3JldHVyblsyLGkucmVhZFZhbHVlKCldfSkpfSkpfSkpXTtjYXNlIDI6cmV0dXJuWzIsby5zZW50KCldfX0pKX0pKX0sdC5wcm90b3R5cGUuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZT1mdW5jdGlvbihlLGkpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgYSxvPXRoaXM7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odSl7c3dpdGNoKHUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmdldENoYXJhY3RlcmlzdGljKGUpXTtjYXNlIDE6aWYoIShhPXUuc2VudCgpKSl0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gbG9jYXRlIGNoYXJhY3RlcmlzdGljXCIpO3JldHVybls0LHQucXVldWUuYWRkKChmdW5jdGlvbigpe3JldHVybiBuKG8sdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMixhLndyaXRlVmFsdWUoaSldfSkpfSkpfSkpXTtjYXNlIDI6cmV0dXJuIHUuc2VudCgpLFsyXX19KSl9KSl9LHQucHJvdG90eXBlLmhhbmRsZUxpc3RlbmVyPWZ1bmN0aW9uKGUsaSxhKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIG8sdT10aGlzO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHMpe3N3aXRjaChzLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5nZXRDaGFyYWN0ZXJpc3RpYyhpKV07Y2FzZSAxOnJldHVybihvPXMuc2VudCgpKT9bNCx0LnF1ZXVlLmFkZCgoZnVuY3Rpb24oKXtyZXR1cm4gbih1LHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzIsby5zdGFydE5vdGlmaWNhdGlvbnMoKV19KSl9KSl9KSldOlsyXTtjYXNlIDI6cmV0dXJuIHMuc2VudCgpLHRoaXMuZW1pdHRlci5vbihcIm5ld0xpc3RlbmVyXCIsKGZ1bmN0aW9uKGkpe2lmKCEoaSE9PWV8fHUuZW1pdHRlci5saXN0ZW5lckNvdW50KGUpPjApKXJldHVybiB0LnF1ZXVlLmFkZCgoZnVuY3Rpb24oKXtyZXR1cm4gbih1LHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzIsby5hZGRFdmVudExpc3RlbmVyKFwiY2hhcmFjdGVyaXN0aWN2YWx1ZWNoYW5nZWRcIixhKV19KSl9KSl9KSl9KSksdGhpcy5lbWl0dGVyLm9uKFwicmVtb3ZlTGlzdGVuZXJcIiwoZnVuY3Rpb24oaSl7aWYoIShpIT09ZXx8dS5lbWl0dGVyLmxpc3RlbmVyQ291bnQoZSk+MCkpcmV0dXJuIHQucXVldWUuYWRkKChmdW5jdGlvbigpe3JldHVybiBuKHUsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMixvLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFyYWN0ZXJpc3RpY3ZhbHVlY2hhbmdlZFwiLGEpXX0pKX0pKX0pKX0pKSxbMl19fSkpfSkpfSx0LnF1ZXVlPW5ldyBhLHR9KCk7IWZ1bmN0aW9uKHQpe3QubW9kZWxOdW1iZXI9XCIwMDAwMmEyNC0wMDAwLTEwMDAtODAwMC0wMDgwNWY5YjM0ZmJcIix0LnNlcmlhbE51bWJlcj1cIjAwMDAyYTI1LTAwMDAtMTAwMC04MDAwLTAwODA1ZjliMzRmYlwiLHQuZmlybXdhcmVSZXZpc2lvbj1cIjAwMDAyYTI2LTAwMDAtMTAwMC04MDAwLTAwODA1ZjliMzRmYlwiLHQuaGFyZHdhcmVSZXZpc2lvbj1cIjAwMDAyYTI3LTAwMDAtMTAwMC04MDAwLTAwODA1ZjliMzRmYlwiLHQubWFudWZhY3R1cmVyPVwiMDAwMDJhMjktMDAwMC0xMDAwLTgwMDAtMDA4MDVmOWIzNGZiXCJ9KGl8fChpPXt9KSk7dmFyIHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuaGVscGVyPW5ldyBvKHQpfXJldHVybiB0LmNyZWF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7cmV0dXJuWzIsbmV3IHQoZSldfSkpfSkpfSx0LnByb3RvdHlwZS5yZWFkRGV2aWNlSW5mb3JtYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxuLGEsbyx1O3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHQ9e30sWzQsdGhpcy5yZWFkU3RyaW5nQ2hhcmFjdGVyaXN0aWMoaS5tb2RlbE51bWJlcildO2Nhc2UgMTpyZXR1cm4oZT1yLnNlbnQoKSkmJih0Lm1vZGVsTnVtYmVyPWUpLFs0LHRoaXMucmVhZFN0cmluZ0NoYXJhY3RlcmlzdGljKGkuc2VyaWFsTnVtYmVyKV07Y2FzZSAyOnJldHVybihuPXIuc2VudCgpKSYmKHQuc2VyaWFsTnVtYmVyPW4pLFs0LHRoaXMucmVhZFN0cmluZ0NoYXJhY3RlcmlzdGljKGkuZmlybXdhcmVSZXZpc2lvbildO2Nhc2UgMzpyZXR1cm4oYT1yLnNlbnQoKSkmJih0LmZpcm13YXJlUmV2aXNpb249YSksWzQsdGhpcy5yZWFkU3RyaW5nQ2hhcmFjdGVyaXN0aWMoaS5oYXJkd2FyZVJldmlzaW9uKV07Y2FzZSA0OnJldHVybihvPXIuc2VudCgpKSYmKHQuaGFyZHdhcmVSZXZpc2lvbj1vKSxbNCx0aGlzLnJlYWRTdHJpbmdDaGFyYWN0ZXJpc3RpYyhpLm1hbnVmYWN0dXJlcildO2Nhc2UgNTpyZXR1cm4odT1yLnNlbnQoKSkmJih0Lm1hbnVmYWN0dXJlcj11KSxbMix0XX19KSl9KSl9LHQucHJvdG90eXBlLnJlYWRTdHJpbmdDaGFyYWN0ZXJpc3RpYz1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiByLnRyeXMucHVzaChbMCwyLCwzXSksWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZSh0KV07Y2FzZSAxOnJldHVybiBlPXIuc2VudCgpLG49ZS5idWZmZXIuc2xpY2UoZS5ieXRlT2Zmc2V0LGUuYnl0ZU9mZnNldCtlLmJ5dGVMZW5ndGgpLFsyLFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxBcnJheS5mcm9tKG5ldyBVaW50OEFycmF5KG4pKSldO2Nhc2UgMjpyZXR1cm4gci5zZW50KCksWzIsdm9pZCAwXTtjYXNlIDM6cmV0dXJuWzJdfX0pKX0pKX0sdC51dWlkPVwiMDAwMDE4MGEtMDAwMC0xMDAwLTgwMDAtMDA4MDVmOWIzNGZiXCIsdH0oKTtmdW5jdGlvbiBzKCl7fWZ1bmN0aW9uIGMoKXtjLmluaXQuY2FsbCh0aGlzKX1mdW5jdGlvbiBoKHQpe3JldHVybiB2b2lkIDA9PT10Ll9tYXhMaXN0ZW5lcnM/Yy5kZWZhdWx0TWF4TGlzdGVuZXJzOnQuX21heExpc3RlbmVyc31mdW5jdGlvbiBmKHQsZSxuKXtpZihlKXQuY2FsbChuKTtlbHNlIGZvcih2YXIgcj10Lmxlbmd0aCxpPXkodCxyKSxhPTA7YTxyOysrYSlpW2FdLmNhbGwobil9ZnVuY3Rpb24gZCh0LGUsbixyKXtpZihlKXQuY2FsbChuLHIpO2Vsc2UgZm9yKHZhciBpPXQubGVuZ3RoLGE9eSh0LGkpLG89MDtvPGk7KytvKWFbb10uY2FsbChuLHIpfWZ1bmN0aW9uIGwodCxlLG4scixpKXtpZihlKXQuY2FsbChuLHIsaSk7ZWxzZSBmb3IodmFyIGE9dC5sZW5ndGgsbz15KHQsYSksdT0wO3U8YTsrK3Upb1t1XS5jYWxsKG4scixpKX1mdW5jdGlvbiB2KHQsZSxuLHIsaSxhKXtpZihlKXQuY2FsbChuLHIsaSxhKTtlbHNlIGZvcih2YXIgbz10Lmxlbmd0aCx1PXkodCxvKSxzPTA7czxvOysrcyl1W3NdLmNhbGwobixyLGksYSl9ZnVuY3Rpb24gcCh0LGUsbixyKXtpZihlKXQuYXBwbHkobixyKTtlbHNlIGZvcih2YXIgaT10Lmxlbmd0aCxhPXkodCxpKSxvPTA7bzxpOysrbylhW29dLmFwcGx5KG4scil9ZnVuY3Rpb24gZyh0LGUsbixyKXt2YXIgaSxhLG8sdTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtpZigoYT10Ll9ldmVudHMpPyhhLm5ld0xpc3RlbmVyJiYodC5lbWl0KFwibmV3TGlzdGVuZXJcIixlLG4ubGlzdGVuZXI/bi5saXN0ZW5lcjpuKSxhPXQuX2V2ZW50cyksbz1hW2VdKTooYT10Ll9ldmVudHM9bmV3IHMsdC5fZXZlbnRzQ291bnQ9MCksbyl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vPWFbZV09cj9bbixvXTpbbyxuXTpyP28udW5zaGlmdChuKTpvLnB1c2gobiksIW8ud2FybmVkJiYoaT1oKHQpKSYmaT4wJiZvLmxlbmd0aD5pKXtvLndhcm5lZD0hMDt2YXIgYz1uZXcgRXJyb3IoXCJQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuIFwiK28ubGVuZ3RoK1wiIFwiK2UrXCIgbGlzdGVuZXJzIGFkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdFwiKTtjLm5hbWU9XCJNYXhMaXN0ZW5lcnNFeGNlZWRlZFdhcm5pbmdcIixjLmVtaXR0ZXI9dCxjLnR5cGU9ZSxjLmNvdW50PW8ubGVuZ3RoLHU9YyxcImZ1bmN0aW9uXCI9PXR5cGVvZiBjb25zb2xlLndhcm4/Y29uc29sZS53YXJuKHUpOmNvbnNvbGUubG9nKHUpfX1lbHNlIG89YVtlXT1uLCsrdC5fZXZlbnRzQ291bnQ7cmV0dXJuIHR9ZnVuY3Rpb24gbSh0LGUsbil7dmFyIHI9ITE7ZnVuY3Rpb24gaSgpe3QucmVtb3ZlTGlzdGVuZXIoZSxpKSxyfHwocj0hMCxuLmFwcGx5KHQsYXJndW1lbnRzKSl9cmV0dXJuIGkubGlzdGVuZXI9bixpfWZ1bmN0aW9uIHcodCl7dmFyIGU9dGhpcy5fZXZlbnRzO2lmKGUpe3ZhciBuPWVbdF07aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilyZXR1cm4gMTtpZihuKXJldHVybiBuLmxlbmd0aH1yZXR1cm4gMH1mdW5jdGlvbiB5KHQsZSl7Zm9yKHZhciBuPW5ldyBBcnJheShlKTtlLS07KW5bZV09dFtlXTtyZXR1cm4gbn1zLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG51bGwpLGMuRXZlbnRFbWl0dGVyPWMsYy51c2luZ0RvbWFpbnM9ITEsYy5wcm90b3R5cGUuZG9tYWluPXZvaWQgMCxjLnByb3RvdHlwZS5fZXZlbnRzPXZvaWQgMCxjLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzPXZvaWQgMCxjLmRlZmF1bHRNYXhMaXN0ZW5lcnM9MTAsYy5pbml0PWZ1bmN0aW9uKCl7dGhpcy5kb21haW49bnVsbCxjLnVzaW5nRG9tYWlucyYmKHZvaWQgMCkuYWN0aXZlLHRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzIT09T2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLl9ldmVudHN8fCh0aGlzLl9ldmVudHM9bmV3IHMsdGhpcy5fZXZlbnRzQ291bnQ9MCksdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfSxjLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fHQ8MHx8aXNOYU4odCkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJuXCIgYXJndW1lbnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO3JldHVybiB0aGlzLl9tYXhMaXN0ZW5lcnM9dCx0aGlzfSxjLnByb3RvdHlwZS5nZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtyZXR1cm4gaCh0aGlzKX0sYy5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxhLG8sdSxzPVwiZXJyb3JcIj09PXQ7aWYobz10aGlzLl9ldmVudHMpcz1zJiZudWxsPT1vLmVycm9yO2Vsc2UgaWYoIXMpcmV0dXJuITE7aWYodT10aGlzLmRvbWFpbixzKXtpZihlPWFyZ3VtZW50c1sxXSwhdSl7aWYoZSBpbnN0YW5jZW9mIEVycm9yKXRocm93IGU7dmFyIGM9bmV3IEVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LiAoJytlK1wiKVwiKTt0aHJvdyBjLmNvbnRleHQ9ZSxjfXJldHVybiBlfHwoZT1uZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCBcImVycm9yXCIgZXZlbnQnKSksZS5kb21haW5FbWl0dGVyPXRoaXMsZS5kb21haW49dSxlLmRvbWFpblRocm93bj0hMSx1LmVtaXQoXCJlcnJvclwiLGUpLCExfWlmKCEobj1vW3RdKSlyZXR1cm4hMTt2YXIgaD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuO3N3aXRjaChyPWFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMTpmKG4saCx0aGlzKTticmVhaztjYXNlIDI6ZChuLGgsdGhpcyxhcmd1bWVudHNbMV0pO2JyZWFrO2Nhc2UgMzpsKG4saCx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0pO2JyZWFrO2Nhc2UgNDp2KG4saCx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0sYXJndW1lbnRzWzNdKTticmVhaztkZWZhdWx0OmZvcihpPW5ldyBBcnJheShyLTEpLGE9MTthPHI7YSsrKWlbYS0xXT1hcmd1bWVudHNbYV07cChuLGgsdGhpcyxpKX1yZXR1cm4hMH0sYy5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZyh0aGlzLHQsZSwhMSl9LGMucHJvdG90eXBlLm9uPWMucHJvdG90eXBlLmFkZExpc3RlbmVyLGMucHJvdG90eXBlLnByZXBlbmRMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3JldHVybiBnKHRoaXMsdCxlLCEwKX0sYy5wcm90b3R5cGUub25jZT1mdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO3JldHVybiB0aGlzLm9uKHQsbSh0aGlzLHQsZSkpLHRoaXN9LGMucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtyZXR1cm4gdGhpcy5wcmVwZW5kTGlzdGVuZXIodCxtKHRoaXMsdCxlKSksdGhpc30sYy5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXt2YXIgbixyLGksYSxvO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO2lmKCEocj10aGlzLl9ldmVudHMpKXJldHVybiB0aGlzO2lmKCEobj1yW3RdKSlyZXR1cm4gdGhpcztpZihuPT09ZXx8bi5saXN0ZW5lciYmbi5saXN0ZW5lcj09PWUpMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IHM6KGRlbGV0ZSByW3RdLHIucmVtb3ZlTGlzdGVuZXImJnRoaXMuZW1pdChcInJlbW92ZUxpc3RlbmVyXCIsdCxuLmxpc3RlbmVyfHxlKSk7ZWxzZSBpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXtmb3IoaT0tMSxhPW4ubGVuZ3RoO2EtLSA+MDspaWYoblthXT09PWV8fG5bYV0ubGlzdGVuZXImJm5bYV0ubGlzdGVuZXI9PT1lKXtvPW5bYV0ubGlzdGVuZXIsaT1hO2JyZWFrfWlmKGk8MClyZXR1cm4gdGhpcztpZigxPT09bi5sZW5ndGgpe2lmKG5bMF09dm9pZCAwLDA9PS0tdGhpcy5fZXZlbnRzQ291bnQpcmV0dXJuIHRoaXMuX2V2ZW50cz1uZXcgcyx0aGlzO2RlbGV0ZSByW3RdfWVsc2UhZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ZSxyPW4rMSxpPXQubGVuZ3RoO3I8aTtuKz0xLHIrPTEpdFtuXT10W3JdO3QucG9wKCl9KG4saSk7ci5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIix0LG98fGUpfXJldHVybiB0aGlzfSxjLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUsbjtpZighKG49dGhpcy5fZXZlbnRzKSlyZXR1cm4gdGhpcztpZighbi5yZW1vdmVMaXN0ZW5lcilyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2V2ZW50cz1uZXcgcyx0aGlzLl9ldmVudHNDb3VudD0wKTpuW3RdJiYoMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IHM6ZGVsZXRlIG5bdF0pLHRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpe2Zvcih2YXIgcixpPU9iamVjdC5rZXlzKG4pLGE9MDthPGkubGVuZ3RoOysrYSlcInJlbW92ZUxpc3RlbmVyXCIhPT0ocj1pW2FdKSYmdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMocik7cmV0dXJuIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKFwicmVtb3ZlTGlzdGVuZXJcIiksdGhpcy5fZXZlbnRzPW5ldyBzLHRoaXMuX2V2ZW50c0NvdW50PTAsdGhpc31pZihcImZ1bmN0aW9uXCI9PXR5cGVvZihlPW5bdF0pKXRoaXMucmVtb3ZlTGlzdGVuZXIodCxlKTtlbHNlIGlmKGUpZG97dGhpcy5yZW1vdmVMaXN0ZW5lcih0LGVbZS5sZW5ndGgtMV0pfXdoaWxlKGVbMF0pO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5saXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLl9ldmVudHM7cmV0dXJuIG4mJihlPW5bdF0pP1wiZnVuY3Rpb25cIj09dHlwZW9mIGU/W2UubGlzdGVuZXJ8fGVdOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQXJyYXkodC5sZW5ndGgpLG49MDtuPGUubGVuZ3RoOysrbillW25dPXRbbl0ubGlzdGVuZXJ8fHRbbl07cmV0dXJuIGV9KGUpOltdfSxjLmxpc3RlbmVyQ291bnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lmxpc3RlbmVyQ291bnQ/dC5saXN0ZW5lckNvdW50KGUpOncuY2FsbCh0LGUpfSxjLnByb3RvdHlwZS5saXN0ZW5lckNvdW50PXcsYy5wcm90b3R5cGUuZXZlbnROYW1lcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ldmVudHNDb3VudD4wP1JlZmxlY3Qub3duS2V5cyh0aGlzLl9ldmVudHMpOltdfTt2YXIgYixDLFY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3ZhciBlPW51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gZS5pc0V2ZW50TGlzdGVuZXJPYmplY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXQuaGFuZGxlRXZlbnR9LGV9cmV0dXJuIGUobix0KSxuLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGUsbil7aWYobil7dmFyIHI9dGhpcy5pc0V2ZW50TGlzdGVuZXJPYmplY3Qobik/bi5oYW5kbGVFdmVudDpuO3QucHJvdG90eXBlLmFkZExpc3RlbmVyLmNhbGwodGhpcyxlLHIpfX0sbi5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLG4pe2lmKG4pe3ZhciByPXRoaXMuaXNFdmVudExpc3RlbmVyT2JqZWN0KG4pP24uaGFuZGxlRXZlbnQ6bjt0LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lci5jYWxsKHRoaXMsZSxyKX19LG4ucHJvdG90eXBlLmRpc3BhdGNoRXZlbnQ9ZnVuY3Rpb24oZSxuKXt2YXIgcjtyZXR1cm4gcj1cInN0cmluZ1wiPT10eXBlb2YgZT9uZXcgQ3VzdG9tRXZlbnQoZSx7ZGV0YWlsOm59KTplLHQucHJvdG90eXBlLmVtaXQuY2FsbCh0aGlzLHIudHlwZSxyKX0sbn0oYyk7IWZ1bmN0aW9uKHQpe3QuYnV0dG9uQVN0YXRlPVwiZTk1ZGRhOTAtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC5idXR0b25CU3RhdGU9XCJlOTVkZGE5MS0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIn0oYnx8KGI9e30pKSxmdW5jdGlvbih0KXt0W3QuUmVsZWFzZT0wXT1cIlJlbGVhc2VcIix0W3QuU2hvcnRQcmVzcz0xXT1cIlNob3J0UHJlc3NcIix0W3QuTG9uZ1ByZXNzPTJdPVwiTG9uZ1ByZXNzXCJ9KEN8fChDPXt9KSk7dmFyIEwsRD1mdW5jdGlvbih0KXtmdW5jdGlvbiBpKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5oZWxwZXI9bmV3IG8oZSxuKSxufXJldHVybiBlKGksdCksaS5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsKGU9bmV3IGkodCkpLmluaXQoKV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSxbMixlXX19KSl9KSl9LGkucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5oYW5kbGVMaXN0ZW5lcihcImJ1dHRvbmFzdGF0ZWNoYW5nZWRcIixiLmJ1dHRvbkFTdGF0ZSx0aGlzLmJ1dHRvbkFTdGF0ZUNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFs0LHRoaXMuaGVscGVyLmhhbmRsZUxpc3RlbmVyKFwiYnV0dG9uYnN0YXRlY2hhbmdlZFwiLGIuYnV0dG9uQlN0YXRlLHRoaXMuYnV0dG9uQlN0YXRlQ2hhbmdlZEhhbmRsZXIuYmluZCh0aGlzKSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksWzJdfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZEJ1dHRvbkFTdGF0ZT1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmdldENoYXJhY3RlcmlzdGljVmFsdWUoYi5idXR0b25BU3RhdGUpXTtjYXNlIDE6cmV0dXJuWzIsdC5zZW50KCkuZ2V0VWludDgoMCldfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZEJ1dHRvbkJTdGF0ZT1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmdldENoYXJhY3RlcmlzdGljVmFsdWUoYi5idXR0b25CU3RhdGUpXTtjYXNlIDE6cmV0dXJuWzIsdC5zZW50KCkuZ2V0VWludDgoMCldfX0pKX0pKX0saS5wcm90b3R5cGUuYnV0dG9uQVN0YXRlQ2hhbmdlZEhhbmRsZXI9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQudmFsdWU7dGhpcy5kaXNwYXRjaEV2ZW50KFwiYnV0dG9uYXN0YXRlY2hhbmdlZFwiLGUuZ2V0VWludDgoMCkpfSxpLnByb3RvdHlwZS5idXR0b25CU3RhdGVDaGFuZ2VkSGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC52YWx1ZTt0aGlzLmRpc3BhdGNoRXZlbnQoXCJidXR0b25ic3RhdGVjaGFuZ2VkXCIsZS5nZXRVaW50OCgwKSl9LGkudXVpZD1cImU5NWQ5ODgyLTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwiLGl9KFYpOyFmdW5jdGlvbih0KXt0LmxlZE1hdHJpeFN0YXRlPVwiZTk1ZDdiNzctMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC5sZWRUZXh0PVwiZTk1ZDkzZWUtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC5zY3JvbGxpbmdEZWxheT1cImU5NWQwZDJkLTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwifShMfHwoTD17fSkpO3ZhciBTLEU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuaGVscGVyPW5ldyBvKHQpfXJldHVybiB0LmNyZWF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7cmV0dXJuWzIsbmV3IHQoZSldfSkpfSkpfSx0LnByb3RvdHlwZS53cml0ZVRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3JldHVybiBlPXRoaXMuZW5jb2RlU3RyaW5nKHQpLFsyLHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoTC5sZWRUZXh0LGUpXX0pKX0pKX0sdC5wcm90b3R5cGUucmVhZE1hdHJpeFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShMLmxlZE1hdHJpeFN0YXRlKV07Y2FzZSAxOnJldHVybiB0PWUuc2VudCgpLFsyLHRoaXMudmlld1RvTGVkTWF0cml4KHQpXX19KSl9KSl9LHQucHJvdG90eXBlLndyaXRlTWF0cml4U3RhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3JldHVybiBlPXRoaXMubGVkTWF0cml4VG9WaWV3KHQpLFsyLHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoTC5sZWRNYXRyaXhTdGF0ZSxlKV19KSl9KSl9LHQucHJvdG90eXBlLmdldFNjcm9sbGluZ0RlbGF5PWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShMLnNjcm9sbGluZ0RlbGF5KV07Y2FzZSAxOnJldHVyblsyLHQuc2VudCgpLmdldFVpbnQxNigwLCEwKV19fSkpfSkpfSx0LnByb3RvdHlwZS5zZXRTY3JvbGxpbmdEZWxheT1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7cmV0dXJuKGU9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigyKSkpLnNldFVpbnQxNigwLHQsITApLFsyLHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoTC5zY3JvbGxpbmdEZWxheSxlKV19KSl9KSl9LHQucHJvdG90eXBlLmVuY29kZVN0cmluZz1mdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IEFycmF5QnVmZmVyKHQubGVuZ3RoKSxuPW5ldyBVaW50OEFycmF5KGUpLHI9MDtyPHQubGVuZ3RoO3IrKyluW3JdPXQuY2hhckNvZGVBdChyKTtyZXR1cm4gZX0sdC5wcm90b3R5cGUudmlld1RvTGVkTWF0cml4PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjw1O24rKyllW25dPXRoaXMuYnl0ZVRvQm9vbEFycmF5KHQuZ2V0VWludDgobikpO3JldHVybiBlfSx0LnByb3RvdHlwZS5ieXRlVG9Cb29sQXJyYXk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVshMSwhMSwhMSwhMSwhMV0sbj0wO248ZS5sZW5ndGg7bisrKWVbbl09MT09KDEmdCksdD4+PTE7cmV0dXJuIGUucmV2ZXJzZSgpfSx0LnByb3RvdHlwZS5sZWRNYXRyaXhUb1ZpZXc9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoNSkpLG49MDtuPDU7bisrKWUuc2V0VWludDgobix0aGlzLmJvb2xBcnJheVRvQnl0ZSh0W25dKSk7cmV0dXJuIGV9LHQucHJvdG90eXBlLmJvb2xBcnJheVRvQnl0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8PDF8KGU/MTowKX0pLDApfSx0LnV1aWQ9XCJlOTVkZDkxZC0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0fSgpOyFmdW5jdGlvbih0KXt0LnRlbXBlcmF0dXJlPVwiZTk1ZDkyNTAtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC50ZW1wZXJhdHVyZVBlcmlvZD1cImU5NWQxYjI1LTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwifShTfHwoUz17fSkpO3ZhciBBLFQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gaShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uaGVscGVyPW5ldyBvKGUsbiksbn1yZXR1cm4gZShpLHQpLGkuY3JlYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybls0LChlPW5ldyBpKHQpKS5pbml0KCldO2Nhc2UgMTpyZXR1cm4gbi5zZW50KCksWzIsZV19fSkpfSkpfSxpLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuaGFuZGxlTGlzdGVuZXIoXCJ0ZW1wZXJhdHVyZWNoYW5nZWRcIixTLnRlbXBlcmF0dXJlLHRoaXMudGVtcGVyYXR1cmVDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbMl19fSkpfSkpfSxpLnByb3RvdHlwZS5yZWFkVGVtcGVyYXR1cmU9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5nZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKFMudGVtcGVyYXR1cmUpXTtjYXNlIDE6cmV0dXJuWzIsdC5zZW50KCkuZ2V0SW50OCgwKV19fSkpfSkpfSxpLnByb3RvdHlwZS5nZXRUZW1wZXJhdHVyZVBlcmlvZD1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmdldENoYXJhY3RlcmlzdGljVmFsdWUoUy50ZW1wZXJhdHVyZVBlcmlvZCldO2Nhc2UgMTpyZXR1cm5bMix0LnNlbnQoKS5nZXRVaW50MTYoMCwhMCldfX0pKX0pKX0saS5wcm90b3R5cGUuc2V0VGVtcGVyYXR1cmVQZXJpb2Q9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuKGU9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigyKSkpLnNldFVpbnQxNigwLHQsITApLFs0LHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoUy50ZW1wZXJhdHVyZVBlcmlvZCxlKV07Y2FzZSAxOnJldHVyblsyLG4uc2VudCgpXX19KSl9KSl9LGkucHJvdG90eXBlLnRlbXBlcmF0dXJlQ2hhbmdlZEhhbmRsZXI9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQudmFsdWU7dGhpcy5kaXNwYXRjaEV2ZW50KFwidGVtcGVyYXR1cmVjaGFuZ2VkXCIsZS5nZXRJbnQ4KDApKX0saS51dWlkPVwiZTk1ZDYxMDAtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsaX0oVik7IWZ1bmN0aW9uKHQpe3QuYWNjZWxlcm9tZXRlckRhdGE9XCJlOTVkY2E0Yi0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0LmFjY2VsZXJvbWV0ZXJQZXJpb2Q9XCJlOTVkZmIyNC0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIn0oQXx8KEE9e30pKTt2YXIgVSx4LF89ZnVuY3Rpb24odCl7ZnVuY3Rpb24gaShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uaGVscGVyPW5ldyBvKGUsbiksbn1yZXR1cm4gZShpLHQpLGkuY3JlYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybls0LChlPW5ldyBpKHQpKS5pbml0KCldO2Nhc2UgMTpyZXR1cm4gbi5zZW50KCksWzIsZV19fSkpfSkpfSxpLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuaGFuZGxlTGlzdGVuZXIoXCJhY2NlbGVyb21ldGVyZGF0YWNoYW5nZWRcIixBLmFjY2VsZXJvbWV0ZXJEYXRhLHRoaXMuYWNjZWxlcm9tZXRlckRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbMl19fSkpfSkpfSxpLnByb3RvdHlwZS5yZWFkQWNjZWxlcm9tZXRlckRhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5nZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEEuYWNjZWxlcm9tZXRlckRhdGEpXTtjYXNlIDE6cmV0dXJuIHQ9ZS5zZW50KCksWzIsdGhpcy5kYXRhVmlld1RvQWNjZWxlcm9tZXRlckRhdGEodCldfX0pKX0pKX0saS5wcm90b3R5cGUuZ2V0QWNjZWxlcm9tZXRlclBlcmlvZD1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmdldENoYXJhY3RlcmlzdGljVmFsdWUoQS5hY2NlbGVyb21ldGVyUGVyaW9kKV07Y2FzZSAxOnJldHVyblsyLHQuc2VudCgpLmdldFVpbnQxNigwLCEwKV19fSkpfSkpfSxpLnByb3RvdHlwZS5zZXRBY2NlbGVyb21ldGVyUGVyaW9kPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtyZXR1cm4oZT1uZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDIpKSkuc2V0VWludDE2KDAsdCwhMCksWzIsdGhpcy5oZWxwZXIuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShBLmFjY2VsZXJvbWV0ZXJQZXJpb2QsZSldfSkpfSkpfSxpLnByb3RvdHlwZS5hY2NlbGVyb21ldGVyRGF0YUNoYW5nZWRIYW5kbGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LnZhbHVlLG49dGhpcy5kYXRhVmlld1RvQWNjZWxlcm9tZXRlckRhdGEoZSk7dGhpcy5kaXNwYXRjaEV2ZW50KFwiYWNjZWxlcm9tZXRlcmRhdGFjaGFuZ2VkXCIsbil9LGkucHJvdG90eXBlLmRhdGFWaWV3VG9BY2NlbGVyb21ldGVyRGF0YT1mdW5jdGlvbih0KXtyZXR1cm57eDp0LmdldEludDE2KDAsITApLzFlMyx5OnQuZ2V0SW50MTYoMiwhMCkvMWUzLHo6dC5nZXRJbnQxNig0LCEwKS8xZTN9fSxpLnV1aWQ9XCJlOTVkMDc1My0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIixpfShWKTshZnVuY3Rpb24odCl7dC5tYWduZXRvbWV0ZXJEYXRhPVwiZTk1ZGZiMTEtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC5tYWduZXRvbWV0ZXJQZXJpb2Q9XCJlOTVkMzg2Yy0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0Lm1hZ25ldG9tZXRlckJlYXJpbmc9XCJlOTVkOTcxNS0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0Lm1hZ25ldG9tZXRlckNhbGlicmF0aW9uPVwiZTk1ZGIzNTgtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCJ9KFV8fChVPXt9KSksZnVuY3Rpb24odCl7dFt0LnVua25vd249MF09XCJ1bmtub3duXCIsdFt0LnJlcXVlc3RlZD0xXT1cInJlcXVlc3RlZFwiLHRbdC5jb21wbGV0ZWQ9Ml09XCJjb21wbGV0ZWRcIix0W3QuZXJyb3JlZD0zXT1cImVycm9yZWRcIn0oeHx8KHg9e30pKTt2YXIgQixQPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmhlbHBlcj1uZXcgbyhlLG4pLG59cmV0dXJuIGUoaSx0KSxpLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCwoZT1uZXcgaSh0KSkuaW5pdCgpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpLFsyLGVdfX0pKX0pKX0saS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmhhbmRsZUxpc3RlbmVyKFwibWFnbmV0b21ldGVyZGF0YWNoYW5nZWRcIixVLm1hZ25ldG9tZXRlckRhdGEsdGhpcy5tYWduZXRvbWV0ZXJEYXRhQ2hhbmdlZEhhbmRsZXIuYmluZCh0aGlzKSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzQsdGhpcy5oZWxwZXIuaGFuZGxlTGlzdGVuZXIoXCJtYWduZXRvbWV0ZXJiZWFyaW5nY2hhbmdlZFwiLFUubWFnbmV0b21ldGVyQmVhcmluZyx0aGlzLm1hZ25ldG9tZXRlckJlYXJpbmdDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbNCx0aGlzLmhlbHBlci5oYW5kbGVMaXN0ZW5lcihcIm1hZ25ldG9tZXRlcmNhbGlicmF0aW9uY2hhbmdlZFwiLFUubWFnbmV0b21ldGVyQ2FsaWJyYXRpb24sdGhpcy5tYWduZXRvbWV0ZXJDYWxpYnJhdGlvbkNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpXTtjYXNlIDM6cmV0dXJuIHQuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLmNhbGlicmF0ZT1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMix0aGlzLmhlbHBlci5zZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKFUubWFnbmV0b21ldGVyQ2FsaWJyYXRpb24sbmV3IFVpbnQ4QXJyYXkoWzFdKSldfSkpfSkpfSxpLnByb3RvdHlwZS5yZWFkTWFnbmV0b21ldGVyRGF0YT1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmdldENoYXJhY3RlcmlzdGljVmFsdWUoVS5tYWduZXRvbWV0ZXJEYXRhKV07Y2FzZSAxOnJldHVybiB0PWUuc2VudCgpLFsyLHRoaXMuZGF0YVZpZXdUb01hZ25ldG9tZXRlckRhdGEodCldfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZE1hZ25ldG9tZXRlckJlYXJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5nZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKFUubWFnbmV0b21ldGVyQmVhcmluZyldO2Nhc2UgMTpyZXR1cm4gMj09PSh0PWUuc2VudCgpKS5ieXRlTGVuZ3RoP1syLHQuZ2V0VWludDE2KDAsITApXTpbMix2b2lkIDBdfX0pKX0pKX0saS5wcm90b3R5cGUuZ2V0TWFnbmV0b21ldGVyUGVyaW9kPWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShVLm1hZ25ldG9tZXRlclBlcmlvZCldO2Nhc2UgMTpyZXR1cm5bMix0LnNlbnQoKS5nZXRVaW50MTYoMCwhMCldfX0pKX0pKX0saS5wcm90b3R5cGUuc2V0TWFnbmV0b21ldGVyUGVyaW9kPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtyZXR1cm4oZT1uZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDIpKSkuc2V0VWludDE2KDAsdCwhMCksWzIsdGhpcy5oZWxwZXIuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShVLm1hZ25ldG9tZXRlclBlcmlvZCxlKV19KSl9KSl9LGkucHJvdG90eXBlLm1hZ25ldG9tZXRlckRhdGFDaGFuZ2VkSGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC52YWx1ZSxuPXRoaXMuZGF0YVZpZXdUb01hZ25ldG9tZXRlckRhdGEoZSk7dGhpcy5kaXNwYXRjaEV2ZW50KFwibWFnbmV0b21ldGVyZGF0YWNoYW5nZWRcIixuKX0saS5wcm90b3R5cGUubWFnbmV0b21ldGVyQmVhcmluZ0NoYW5nZWRIYW5kbGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LnZhbHVlOzI9PT1lLmJ5dGVMZW5ndGgmJnRoaXMuZGlzcGF0Y2hFdmVudChcIm1hZ25ldG9tZXRlcmJlYXJpbmdjaGFuZ2VkXCIsZS5nZXRVaW50MTYoMCwhMCkpfSxpLnByb3RvdHlwZS5tYWduZXRvbWV0ZXJDYWxpYnJhdGlvbkNoYW5nZWRIYW5kbGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LnZhbHVlOzE9PT1lLmJ5dGVMZW5ndGgmJnRoaXMuZGlzcGF0Y2hFdmVudChcIm1hZ25ldG9tZXRlcmNhbGlicmF0aW9uY2hhbmdlZFwiLGUuZ2V0VWludDgoMCkpfSxpLnByb3RvdHlwZS5kYXRhVmlld1RvTWFnbmV0b21ldGVyRGF0YT1mdW5jdGlvbih0KXtyZXR1cm57eDp0LmdldEludDE2KDAsITApLHk6dC5nZXRJbnQxNigxLCEwKSx6OnQuZ2V0SW50MTYoMiwhMCl9fSxpLnV1aWQ9XCJlOTVkZjJkOC0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIixpfShWKTshZnVuY3Rpb24odCl7dC5waW5EYXRhPVwiZTk1ZDhkMDAtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCIsdC5waW5BZENvbmZpZ3VyYXRpb249XCJlOTVkNTg5OS0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0LnBpbklvQ29uZmlndXJhdGlvbj1cImU5NWRiOWZlLTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwiLHQucHdtQ29udHJvbD1cImU5NWRkODIyLTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwifShCfHwoQj17fSkpO3ZhciBNLHE7IWZ1bmN0aW9uKHQpe3RbdC5EaWdpdGFsPTBdPVwiRGlnaXRhbFwiLHRbdC5BbmFsb2d1ZT0xXT1cIkFuYWxvZ3VlXCJ9KE18fChNPXt9KSksZnVuY3Rpb24odCl7dFt0Lk91dHB1dD0wXT1cIk91dHB1dFwiLHRbdC5JbnB1dD0xXT1cIklucHV0XCJ9KHF8fChxPXt9KSk7dmFyIEgsUj1mdW5jdGlvbih0KXtmdW5jdGlvbiBpKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5oZWxwZXI9bmV3IG8oZSxuKSxufXJldHVybiBlKGksdCksaS5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsKGU9bmV3IGkodCkpLmluaXQoKV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSxbMixlXX19KSl9KSl9LGkucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5oYW5kbGVMaXN0ZW5lcihcInBpbmRhdGFjaGFuZ2VkXCIsQi5waW5EYXRhLHRoaXMucGluRGF0YUNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLnJlYWRQaW5EYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShCLnBpbkRhdGEpXTtjYXNlIDE6cmV0dXJuIHQ9ZS5zZW50KCksWzIsdGhpcy5kYXRhVmlld1RvUGluRGF0YSh0KV19fSkpfSkpfSxpLnByb3RvdHlwZS53cml0ZVBpbkRhdGE9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3JldHVybiBlPXRoaXMucGluRGF0YVRvRGF0YVZpZXcodCksWzIsdGhpcy5oZWxwZXIuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShCLnBpbkRhdGEsZSldfSkpfSkpfSxpLnByb3RvdHlwZS5nZXRBZENvbmZpZ3VyYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5nZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEIucGluQWRDb25maWd1cmF0aW9uKV07Y2FzZSAxOnJldHVybiB0PWUuc2VudCgpLFsyLHRoaXMuZGF0YVZpZXdUb0NvbmZpZyh0KV19fSkpfSkpfSxpLnByb3RvdHlwZS5zZXRBZENvbmZpZ3VyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3JldHVybiBlPXRoaXMuY29uZmlnVG9EYXRhVmlldyh0KSxbMix0aGlzLmhlbHBlci5zZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEIucGluQWRDb25maWd1cmF0aW9uLGUpXX0pKX0pKX0saS5wcm90b3R5cGUuZ2V0SW9Db25maWd1cmF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShCLnBpbklvQ29uZmlndXJhdGlvbildO2Nhc2UgMTpyZXR1cm4gdD1lLnNlbnQoKSxbMix0aGlzLmRhdGFWaWV3VG9Db25maWcodCldfX0pKX0pKX0saS5wcm90b3R5cGUuc2V0SW9Db25maWd1cmF0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihuKXtyZXR1cm4gZT10aGlzLmNvbmZpZ1RvRGF0YVZpZXcodCksWzIsdGhpcy5oZWxwZXIuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShCLnBpbklvQ29uZmlndXJhdGlvbixlKV19KSl9KSl9LGkucHJvdG90eXBlLnNldFB3bUNvbnRyb2w9ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlO3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKG4pe3JldHVybiBlPXRoaXMucHdtQ29udHJvbERhdGFUb0RhdGFWaWV3KHQpLFsyLHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoQi5wd21Db250cm9sLGUpXX0pKX0pKX0saS5wcm90b3R5cGUucGluRGF0YUNoYW5nZWRIYW5kbGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LnZhbHVlLG49dGhpcy5kYXRhVmlld1RvUGluRGF0YShlKTt0aGlzLmRpc3BhdGNoRXZlbnQoXCJwaW5kYXRhY2hhbmdlZFwiLG4pfSxpLnByb3RvdHlwZS5kYXRhVmlld1RvUGluRGF0YT1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0wO248dC5ieXRlTGVuZ3RoO24rPTIpZS5wdXNoKHtwaW46dC5nZXRVaW50OChuKSx2YWx1ZTp0LmdldFVpbnQ4KG4rMSl9KTtyZXR1cm4gZX0saS5wcm90b3R5cGUucGluRGF0YVRvRGF0YVZpZXc9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigyKnQubGVuZ3RoKSk7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCxuKXtlLnNldFVpbnQ4KDIqbix0LnBpbiksZS5zZXRVaW50OCgyKm4rMSx0LnZhbHVlKX0pKSxlfSxpLnByb3RvdHlwZS5kYXRhVmlld1RvQ29uZmlnPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPSh0LmdldFVpbnQxNigwKTw8OCkrdC5nZXRVaW50OCgyKSxyPTA7cjwyNDtyKyspZS5wdXNoKG4+PnIpO3JldHVybiBlfSxpLnByb3RvdHlwZS5jb25maWdUb0RhdGFWaWV3PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDMpKSxuPTAscj0wO3I8dC5sZW5ndGg7cisrKW4mPTE8PHRbcl07cmV0dXJuIGUuc2V0VWludDE2KDAsbj4+OCwhMCksZS5zZXRVaW50OCgyLDI1NSZuKSxlfSxpLnByb3RvdHlwZS5wd21Db250cm9sRGF0YVRvRGF0YVZpZXc9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcig3KSk7cmV0dXJuIGUuc2V0VWludDgoMCx0LnBpbiksZS5zZXRVaW50MTYoMSx0LnZhbHVlLCEwKSxlLnNldFVpbnQzMigzLHQucGVyaW9kLCEwKSxlfSxpLnV1aWQ9XCJlOTVkMTI3Yi0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIixpfShWKTshZnVuY3Rpb24odCl7dC50eD1cIjZlNDAwMDAyLWI1YTMtZjM5My1lMGE5LWU1MGUyNGRjY2E5ZVwiLHQucng9XCI2ZTQwMDAwMy1iNWEzLWYzOTMtZTBhOS1lNTBlMjRkY2NhOWVcIn0oSHx8KEg9e30pKTt2YXIgSSxPPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmhlbHBlcj1uZXcgbyhlLG4pLG59cmV0dXJuIGUoaSx0KSxpLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCwoZT1uZXcgaSh0KSkuaW5pdCgpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpLFsyLGVdfX0pKX0pKX0saS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmhhbmRsZUxpc3RlbmVyKFwicmVjZWl2ZVwiLEgudHgsdGhpcy5yZWNlaXZlSGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbNCx0aGlzLmhlbHBlci5oYW5kbGVMaXN0ZW5lcihcInJlY2VpdmVUZXh0XCIsSC50eCx0aGlzLnJlY2VpdmVUZXh0SGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbMl19fSkpfSkpfSxpLnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKHQpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihlKXtyZXR1cm5bMix0aGlzLmhlbHBlci5zZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEgucngsdCldfSkpfSkpfSxpLnByb3RvdHlwZS5zZW5kVGV4dD1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7cmV0dXJuIGU9dC5zcGxpdChcIlwiKS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNoYXJDb2RlQXQoMCl9KSksWzIsdGhpcy5oZWxwZXIuc2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShILnJ4LG5ldyBVaW50OEFycmF5KGUpLmJ1ZmZlcildfSkpfSkpfSxpLnByb3RvdHlwZS5yZWNlaXZlSGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC52YWx1ZSxuPW5ldyBVaW50OEFycmF5KGUuYnVmZmVyKTt0aGlzLmRpc3BhdGNoRXZlbnQoXCJyZWNlaXZlXCIsbil9LGkucHJvdG90eXBlLnJlY2VpdmVUZXh0SGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC52YWx1ZSxuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG5ldyBVaW50OEFycmF5KGUuYnVmZmVyKSkscj1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsbik7dGhpcy5kaXNwYXRjaEV2ZW50KFwicmVjZWl2ZVRleHRcIixyKX0saS51dWlkPVwiNmU0MDAwMDEtYjVhMy1mMzkzLWUwYTktZTUwZTI0ZGNjYTllXCIsaX0oVik7IWZ1bmN0aW9uKHQpe3QubWljcm9CaXRSZXF1aXJlbWVudHM9XCJlOTVkYjg0Yy0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0Lm1pY3JvQml0RXZlbnQ9XCJlOTVkOTc3NS0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0LmNsaWVudFJlcXVpcmVtZW50cz1cImU5NWQyM2M0LTI1MWQtNDcwYS1hMDYyLWZhMTkyMmRmYTlhOFwiLHQuY2xpZW50RXZlbnQ9XCJlOTVkNTQwNC0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIn0oSXx8KEk9e30pKTt2YXIgayxqPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmhlbHBlcj1uZXcgbyhlLG4pLG59cmV0dXJuIGUoaSx0KSxpLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCwoZT1uZXcgaSh0KSkuaW5pdCgpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpLFsyLGVdfX0pKX0pKX0saS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLChmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaGVscGVyLmhhbmRsZUxpc3RlbmVyKFwibWljcm9iaXRldmVudFwiLEkubWljcm9CaXRFdmVudCx0aGlzLmV2ZW50SGFuZGxlci5iaW5kKHRoaXMpKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbNCx0aGlzLmhlbHBlci5oYW5kbGVMaXN0ZW5lcihcIm1pY3JvYml0cmVxdWlyZW1lbnRzY2hhbmdlZFwiLEkubWljcm9CaXRSZXF1aXJlbWVudHMsdGhpcy5taWNyb2JpdFJlcXVpcmVtZW50c0NoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLFsyXX19KSl9KSl9LGkucHJvdG90eXBlLmdldE1pY3JvYml0UmVxdWlyZW1lbnRzPWZ1bmN0aW9uKCl7cmV0dXJuIG4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0O3JldHVybiByKHRoaXMsKGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5oZWxwZXIuZ2V0Q2hhcmFjdGVyaXN0aWNWYWx1ZShJLm1pY3JvQml0UmVxdWlyZW1lbnRzKV07Y2FzZSAxOnJldHVybiB0PWUuc2VudCgpLFsyLHRoaXMudmlld1RvTWljcm9iaXRFdmVudCh0KV19fSkpfSkpfSxpLnByb3RvdHlwZS5zZXRDbGllbnRSZXF1aXJlbWVudHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIG47cmV0dXJuIHIodGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm4obj1uZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDQpKSkuc2V0VWludDE2KDAsdCwhMCksbi5zZXRVaW50MTYoMSxlLCEwKSxbNCx0aGlzLmhlbHBlci5zZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEkuY2xpZW50UmVxdWlyZW1lbnRzLG4pXTtjYXNlIDE6cmV0dXJuWzIsci5zZW50KCldfX0pKX0pKX0saS5wcm90b3R5cGUucmVhZE1pY3JvYml0RXZlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmhlbHBlci5nZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlKEkubWljcm9CaXRFdmVudCldO2Nhc2UgMTpyZXR1cm4gdD1lLnNlbnQoKSxbMix0aGlzLnZpZXdUb01pY3JvYml0RXZlbnQodCldfX0pKX0pKX0saS5wcm90b3R5cGUud3JpdGVDbGllbnRFdmVudD1mdW5jdGlvbih0LGUpe3JldHVybiBuKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgbjtyZXR1cm4gcih0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybihuPW5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoNCkpKS5zZXRVaW50MTYoMCx0LCEwKSxuLnNldFVpbnQxNigxLGUsITApLFs0LHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoSS5jbGllbnRFdmVudCxuKV07Y2FzZSAxOnJldHVyblsyLHIuc2VudCgpXX19KSl9KSl9LGkucHJvdG90eXBlLm1pY3JvYml0UmVxdWlyZW1lbnRzQ2hhbmdlZEhhbmRsZXI9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQudmFsdWUsbj10aGlzLnZpZXdUb01pY3JvYml0RXZlbnQoZSk7dGhpcy5kaXNwYXRjaEV2ZW50KFwibWljcm9iaXRyZXF1aXJlbWVudHNjaGFuZ2VkXCIsbil9LGkucHJvdG90eXBlLmV2ZW50SGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC52YWx1ZSxuPXRoaXMudmlld1RvTWljcm9iaXRFdmVudChlKTt0aGlzLmRpc3BhdGNoRXZlbnQoXCJtaWNyb2JpdGV2ZW50XCIsbil9LGkucHJvdG90eXBlLnZpZXdUb01pY3JvYml0RXZlbnQ9ZnVuY3Rpb24odCl7cmV0dXJue3R5cGU6dC5nZXRVaW50MTYoMCwhMCksdmFsdWU6dC5nZXRVaW50MTYoMSwhMCl9fSxpLnV1aWQ9XCJlOTVkOTNhZi0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIixpfShWKTshZnVuY3Rpb24odCl7dC5kZnVDb250cm9sPVwiZTk1ZDkzYjEtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4XCJ9KGt8fChrPXt9KSk7dmFyIE49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuaGVscGVyPW5ldyBvKHQpfXJldHVybiB0LmNyZWF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7cmV0dXJuWzIsbmV3IHQoZSldfSkpfSkpfSx0LnByb3RvdHlwZS5yZXF1ZXN0RGZ1PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoay5kZnVDb250cm9sLG5ldyBVaW50OEFycmF5KFsxXSkpfSx0LnByb3RvdHlwZS5yZXF1ZXN0Rmxhc2hDb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGVscGVyLnNldENoYXJhY3RlcmlzdGljVmFsdWUoay5kZnVDb250cm9sLG5ldyBVaW50OEFycmF5KFsyXSkpfSx0LnV1aWQ9XCJlOTVkOTNiMC0yNTFkLTQ3MGEtYTA2Mi1mYTE5MjJkZmE5YThcIix0fSgpLHo9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuc2VydmljZXM9dH1yZXR1cm4gdC5wcm90b3R5cGUuY3JlYXRlU2VydmljZT1mdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm4oZT10aGlzLnNlcnZpY2VzLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnV1aWQ9PT10LnV1aWR9KSkpP1s0LHQuY3JlYXRlKGUpXTpbMix2b2lkIDBdO2Nhc2UgMTpyZXR1cm5bMixuLnNlbnQoKV19fSkpfSkpfSx0fSgpLEY9ZnVuY3Rpb24odCl7cmV0dXJuIG4odm9pZCAwLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0LnJlcXVlc3REZXZpY2Uoe2ZpbHRlcnM6W3tuYW1lUHJlZml4OlwiQkJDIG1pY3JvOmJpdFwifV0sb3B0aW9uYWxTZXJ2aWNlczpbdS51dWlkLEQudXVpZCxFLnV1aWQsVC51dWlkLF8udXVpZCxQLnV1aWQsUi51dWlkLE8udXVpZCxqLnV1aWQsTi51dWlkXX0pXTtjYXNlIDE6cmV0dXJuWzIsZS5zZW50KCldfX0pKX0pKX0sRz1mdW5jdGlvbih0KXtyZXR1cm4gbih2b2lkIDAsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZSxuLGksYSxvLHMsYyxoLGYsZCxsLHY7cmV0dXJuIHIodGhpcywoZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdCYmdC5nYXR0P3QuZ2F0dC5jb25uZWN0ZWQ/WzMsMl06WzQsdC5nYXR0LmNvbm5lY3QoKV06WzIse31dO2Nhc2UgMTpyLnNlbnQoKSxyLmxhYmVsPTI7Y2FzZSAyOnJldHVybls0LHQuZ2F0dC5nZXRQcmltYXJ5U2VydmljZXMoKV07Y2FzZSAzOnJldHVybiBlPXIuc2VudCgpLFs0LChuPW5ldyB6KGUpKS5jcmVhdGVTZXJ2aWNlKHUpXTtjYXNlIDQ6cmV0dXJuIGk9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKEQpXTtjYXNlIDU6cmV0dXJuIGE9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKEUpXTtjYXNlIDY6cmV0dXJuIG89ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKFQpXTtjYXNlIDc6cmV0dXJuIHM9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKF8pXTtjYXNlIDg6cmV0dXJuIGM9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKFApXTtjYXNlIDk6cmV0dXJuIGg9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKE8pXTtjYXNlIDEwOnJldHVybiBmPXIuc2VudCgpLFs0LG4uY3JlYXRlU2VydmljZShqKV07Y2FzZSAxMTpyZXR1cm4gZD1yLnNlbnQoKSxbNCxuLmNyZWF0ZVNlcnZpY2UoTildO2Nhc2UgMTI6cmV0dXJuIGw9ci5zZW50KCksWzQsbi5jcmVhdGVTZXJ2aWNlKFIpXTtjYXNlIDEzOnJldHVybiB2PXIuc2VudCgpLFsyLHtkZXZpY2VJbmZvcm1hdGlvblNlcnZpY2U6aSxidXR0b25TZXJ2aWNlOmEsbGVkU2VydmljZTpvLHRlbXBlcmF0dXJlU2VydmljZTpzLGFjY2VsZXJvbWV0ZXJTZXJ2aWNlOmMsbWFnbmV0b21ldGVyU2VydmljZTpoLHVhcnRTZXJ2aWNlOmYsZXZlbnRTZXJ2aWNlOmQsZGZ1Q29udHJvbFNlcnZpY2U6bCxpb1BpblNlcnZpY2U6dn1dfX0pKX0pKX07ZXhwb3J0e0cgYXMgZ2V0U2VydmljZXMsRiBhcyByZXF1ZXN0TWljcm9iaXR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWljcm9iaXQuZXNtLmpzLm1hcFxuIiwiaW1wb3J0IHsgV2ViVVNCLCBEQVBMaW5rIH0gZnJvbSAnZGFwanMnO1xuaW1wb3J0IHsgZ2V0U2VydmljZXMgfSBmcm9tICdtaWNyb2JpdC13ZWItYmx1ZXRvb3RoJztcbmltcG9ydCB7IExlZE1hdHJpeCB9IGZyb20gJ21pY3JvYml0LXdlYi1ibHVldG9vdGgvdHlwZXMvc2VydmljZXMvbGVkJztcbmltcG9ydCB7IGdldEZyaWVuZGx5TmFtZSwgZ2V0UGFpclBhdHRlcm4gfSBmcm9tICcuL21pY3JvYml0JztcblxuY29uc3QgVkVORE9SX0lEID0gMzM2ODtcbmNvbnN0IFBST0RVQ1RfSUQgPSA1MTY7XG5jb25zdCBNSUNST0JJVF9QUkVGSVggPSAnQkJDIG1pY3JvOmJpdCc7XG5jb25zdCBGTEFTSF9GSUxFID0gJ21pY3JvYml0LURFVklDRS1QUk9EVUNUSU9OLmhleCc7XG5jb25zdCBTRVJWSUNFX1VVSUQgPSAnZTk1ZDA3NTMtMjUxZC00NzBhLWEwNjItZmExOTIyZGZhOWE4JztcblxuY29uc3QgdXNiTmF2aWdhdG9yID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2I7XG5jb25zdCBibGVOYXZpZ2F0b3IgPSBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLmJsdWV0b290aDtcblxuY29uc3QgdXNiQnV0dG9uRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNiLWJ1dHRvbicpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuY29uc3QgZmxhc2hCdXR0b25FbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbGFzaC1idXR0b24nKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbmNvbnN0IGJsZUJ1dHRvbkVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JsZS1idXR0b24nKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbmNvbnN0IHJlc3VsdEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdCcpIGFzIEhUTUxEaXZFbGVtZW50O1xuY29uc3QgbWF0cml4RWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWF0cml4JykgYXMgSFRNTERpdkVsZW1lbnQ7XG5cbmxldCB1c2JEZXZpY2U6IFVTQkRldmljZSB8IHVuZGVmaW5lZDtcbmxldCBmcmllbmRseU5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuY29uc3QgbG9nID0gKG1lc3NhZ2U6IHN0cmluZywgY2xlYXJGaXJzdCA9IGZhbHNlKSA9PiB7XG4gICAgaWYgKGNsZWFyRmlyc3QpIHtcbiAgICAgICAgcmVzdWx0RWwuaW5uZXJUZXh0ID0gJyc7XG4gICAgfVxuICAgIHJlc3VsdEVsLmlubmVyVGV4dCArPSBgJHttZXNzYWdlfVxcbmA7XG59XG5cbmNvbnN0IHVwZGF0ZU1hdHJpeCA9IChzdGF0ZT86IExlZE1hdHJpeCkgPT4ge1xuICAgIG1hdHJpeEVsLmlubmVySFRNTCA9ICcnO1xuICAgIGlmIChzdGF0ZSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkgKyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgNTsgaiArKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIGxlZC5pZCA9IGBsZWQtJHtpfS0ke2p9YDtcbiAgICAgICAgICAgICAgICBsZWQuY2xhc3NOYW1lID0gc3RhdGVbaV1bal0gPyAnbGVkLW9uJyA6ICdsZWQtb2ZmJztcbiAgICAgICAgICAgICAgICBtYXRyaXhFbC5hcHBlbmRDaGlsZChsZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcblxuY29uc3QgdXBkYXRlRGV2aWNlID0gYXN5bmMgKGRldmljZT86IFVTQkRldmljZSB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIHJlc3VsdEVsLmlubmVyVGV4dCA9ICcnO1xuICAgIHVzYkRldmljZSA9IGRldmljZTtcbiAgICBmcmllbmRseU5hbWUgPSB1c2JEZXZpY2UgPyBhd2FpdCBnZXRGcmllbmRseU5hbWUodXNiRGV2aWNlKSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBtYXRyaXggPSB1c2JEZXZpY2UgPyBnZXRQYWlyUGF0dGVybihmcmllbmRseU5hbWUpIDogdW5kZWZpbmVkO1xuXG4gICAgZmxhc2hCdXR0b25FbC5kaXNhYmxlZCA9IGJsZUJ1dHRvbkVsLmRpc2FibGVkID0gIXVzYkRldmljZTtcbiAgICBibGVCdXR0b25FbC5pbm5lclRleHQgPSAnQ29ubmVjdCBCbHVldG9vdGggRGV2aWNlJyArIChmcmllbmRseU5hbWUgPyBgIFske2ZyaWVuZGx5TmFtZX1dYCA6ICcnKTtcbiAgICB1cGRhdGVNYXRyaXgobWF0cml4KTtcbn1cblxudXNiQnV0dG9uRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7XG4gICAgaWYgKCF1c2JOYXZpZ2F0b3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJVU0IgaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXIsIHBsZWFzZSByZWZlciB0byBodHRwczovL2Nhbml1c2UuY29tL3dlYnVzYiBmb3Igc3VwcG9ydGVkIGJyb3dzZXJzJyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGV2aWNlID0gYXdhaXQgdXNiTmF2aWdhdG9yLnJlcXVlc3REZXZpY2Uoe1xuICAgICAgICAgICAgZmlsdGVyczogW3tcbiAgICAgICAgICAgICAgICB2ZW5kb3JJZDogVkVORE9SX0lELFxuICAgICAgICAgICAgICAgIHByb2R1Y3RJZDogUFJPRFVDVF9JRFxuICAgICAgICAgICAgfV1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdXBkYXRlRGV2aWNlKGRldmljZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbG9nKGVycm9yKTtcbiAgICB9XG59KTtcblxuZmxhc2hCdXR0b25FbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXVzYkRldmljZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChGTEFTSF9GSUxFKTtcbiAgICBjb25zdCBidWZmZXIgPSBhd2FpdCByZXNwb25zZS5hcnJheUJ1ZmZlcigpO1xuXG4gICAgY29uc3QgdHJhbnNwb3J0ID0gbmV3IFdlYlVTQih1c2JEZXZpY2UpO1xuICAgIGNvbnN0IHRhcmdldCA9IG5ldyBEQVBMaW5rKHRyYW5zcG9ydCk7XG5cbiAgICB0YXJnZXQub24oREFQTGluay5FVkVOVF9QUk9HUkVTUywgcHJvZ3Jlc3MgPT4ge1xuICAgICAgICBsb2coYEZsYXNoaW5nICR7TWF0aC5jZWlsKHByb2dyZXNzICogMTAwKX0lYCwgdHJ1ZSk7XG4gICAgfSk7XG5cbiAgICB0cnkge1xuICAgICAgICAvLyBGbGFzaCBiaW5hcnkgdG8gYm9hcmRcbiAgICAgICAgYXdhaXQgdGFyZ2V0LmNvbm5lY3QoKTtcbiAgICAgICAgYXdhaXQgdGFyZ2V0LmZsYXNoKGJ1ZmZlcik7XG4gICAgICAgIGF3YWl0IHRhcmdldC5kaXNjb25uZWN0KCk7XG5cbiAgICAgICAgbG9nKCdGbGFzaCBjb21wbGV0ZSEnLCB0cnVlKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBsb2coZXJyb3IpO1xuICAgIH1cbn0pO1xuXG5ibGVCdXR0b25FbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWJsZU5hdmlnYXRvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dlYiBCbHVldG9vdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXIsIHBsZWFzZSByZWZlciB0byBodHRwczovL2Nhbml1c2UuY29tL3dlYi1ibHVldG9vdGggZm9yIHN1cHBvcnRlZCBicm93c2VycycpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IG5hbWVQcmVmaXggPSBNSUNST0JJVF9QUkVGSVggKyAoZnJpZW5kbHlOYW1lID8gYCBbJHtmcmllbmRseU5hbWV9XWAgOiAnJyk7XG4gICAgICAgIGNvbnN0IGJsZURldmljZSA9IGF3YWl0IGJsZU5hdmlnYXRvci5yZXF1ZXN0RGV2aWNlKHtcbiAgICAgICAgICAgIGZpbHRlcnM6IFt7IG5hbWVQcmVmaXggfV0sXG4gICAgICAgICAgICBvcHRpb25hbFNlcnZpY2VzOiBbIFNFUlZJQ0VfVVVJRCBdXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IHNlcnZpY2VzID0gYXdhaXQgZ2V0U2VydmljZXMoYmxlRGV2aWNlKTtcblxuICAgICAgICBpZiAoc2VydmljZXMuYWNjZWxlcm9tZXRlclNlcnZpY2UpIHtcbiAgICAgICAgICAgIHNlcnZpY2VzLmFjY2VsZXJvbWV0ZXJTZXJ2aWNlLmFkZEV2ZW50TGlzdGVuZXIoJ2FjY2VsZXJvbWV0ZXJkYXRhY2hhbmdlZCcsIGV2ID0+IHtcbiAgICAgICAgICAgICAgICBsb2coYHg6ICR7ZXYuZGV0YWlsLnh9YCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgbG9nKGB5OiAke2V2LmRldGFpbC55fWApO1xuICAgICAgICAgICAgICAgIGxvZyhgejogJHtldi5kZXRhaWwuen1gKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbG9nKGVycm9yKTtcbiAgICB9XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgaWYgKCF1c2JOYXZpZ2F0b3IpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHVzYk5hdmlnYXRvci5hZGRFdmVudExpc3RlbmVyKCdjb25uZWN0JywgYXN5bmMgZXYgPT4ge1xuICAgICAgICBpZiAoZXYuZGV2aWNlLnZlbmRvcklkID09PSBWRU5ET1JfSUQgJiYgZXYuZGV2aWNlLnByb2R1Y3RJZCA9PT0gUFJPRFVDVF9JRCkge1xuICAgICAgICAgICAgdXBkYXRlRGV2aWNlKGV2LmRldmljZSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHVzYk5hdmlnYXRvci5hZGRFdmVudExpc3RlbmVyKCdkaXNjb25uZWN0JywgZXYgPT4ge1xuICAgICAgICBpZiAoZXYuZGV2aWNlID09PSB1c2JEZXZpY2UpIHtcbiAgICAgICAgICAgIHVwZGF0ZURldmljZSh1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcbiIsImltcG9ydCB7IENvcnRleE0sIFdlYlVTQiB9IGZyb20gJ2RhcGpzJztcbmltcG9ydCB7IExlZE1hdHJpeCB9IGZyb20gJ21pY3JvYml0LXdlYi1ibHVldG9vdGgvdHlwZXMvc2VydmljZXMvbGVkJztcblxuLy8gaHR0cHM6Ly9pbmZvY2VudGVyLm5vcmRpY3NlbWkuY29tL2luZGV4LmpzcD90b3BpYz0lMkZjb20ubm9yZGljLmluZm9jZW50ZXIubnJmNTI4MzIucHMudjEuMSUyRmZpY3IuaHRtbFxuY29uc3QgRklDUiA9IDB4MTAwMDAwMDA7XG5jb25zdCBERVZJQ0VfSURfMSA9IDB4MDY0O1xuXG5jb25zdCBNSUNST0JJVF9OQU1FX0xFTkdUSCA9IDU7XG5jb25zdCBNSUNST0JJVF9OQU1FX0NPREVfTEVUVEVSUyA9IDU7XG5jb25zdCBDT0RFQk9PSyA9IFtcbiAgICBbJ3onLCAndicsICdnJywgJ3AnLCAndCddLFxuICAgIFsndScsICdvJywgJ2knLCAnZScsICdhJ10sXG4gICAgWyd6JywgJ3YnLCAnZycsICdwJywgJ3QnXSxcbiAgICBbJ3UnLCAnbycsICdpJywgJ2UnLCAnYSddLFxuICAgIFsneicsICd2JywgJ2cnLCAncCcsICd0J11cbl1cblxuY2xhc3MgTWljcm9CaXQgZXh0ZW5kcyBDb3J0ZXhNIHtcblxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9sYW5jYXN0ZXItdW5pdmVyc2l0eS9jb2RhbC1taWNyb2JpdC12Mi9ibG9iL2U3MjM2Y2Q2OWMwMWE1ZTgwM2ZlMzY5N2ZkMmVmOTk0ODA4Nzk0ZTkvc291cmNlL01pY3JvQml0RGV2aWNlLmNwcCNMMTMwXG4gICAgcHVibGljIGFzeW5jIG1pY3JvYml0RnJpZW5kbHlOYW1lKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIC8vIE1pY3JvYml0IG9ubHkgdXNlcyBNU0Igb2Ygc2VyaWFsIG51bWJlclxuICAgICAgICBsZXQgc2VyaWFsID0gYXdhaXQgdGhpcy5yZWFkTWVtMzIoRklDUiArIERFVklDRV9JRF8xKTtcblxuICAgICAgICBsZXQgZCA9IE1JQ1JPQklUX05BTUVfQ09ERV9MRVRURVJTO1xuICAgICAgICBsZXQgbGQgPSAxO1xuICAgICAgICBsZXQgbmFtZSA9ICcnO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTUlDUk9CSVRfTkFNRV9MRU5HVEg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgaCA9IE1hdGguZmxvb3IoKHNlcmlhbCAlIGQpIC8gbGQpO1xuICAgICAgICAgICAgc2VyaWFsIC09IGg7XG4gICAgICAgICAgICBkICo9IE1JQ1JPQklUX05BTUVfQ09ERV9MRVRURVJTO1xuICAgICAgICAgICAgbGQgKj0gTUlDUk9CSVRfTkFNRV9DT0RFX0xFVFRFUlM7XG4gICAgICAgICAgICBuYW1lID0gQ09ERUJPT0tbaV1baF0gKyBuYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0RnJpZW5kbHlOYW1lID0gYXN5bmMgKHVzYkRldmljZTogVVNCRGV2aWNlKTogUHJvbWlzZTxzdHJpbmcgfCB1bmRlZmluZWQ+ID0+IHtcbiAgICBjb25zdCB0cmFuc3BvcnQgPSBuZXcgV2ViVVNCKHVzYkRldmljZSk7XG4gICAgY29uc3QgcHJvY2Vzc29yID0gbmV3IE1pY3JvQml0KHRyYW5zcG9ydCk7XG5cbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBwcm9jZXNzb3IuY29ubmVjdCgpO1xuICAgICAgICByZXR1cm4gcHJvY2Vzc29yLm1pY3JvYml0RnJpZW5kbHlOYW1lKCk7XG4gICAgfSBjYXRjaCB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgYXdhaXQgcHJvY2Vzc29yLmRpc2Nvbm5lY3QoKTtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UGFpclBhdHRlcm4gPSAoZnJpZW5kbHlOYW1lPzogc3RyaW5nKTogTGVkTWF0cml4IHwgdW5kZWZpbmVkID0+IHtcbiAgICBpZiAoIWZyaWVuZGx5TmFtZSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSA1eDUgbWF0cml4IGZpbGxlZCB3aXRoIGZhbHNlXG4gICAgY29uc3QgcGF0dGVybiA9IEFycmF5LmZyb20oe2xlbmd0aDogNX0sICgpID0+IEFycmF5KDUpLmZpbGwoZmFsc2UpKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTUlDUk9CSVRfTkFNRV9MRU5HVEg7IGkgKyspIHtcbiAgICAgICAgY29uc3QgY29kZVBhZ2UgPSBDT0RFQk9PS1tpXS5qb2luKCcnKTtcbiAgICAgICAgY29uc3QgaW5kZXggPSBjb2RlUGFnZS5pbmRleE9mKGZyaWVuZGx5TmFtZVtpXSk7XG4gICAgICAgIHBhdHRlcm5baV0uZmlsbCh0cnVlLCAwLCBpbmRleCArIDEpO1xuICAgIH1cblxuICAgIC8vIFJvdGF0ZSBwYXR0ZXJuXG4gICAgcmV0dXJuIHBhdHRlcm5bMF0ubWFwKChfLCBpbmRleCkgPT4gcGF0dGVybi5tYXAocm93ID0+IHJvd1tyb3cubGVuZ3RoLTEtaW5kZXhdKSkgYXMgTGVkTWF0cml4O1xufTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYwNyk7XG4iXSwibmFtZXMiOlsidCIsImUiLCJyIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsImhhc093blByb3BlcnR5IiwibiIsInRoaXMiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsImNyZWF0ZSIsIlByb21pc2UiLCJpIiwicyIsIm8iLCJ1IiwibmV4dCIsImMiLCJ0aHJvdyIsImRvbmUiLCJ2YWx1ZSIsInRoZW4iLCJhcHBseSIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJyZXR1cm4iLCJTeW1ib2wiLCJpdGVyYXRvciIsIlR5cGVFcnJvciIsImNhbGwiLCJwb3AiLCJsZW5ndGgiLCJwdXNoIiwiaW5pdCIsIl9tYXhMaXN0ZW5lcnMiLCJkZWZhdWx0TWF4TGlzdGVuZXJzIiwidiIsImEiLCJoIiwiZiIsImwiLCJfZXZlbnRzIiwibmV3TGlzdGVuZXIiLCJlbWl0IiwibGlzdGVuZXIiLCJfZXZlbnRzQ291bnQiLCJ1bnNoaWZ0Iiwid2FybmVkIiwiRXJyb3IiLCJuYW1lIiwiZW1pdHRlciIsInR5cGUiLCJjb3VudCIsImNvbnNvbGUiLCJ3YXJuIiwibG9nIiwiZCIsInJlbW92ZUxpc3RlbmVyIiwiYXJndW1lbnRzIiwicCIsIkV2ZW50RW1pdHRlciIsInVzaW5nRG9tYWlucyIsImRvbWFpbiIsInVuZGVmaW5lZCIsImFjdGl2ZSIsImdldFByb3RvdHlwZU9mIiwic2V0TWF4TGlzdGVuZXJzIiwiaXNOYU4iLCJnZXRNYXhMaXN0ZW5lcnMiLCJlcnJvciIsImNvbnRleHQiLCJkb21haW5FbWl0dGVyIiwiZG9tYWluVGhyb3duIiwiYWRkTGlzdGVuZXIiLCJvbiIsInByZXBlbmRMaXN0ZW5lciIsIm9uY2UiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwia2V5cyIsImxpc3RlbmVycyIsImxpc3RlbmVyQ291bnQiLCJldmVudE5hbWVzIiwiUmVmbGVjdCIsIm93bktleXMiLCJ3IiwieSIsIm0iLCJsb2NrZWQiLCJsb2NrIiwic2V0VGltZW91dCIsInVubG9jayIsImIiLCJ0cmFuc3BvcnQiLCJtb2RlIiwiY2xvY2tGcmVxdWVuY3kiLCJjb25uZWN0ZWQiLCJzZW5kTXV0ZXgiLCJibG9ja1NpemUiLCJwYWNrZXRTaXplIiwib3BlcmF0aW9uQ291bnQiLCJNYXRoIiwiZmxvb3IiLCJidWZmZXJTb3VyY2VUb1VpbnQ4QXJyYXkiLCJVaW50OEFycmF5IiwiYnVmZmVyIiwiYnl0ZUxlbmd0aCIsInNldCIsInNlbGVjdFByb3RvY29sIiwic3dqU2VxdWVuY2UiLCJVaW50MTZBcnJheSIsInNlbmQiLCJ3cml0ZSIsInJlYWQiLCJnZXRVaW50OCIsImNsZWFyQWJvcnQiLCJkYXBJbmZvIiwiZ2V0VWludDE2IiwiZ2V0VWludDMyIiwic2xpY2UiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJzd2pDbG9jayIsInN3alBpbnMiLCJkYXBEZWxheSIsImNvbmZpZ3VyZVRyYW5zZmVyIiwiRGF0YVZpZXciLCJzZXRVaW50OCIsInNldFVpbnQxNiIsImNvbm5lY3QiLCJvcGVuIiwiVWludDMyQXJyYXkiLCJjbG9zZSIsImRpc2Nvbm5lY3QiLCJyZWNvbm5lY3QiLCJyZXNldCIsInRyYW5zZmVyIiwicG9ydCIsInJlZ2lzdGVyIiwiZm9yRWFjaCIsInNldFVpbnQzMiIsInRyYW5zZmVyQmxvY2siLCJnIiwiQSIsIkMiLCJkZWNvZGUiLCJmcm9tQ29kZVBvaW50IiwicGFydGlhbENoYXIiLCJtYXRjaCIsInJlcGxhY2UiLCJkZWNvZGVyUmVwbGFjZXIiLCJjb2RlUG9pbnRBdCIsImNsejMyIiwiVSIsIkUiLCJzZXJpYWxQb2xsaW5nIiwic2VyaWFsTGlzdGVuZXJzIiwiRVZFTlRfU0VSSUFMX0RBVEEiLCJpc0J1ZmZlckJpbmFyeSIsImNoYXJDb2RlQXQiLCJ3cml0ZUJ1ZmZlciIsIm1pbiIsIkVWRU5UX1BST0dSRVNTIiwiZmxhc2giLCJnZXRTZXJpYWxCYXVkcmF0ZSIsInNldFNlcmlhbEJhdWRyYXRlIiwic2VyaWFsV3JpdGUiLCJzcGxpdCIsIm1hcCIsInNlcmlhbFJlYWQiLCJzdGFydFNlcmlhbFJlYWQiLCJzdG9wU2VyaWFsUmVhZCIsIlAiLCJwcm94eSIsIndhaXREZWxheSIsImNvbmNhdFR5cGVkQXJyYXkiLCJyZWFkRFBDb21tYW5kIiwid3JpdGVEUENvbW1hbmQiLCJzZWxlY3RlZEFkZHJlc3MiLCJyZWFkQVBDb21tYW5kIiwiY29uY2F0Iiwid3JpdGVBUENvbW1hbmQiLCJjc3dWYWx1ZSIsInJlYWRNZW0xNkNvbW1hbmQiLCJ3cml0ZU1lbTE2Q29tbWFuZCIsInJlYWRNZW0zMkNvbW1hbmQiLCJ3cml0ZU1lbTMyQ29tbWFuZCIsInRyYW5zZmVyU2VxdWVuY2UiLCJzcGxpY2UiLCJyZWFkRFAiLCJ3cml0ZURQIiwicmVhZEFQIiwid3JpdGVBUCIsInJlYWRNZW0xNiIsIndyaXRlTWVtMTYiLCJyZWFkTWVtMzIiLCJ3cml0ZU1lbTMyIiwicmVhZEJsb2NrIiwid3JpdGVCbG9jayIsIlQiLCJlbmFibGVEZWJ1ZyIsInJlYWRDb3JlUmVnaXN0ZXJDb21tYW5kIiwid3JpdGVDb3JlUmVnaXN0ZXJDb21tYW5kIiwiZ2V0U3RhdGUiLCJpc0hhbHRlZCIsImhhbHQiLCJyZXN1bWUiLCJyZWFkQ29yZVJlZ2lzdGVyIiwicmVhZENvcmVSZWdpc3RlcnMiLCJ3cml0ZUNvcmVSZWdpc3RlciIsImV4ZWN1dGUiLCJzb2Z0UmVzZXQiLCJzZXRUYXJnZXRSZXNldFN0YXRlIiwiRU5BQkxFIiwiS0VZIiwiTCIsImRldmljZSIsIm9zIiwiXyIsImludGVyZmFjZUNsYXNzIiwiY29uZmlndXJhdGlvbiIsImFsd2F5c0NvbnRyb2xUcmFuc2ZlciIsImJ1ZmZlclRvRGF0YVZpZXciLCJpc1ZpZXciLCJidWZmZXJTb3VyY2VUb0J1ZmZlciIsIkJ1ZmZlciIsImZyb20iLCJleHRlbmRCdWZmZXIiLCJzZXRDb25maWd1cmF0aW9uIiwiaW50ZXJmYWNlcyIsImZpbHRlciIsImRlc2NyaXB0b3IiLCJiSW50ZXJmYWNlQ2xhc3MiLCJmaW5kIiwiZW5kcG9pbnRzIiwiaW50ZXJmYWNlTnVtYmVyIiwiZW5kcG9pbnRJbiIsImVuZHBvaW50T3V0IiwiZGlyZWN0aW9uIiwiY2xhaW0iLCJjb250cm9sVHJhbnNmZXIiLCJ4Iiwic2VsZWN0Q29uZmlndXJhdGlvbiIsImFsdGVybmF0ZXMiLCJjbGFpbUludGVyZmFjZSIsInRyYW5zZmVySW4iLCJlbmRwb2ludE51bWJlciIsImNvbnRyb2xUcmFuc2ZlckluIiwicmVxdWVzdFR5cGUiLCJyZWNpcGllbnQiLCJyZXF1ZXN0IiwiaW5kZXgiLCJkYXRhIiwidHJhbnNmZXJPdXQiLCJjb250cm9sVHJhbnNmZXJPdXQiLCJjb25jdXJyZW50IiwicXVldWUiLCJydW5uaW5nIiwicHVtcCIsInNoaWZ0IiwiZm4iLCJyZXNvbHZlIiwicmVqZWN0IiwiYWRkIiwic2VydmljZSIsImdldENoYXJhY3RlcmlzdGljIiwiY2hhcmFjdGVyaXN0aWNzIiwiZ2V0Q2hhcmFjdGVyaXN0aWNzIiwidXVpZCIsImdldENoYXJhY3RlcmlzdGljVmFsdWUiLCJyZWFkVmFsdWUiLCJzZXRDaGFyYWN0ZXJpc3RpY1ZhbHVlIiwid3JpdGVWYWx1ZSIsImhhbmRsZUxpc3RlbmVyIiwic3RhcnROb3RpZmljYXRpb25zIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtb2RlbE51bWJlciIsInNlcmlhbE51bWJlciIsImZpcm13YXJlUmV2aXNpb24iLCJoYXJkd2FyZVJldmlzaW9uIiwibWFudWZhY3R1cmVyIiwiaGVscGVyIiwicmVhZERldmljZUluZm9ybWF0aW9uIiwicmVhZFN0cmluZ0NoYXJhY3RlcmlzdGljIiwiYnl0ZU9mZnNldCIsIlYiLCJpc0V2ZW50TGlzdGVuZXJPYmplY3QiLCJoYW5kbGVFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsImJ1dHRvbkFTdGF0ZSIsImJ1dHRvbkJTdGF0ZSIsIlJlbGVhc2UiLCJTaG9ydFByZXNzIiwiTG9uZ1ByZXNzIiwiRCIsImJ1dHRvbkFTdGF0ZUNoYW5nZWRIYW5kbGVyIiwiYmluZCIsImJ1dHRvbkJTdGF0ZUNoYW5nZWRIYW5kbGVyIiwicmVhZEJ1dHRvbkFTdGF0ZSIsInJlYWRCdXR0b25CU3RhdGUiLCJ0YXJnZXQiLCJsZWRNYXRyaXhTdGF0ZSIsImxlZFRleHQiLCJzY3JvbGxpbmdEZWxheSIsIlMiLCJ3cml0ZVRleHQiLCJlbmNvZGVTdHJpbmciLCJyZWFkTWF0cml4U3RhdGUiLCJ2aWV3VG9MZWRNYXRyaXgiLCJ3cml0ZU1hdHJpeFN0YXRlIiwibGVkTWF0cml4VG9WaWV3IiwiZ2V0U2Nyb2xsaW5nRGVsYXkiLCJzZXRTY3JvbGxpbmdEZWxheSIsIkFycmF5QnVmZmVyIiwiYnl0ZVRvQm9vbEFycmF5IiwicmV2ZXJzZSIsImJvb2xBcnJheVRvQnl0ZSIsInJlZHVjZSIsInRlbXBlcmF0dXJlIiwidGVtcGVyYXR1cmVQZXJpb2QiLCJ0ZW1wZXJhdHVyZUNoYW5nZWRIYW5kbGVyIiwicmVhZFRlbXBlcmF0dXJlIiwiZ2V0SW50OCIsImdldFRlbXBlcmF0dXJlUGVyaW9kIiwic2V0VGVtcGVyYXR1cmVQZXJpb2QiLCJhY2NlbGVyb21ldGVyRGF0YSIsImFjY2VsZXJvbWV0ZXJQZXJpb2QiLCJhY2NlbGVyb21ldGVyRGF0YUNoYW5nZWRIYW5kbGVyIiwicmVhZEFjY2VsZXJvbWV0ZXJEYXRhIiwiZGF0YVZpZXdUb0FjY2VsZXJvbWV0ZXJEYXRhIiwiZ2V0QWNjZWxlcm9tZXRlclBlcmlvZCIsInNldEFjY2VsZXJvbWV0ZXJQZXJpb2QiLCJnZXRJbnQxNiIsInoiLCJtYWduZXRvbWV0ZXJEYXRhIiwibWFnbmV0b21ldGVyUGVyaW9kIiwibWFnbmV0b21ldGVyQmVhcmluZyIsIm1hZ25ldG9tZXRlckNhbGlicmF0aW9uIiwidW5rbm93biIsInJlcXVlc3RlZCIsImNvbXBsZXRlZCIsImVycm9yZWQiLCJCIiwiTSIsInEiLCJtYWduZXRvbWV0ZXJEYXRhQ2hhbmdlZEhhbmRsZXIiLCJtYWduZXRvbWV0ZXJCZWFyaW5nQ2hhbmdlZEhhbmRsZXIiLCJtYWduZXRvbWV0ZXJDYWxpYnJhdGlvbkNoYW5nZWRIYW5kbGVyIiwiY2FsaWJyYXRlIiwicmVhZE1hZ25ldG9tZXRlckRhdGEiLCJkYXRhVmlld1RvTWFnbmV0b21ldGVyRGF0YSIsInJlYWRNYWduZXRvbWV0ZXJCZWFyaW5nIiwiZ2V0TWFnbmV0b21ldGVyUGVyaW9kIiwic2V0TWFnbmV0b21ldGVyUGVyaW9kIiwicGluRGF0YSIsInBpbkFkQ29uZmlndXJhdGlvbiIsInBpbklvQ29uZmlndXJhdGlvbiIsInB3bUNvbnRyb2wiLCJEaWdpdGFsIiwiQW5hbG9ndWUiLCJPdXRwdXQiLCJJbnB1dCIsIkgiLCJSIiwicGluRGF0YUNoYW5nZWRIYW5kbGVyIiwicmVhZFBpbkRhdGEiLCJkYXRhVmlld1RvUGluRGF0YSIsIndyaXRlUGluRGF0YSIsInBpbkRhdGFUb0RhdGFWaWV3IiwiZ2V0QWRDb25maWd1cmF0aW9uIiwiZGF0YVZpZXdUb0NvbmZpZyIsInNldEFkQ29uZmlndXJhdGlvbiIsImNvbmZpZ1RvRGF0YVZpZXciLCJnZXRJb0NvbmZpZ3VyYXRpb24iLCJzZXRJb0NvbmZpZ3VyYXRpb24iLCJzZXRQd21Db250cm9sIiwicHdtQ29udHJvbERhdGFUb0RhdGFWaWV3IiwicGluIiwicGVyaW9kIiwidHgiLCJyeCIsIkkiLCJPIiwicmVjZWl2ZUhhbmRsZXIiLCJyZWNlaXZlVGV4dEhhbmRsZXIiLCJzZW5kVGV4dCIsIm1pY3JvQml0UmVxdWlyZW1lbnRzIiwibWljcm9CaXRFdmVudCIsImNsaWVudFJlcXVpcmVtZW50cyIsImNsaWVudEV2ZW50IiwiayIsImoiLCJldmVudEhhbmRsZXIiLCJtaWNyb2JpdFJlcXVpcmVtZW50c0NoYW5nZWRIYW5kbGVyIiwiZ2V0TWljcm9iaXRSZXF1aXJlbWVudHMiLCJ2aWV3VG9NaWNyb2JpdEV2ZW50Iiwic2V0Q2xpZW50UmVxdWlyZW1lbnRzIiwicmVhZE1pY3JvYml0RXZlbnQiLCJ3cml0ZUNsaWVudEV2ZW50IiwiZGZ1Q29udHJvbCIsIk4iLCJyZXF1ZXN0RGZ1IiwicmVxdWVzdEZsYXNoQ29kZSIsInNlcnZpY2VzIiwiY3JlYXRlU2VydmljZSIsIkYiLCJyZXF1ZXN0RGV2aWNlIiwiZmlsdGVycyIsIm5hbWVQcmVmaXgiLCJvcHRpb25hbFNlcnZpY2VzIiwiRyIsImdhdHQiLCJnZXRQcmltYXJ5U2VydmljZXMiLCJkZXZpY2VJbmZvcm1hdGlvblNlcnZpY2UiLCJidXR0b25TZXJ2aWNlIiwibGVkU2VydmljZSIsInRlbXBlcmF0dXJlU2VydmljZSIsImFjY2VsZXJvbWV0ZXJTZXJ2aWNlIiwibWFnbmV0b21ldGVyU2VydmljZSIsInVhcnRTZXJ2aWNlIiwiZXZlbnRTZXJ2aWNlIiwiZGZ1Q29udHJvbFNlcnZpY2UiLCJpb1BpblNlcnZpY2UiLCJ1c2JOYXZpZ2F0b3IiLCJuYXZpZ2F0b3IiLCJ1c2IiLCJibGVOYXZpZ2F0b3IiLCJibHVldG9vdGgiLCJ1c2JCdXR0b25FbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJmbGFzaEJ1dHRvbkVsIiwiYmxlQnV0dG9uRWwiLCJyZXN1bHRFbCIsIm1hdHJpeEVsIiwidXNiRGV2aWNlIiwiZnJpZW5kbHlOYW1lIiwibWVzc2FnZSIsImNsZWFyRmlyc3QiLCJpbm5lclRleHQiLCJ1cGRhdGVEZXZpY2UiLCJnZXRGcmllbmRseU5hbWUiLCJtYXRyaXgiLCJnZXRQYWlyUGF0dGVybiIsImRpc2FibGVkIiwic3RhdGUiLCJpbm5lckhUTUwiLCJsZWQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJjbGFzc05hbWUiLCJhcHBlbmRDaGlsZCIsInVwZGF0ZU1hdHJpeCIsInZlbmRvcklkIiwicHJvZHVjdElkIiwicmVzcG9uc2UiLCJmZXRjaCIsImFycmF5QnVmZmVyIiwiV2ViVVNCIiwiREFQTGluayIsInByb2dyZXNzIiwiY2VpbCIsImJsZURldmljZSIsImdldFNlcnZpY2VzIiwiZXYiLCJ3aW5kb3ciLCJDT0RFQk9PSyIsIk1pY3JvQml0IiwiQ29ydGV4TSIsIm1pY3JvYml0RnJpZW5kbHlOYW1lIiwic2VyaWFsIiwiRklDUiIsImxkIiwicHJvY2Vzc29yIiwicGF0dGVybiIsImZpbGwiLCJqb2luIiwiaW5kZXhPZiIsInJvdyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZGVmaW5pdGlvbiIsImtleSIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJ0b1N0cmluZ1RhZyJdLCJzb3VyY2VSb290IjoiIn0=